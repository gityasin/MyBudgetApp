{"version":3,"file":"static/js/main.e403ee15.js","mappings":"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","sources":["src/services/storage.js","src/context/TransactionsContext.js","src/context/CategoriesContext.js","src/i18n/translations.js","src/context/LanguageContext.js","src/services/format.js","src/components/TransactionItem.js","src/screens/HomeScreen.js","src/screens/AddTransactionScreen.js","src/screens/ChartScreen.js","src/notifications/NotificationsService.js","theme.js","src/screens/SettingsScreen.js","src/screens/OnboardingScreen.js","src/navigation/RootNavigation.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst TRANSACTIONS_KEY = '@transactions';\n\nexport async function loadTransactions() {\n  try {\n    const jsonValue = await AsyncStorage.getItem(TRANSACTIONS_KEY);\n    return jsonValue != null ? JSON.parse(jsonValue) : [];\n  } catch (e) {\n    console.warn('Error loading transactions:', e);\n    return [];\n  }\n}\n\nexport async function saveTransactions(transactions) {\n  try {\n    const jsonValue = JSON.stringify(transactions);\n    await AsyncStorage.setItem(TRANSACTIONS_KEY, jsonValue);\n  } catch (e) {\n    console.warn('Error saving transactions:', e);\n  }\n}\n","import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport { loadTransactions, saveTransactions } from '../services/storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst initialState = {\n  transactions: [],\n};\n\nfunction transactionsReducer(state, action) {\n  console.log(\"Reducer called with action:\", action);\n\n  switch (action.type) {\n    case 'SET_TRANSACTIONS':\n      console.log(\"Setting transactions:\", action.payload);\n      return { ...state, transactions: action.payload };\n    case 'ADD_TRANSACTION':\n      console.log(\"Adding transaction:\", action.payload);\n      return { ...state, transactions: [...state.transactions, action.payload] };\n    case 'UPDATE_TRANSACTION':\n      console.log(\"Updating transaction:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.map(tx =>\n          tx.id === action.payload.id ? action.payload : tx\n        ),\n      };\n    case 'DELETE_TRANSACTION':\n      console.log(\"Deleting transaction with ID:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.filter(tx => tx.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n\nconst TransactionsContext = createContext();\n\nexport function TransactionsProvider({ children }) {\n  const [state, dispatch] = useReducer(transactionsReducer, initialState);\n  const [selectedCurrency, setSelectedCurrency] = useState('TRY');\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        const [stored, storedCurrency, userPreferences] = await Promise.all([\n          loadTransactions(),\n          AsyncStorage.getItem('selectedCurrency'),\n          AsyncStorage.getItem('userPreferences')\n        ]);\n\n        dispatch({ type: 'SET_TRANSACTIONS', payload: stored });\n        \n        // First check userPreferences (set during onboarding)\n        if (userPreferences) {\n          const { currency } = JSON.parse(userPreferences);\n          if (currency) {\n            setSelectedCurrency(currency);\n            await AsyncStorage.setItem('selectedCurrency', currency);\n            return;\n          }\n        }\n        \n        // Fall back to stored currency if available\n        if (storedCurrency) {\n          setSelectedCurrency(storedCurrency);\n        }\n      } catch (error) {\n        console.error('Error loading initial data:', error);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Save transactions whenever they change\n  useEffect(() => {\n    console.log(\"Saving transactions to storage:\", state.transactions);\n    saveTransactions(state.transactions);\n  }, [state.transactions]);\n\n  // Handle currency changes - now just updates the display currency\n  const handleCurrencyChange = async (newCurrency) => {\n    if (newCurrency === selectedCurrency) return;\n\n    try {\n      await AsyncStorage.setItem('selectedCurrency', newCurrency);\n      setSelectedCurrency(newCurrency);\n    } catch (error) {\n      console.error('Error changing currency:', error);\n    }\n  };\n\n  return (\n    <TransactionsContext.Provider \n      value={{ \n        state, \n        dispatch,\n        selectedCurrency,\n        handleCurrencyChange\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  return useContext(TransactionsContext);\n}","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CATEGORIES_STORAGE_KEY = '@categories';\r\nconst DEFAULT_CATEGORIES = ['Food', 'Transport', 'Shopping', 'Bills', 'Entertainment', 'Other'];\r\n\r\nconst CategoriesContext = createContext();\r\n\r\nexport function CategoriesProvider({ children }) {\r\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    // Load categories from storage on mount\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const storedCategories = await AsyncStorage.getItem(CATEGORIES_STORAGE_KEY);\r\n      if (storedCategories) {\r\n        setCategories(JSON.parse(storedCategories));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n    }\r\n  };\r\n\r\n  const saveCategories = async (newCategories) => {\r\n    try {\r\n      await AsyncStorage.setItem(CATEGORIES_STORAGE_KEY, JSON.stringify(newCategories));\r\n      setCategories(newCategories);\r\n    } catch (error) {\r\n      console.error('Error saving categories:', error);\r\n    }\r\n  };\r\n\r\n  const addCategory = async (category) => {\r\n    if (!category || categories.includes(category)) return;\r\n    const newCategories = [...categories, category];\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const removeCategory = async (category) => {\r\n    const newCategories = categories.filter(c => c !== category);\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const updateCategory = async (oldCategory, newCategory) => {\r\n    if (!newCategory || categories.includes(newCategory)) return;\r\n    const newCategories = categories.map(c => \r\n      c === oldCategory ? newCategory : c\r\n    );\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <CategoriesContext.Provider \r\n      value={{\r\n        categories,\r\n        addCategory,\r\n        removeCategory,\r\n        updateCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </CategoriesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCategories() {\r\n  return useContext(CategoriesContext);\r\n} ","export const translations = {\r\n  en: {\r\n    // General\r\n    settings: 'Settings',\r\n    save: 'Save',\r\n    cancel: 'Cancel',\r\n    add: 'Add',\r\n    edit: 'Edit',\r\n    delete: 'Delete',\r\n    close: 'Close',\r\n    update: 'Update',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'App Settings',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDesc: 'Toggle dark/light theme',\r\n    dailyReminders: 'Daily Reminders',\r\n    dailyRemindersDesc: 'Get notified to add transactions',\r\n    currencyFormat: 'Currency Format',\r\n    currentCurrency: 'Current: ',\r\n    categories: 'Categories',\r\n    addNewCategory: 'Add New Category',\r\n    editCategory: 'Edit Category',\r\n    categoryName: 'Category Name',\r\n    language: 'Language',\r\n    languageDesc: 'Change application language',\r\n    \r\n    // About Section\r\n    about: 'About',\r\n    version: 'Version',\r\n    helpAndSupport: 'Help & Support',\r\n    helpDesc: 'Get assistance with the app',\r\n    privacyPolicy: 'Privacy Policy',\r\n    privacyPolicyDesc: 'Read our privacy policy',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'Add Transaction',\r\n    amount: 'Amount',\r\n    category: 'Category',\r\n    date: 'Date',\r\n    note: 'Note',\r\n    income: 'Income',\r\n    expense: 'Expense',\r\n    editTransaction: 'Edit Transaction',\r\n    description: 'Description',\r\n    recurringMonthly: 'Recurring Monthly?',\r\n    transactionUpdated: 'Transaction updated successfully!',\r\n    transactionAdded: 'Transaction added successfully!',\r\n    recentTransactions: 'Recent Transactions',\r\n    selectCategory: 'Select Category',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Description is required',\r\n    amountRequired: 'Amount is required',\r\n    invalidAmount: 'Please enter a valid positive amount',\r\n    categoryRequired: 'Category is required',\r\n    \r\n    // Home Screen\r\n    myBudget: 'My Budget',\r\n    totalBalance: 'Total Balance',\r\n    noTransactions: 'No transactions yet',\r\n    addFirstTransaction: 'Tap the + button to add your first transaction',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Expense Breakdown',\r\n    totalSpent: 'Total Spent',\r\n    pieChart: 'Pie Chart',\r\n    donutChart: 'Donut Chart',\r\n    summary: 'Summary',\r\n    total: 'Total',\r\n    noExpenseData: 'No expense data available',\r\n    addExpensesToSee: 'Add some expenses to see your spending breakdown',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Select Your Language',\r\n    selectCurrency: 'Select Your Currency',\r\n    chooseTheme: 'Choose Your Theme',\r\n    lightTheme: 'Light Theme',\r\n    darkTheme: 'Dark Theme',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    getStarted: 'Get Started',\r\n    welcome: 'Welcome to My Budget',\r\n\r\n    // Navigation\r\n    tabHome: 'Home',\r\n    tabCharts: 'Charts',\r\n    tabSettings: 'Settings',\r\n  },\r\n  tr: {\r\n    // General\r\n    settings: 'Ayarlar',\r\n    save: 'Kaydet',\r\n    cancel: 'İptal',\r\n    add: 'Ekle',\r\n    edit: 'Düzenle',\r\n    delete: 'Sil',\r\n    close: 'Kapat',\r\n    update: 'Güncelle',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'Uygulama Ayarları',\r\n    darkMode: 'Karanlık Mod',\r\n    darkModeDesc: 'Karanlık/aydınlık tema değiştir',\r\n    dailyReminders: 'Günlük Hatırlatmalar',\r\n    dailyRemindersDesc: 'İşlem ekleme hatırlatmaları al',\r\n    currencyFormat: 'Para Birimi',\r\n    currentCurrency: 'Mevcut: ',\r\n    categories: 'Kategoriler',\r\n    addNewCategory: 'Yeni Kategori Ekle',\r\n    editCategory: 'Kategori Düzenle',\r\n    categoryName: 'Kategori Adı',\r\n    language: 'Dil',\r\n    languageDesc: 'Uygulama dilini değiştir',\r\n    \r\n    // About Section\r\n    about: 'Hakkında',\r\n    version: 'Versiyon',\r\n    helpAndSupport: 'Yardım & Destek',\r\n    helpDesc: 'Uygulama ile ilgili yardım alın',\r\n    privacyPolicy: 'Gizlilik Politikası',\r\n    privacyPolicyDesc: 'Gizlilik politikamızı okuyun',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'İşlem Ekle',\r\n    amount: 'Tutar',\r\n    category: 'Kategori',\r\n    date: 'Tarih',\r\n    note: 'Not',\r\n    income: 'Gelir',\r\n    expense: 'Gider',\r\n    editTransaction: 'İşlem Düzenle',\r\n    description: 'Açıklama',\r\n    recurringMonthly: 'Aylık Tekrar?',\r\n    transactionUpdated: 'İşlem başarıyla güncellendi!',\r\n    transactionAdded: 'İşlem başarıyla eklendi!',\r\n    recentTransactions: 'Son İşlemler',\r\n    selectCategory: 'Kategori Seç',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Açıklama gerekli',\r\n    amountRequired: 'Tutar gerekli',\r\n    invalidAmount: 'Lütfen geçerli bir pozitif tutar girin',\r\n    categoryRequired: 'Kategori gerekli',\r\n    \r\n    // Home Screen\r\n    myBudget: 'Bütçem',\r\n    totalBalance: 'Toplam Bakiye',\r\n    noTransactions: 'Henüz işlem yok',\r\n    addFirstTransaction: 'İlk işleminizi eklemek için + butonuna dokunun',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Gider Dağılımı',\r\n    totalSpent: 'Toplam Harcama',\r\n    pieChart: 'Pasta Grafik',\r\n    donutChart: 'Halka Grafik',\r\n    summary: 'Özet',\r\n    total: 'Toplam',\r\n    noExpenseData: 'Gider verisi bulunmuyor',\r\n    addExpensesToSee: 'Harcama dağılımını görmek için gider ekleyin',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Dilinizi Seçin',\r\n    selectCurrency: 'Para Biriminizi Seçin',\r\n    chooseTheme: 'Temanızı Seçin',\r\n    lightTheme: 'Açık Tema',\r\n    darkTheme: 'Koyu Tema',\r\n    next: 'İleri',\r\n    previous: 'Geri',\r\n    getStarted: 'Başlayın',\r\n    welcome: 'My Budget\\'a Hoş Geldiniz',\r\n\r\n    // Navigation\r\n    tabHome: 'Ana Sayfa',\r\n    tabCharts: 'Grafikler',\r\n    tabSettings: 'Ayarlar',\r\n  }\r\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { translations } from '../i18n/translations';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  useEffect(() => {\r\n    // Load saved language preference\r\n    const loadLanguage = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('userLanguage');\r\n        if (savedLanguage) {\r\n          setLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language:', error);\r\n      }\r\n    };\r\n    \r\n    loadLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (newLanguage) => {\r\n    try {\r\n      await AsyncStorage.setItem('userLanguage', newLanguage);\r\n      setLanguage(newLanguage);\r\n    } catch (error) {\r\n      console.error('Error saving language:', error);\r\n    }\r\n  };\r\n\r\n  const t = (key) => {\r\n    return translations[language]?.[key] || translations.en[key] || key;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n}; ","// Currency formatting utilities\r\nexport const CURRENCIES = {\r\n  TRY: { symbol: '₺', locale: 'tr-TR', position: 'after', rate: 31.89 },\r\n  USD: { symbol: '$', locale: 'en-US', position: 'before', rate: 1 },\r\n  EUR: { symbol: '€', locale: 'de-DE', position: 'after', rate: 0.91 },\r\n  GBP: { symbol: '£', locale: 'en-GB', position: 'before', rate: 0.79 },\r\n  JPY: { symbol: '¥', locale: 'ja-JP', position: 'before', rate: 149.45 },\r\n  CNY: { symbol: '¥', locale: 'zh-CN', position: 'before', rate: 7.23 },\r\n  INR: { symbol: '₹', locale: 'en-IN', position: 'before', rate: 83.12 },\r\n  AUD: { symbol: '$', locale: 'en-AU', position: 'before', rate: 1.54 },\r\n  CAD: { symbol: '$', locale: 'en-CA', position: 'before', rate: 1.36 },\r\n  CHF: { symbol: 'CHF', locale: 'de-CH', position: 'before', rate: 0.89 },\r\n};\r\n\r\nexport const convertAmount = (amount, fromCurrency = 'USD', toCurrency = 'USD') => {\r\n  const fromRate = CURRENCIES[fromCurrency]?.rate || 1;\r\n  const toRate = CURRENCIES[toCurrency]?.rate || 1;\r\n  \r\n  // Convert to USD first, then to target currency\r\n  const amountInUSD = amount / fromRate;\r\n  return amountInUSD * toRate;\r\n};\r\n\r\nexport const formatCurrency = (amount, currencyCode = 'USD') => {\r\n  try {\r\n    const currency = CURRENCIES[currencyCode] || CURRENCIES.USD;\r\n    const formattedNumber = new Intl.NumberFormat(currency.locale, {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n\r\n    return currency.position === 'before' \r\n      ? `${currency.symbol}${formattedNumber}`\r\n      : `${formattedNumber} ${currency.symbol}`;\r\n  } catch (error) {\r\n    console.warn('Error formatting currency:', error);\r\n    return `${CURRENCIES.USD.symbol}${amount.toFixed(2)}`;\r\n  }\r\n};\r\n\r\nexport const getCurrencySymbol = (currencyCode = 'USD') => {\r\n  return CURRENCIES[currencyCode]?.symbol || CURRENCIES.USD.symbol;\r\n};\r\n\r\nexport const getAvailableCurrencies = () => {\r\n  return Object.entries(CURRENCIES).map(([code, details]) => ({\r\n    code,\r\n    symbol: details.symbol,\r\n    label: `${code} (${details.symbol})`,\r\n  }));\r\n};\r\n","import React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { Surface, Text, List, useTheme, TouchableRipple, Menu, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CATEGORY_ICONS = {\n  Food: 'silverware-fork-knife',\n  Transport: 'car',\n  Shopping: 'cart',\n  Bills: 'file-document',\n  Entertainment: 'gamepad-variant',\n  Other: 'dots-horizontal',\n};\n\nexport default function TransactionItem({ transaction, onPress }) {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { dispatch, selectedCurrency } = useTransactions();\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const navigation = useNavigation();\n  const { t } = useLanguage();\n\n  const isExpense = transaction.amount < 0;\n  const amount = Math.abs(transaction.amount);\n  const icon = CATEGORY_ICONS[transaction.category] || CATEGORY_ICONS.Other;\n\n  const formattedDate = new Date(transaction.date).toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  const handleDelete = () => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: transaction.id,\n    });\n    setMenuVisible(false);\n  };\n\n  const handleEdit = () => {\n    setMenuVisible(false);\n    navigation.navigate('AddTransaction', {\n      isEditing: true,\n      transaction: {\n        ...transaction,\n        amount: Math.abs(transaction.amount),\n      },\n    });\n  };\n\n  const dynamicStyles = {\n    menuContent: {\n      backgroundColor: colors.surface,\n    }\n  };\n\n  return (\n    <Surface style={styles.surface} elevation={1}>\n      <View style={styles.container}>\n        <TouchableRipple\n          onPress={(e) => {\n            if (!menuVisible) {\n              onPress();\n            }\n          }}\n          style={[styles.touchable, { flex: 1 }]}\n          accessibilityRole=\"button\"\n          disabled={menuVisible}\n          accessibilityLabel={`${transaction.description} transaction of ${isExpense ? t('expense') : t('income')} ${formatCurrency(amount, selectedCurrency)}`}\n        >\n          <List.Item\n            title={transaction.description}\n            description={`${transaction.category} • ${formattedDate}`}\n            left={props => (\n              <MaterialCommunityIcons\n                name={icon}\n                size={24}\n                color={colors.primary}\n                style={props.style}\n              />\n            )}\n            right={props => (\n              <View style={styles.rightContainer}>\n                <Text\n                  {...props}\n                  variant=\"titleMedium\"\n                  style={[\n                    styles.amount,\n                    { color: isExpense ? colors.error : colors.success }\n                  ]}\n                >\n                  {isExpense ? '-' : '+'}{formatCurrency(amount, selectedCurrency)}\n                </Text>\n              </View>\n            )}\n            titleStyle={styles.title}\n            descriptionStyle={[styles.description, { color: colors.textSecondary }]}\n          />\n        </TouchableRipple>\n        \n        <View style={styles.menuContainer}>\n          <Menu\n            visible={menuVisible}\n            onDismiss={() => setMenuVisible(false)}\n            anchor={\n              <TouchableOpacity \n                onPress={(e) => {\n                  e.stopPropagation();\n                  setMenuVisible(true);\n                }}\n                style={styles.menuButton}\n              >\n                <MaterialCommunityIcons\n                  name=\"dots-vertical\"\n                  size={24}\n                  color={colors.primary}\n                />\n              </TouchableOpacity>\n            }\n            contentStyle={[dynamicStyles.menuContent]}\n            anchorPosition=\"bottom\"\n            statusBarHeight={0}\n            overlayAccessibilityLabel=\"Close menu\"\n          >\n            <Menu.Item\n              onPress={(e) => {\n                e.stopPropagation();\n                handleEdit();\n              }}\n              title={t('edit')}\n              leadingIcon={props => (\n                <MaterialCommunityIcons\n                  name=\"pencil\"\n                  size={20}\n                  color={props.color}\n                />\n              )}\n            />\n            <Menu.Item\n              onPress={(e) => {\n                e.stopPropagation();\n                handleDelete();\n              }}\n              title={t('delete')}\n              leadingIcon={props => (\n                <MaterialCommunityIcons\n                  name=\"delete\"\n                  size={20}\n                  color={props.color}\n                />\n              )}\n            />\n          </Menu>\n        </View>\n      </View>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  surface: {\n    marginBottom: 8,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  touchable: {\n    flex: 1,\n  },\n  title: {\n    fontWeight: '500',\n  },\n  description: {\n    marginTop: 4,\n  },\n  amount: {\n    fontWeight: '600',\n    alignSelf: 'center',\n  },\n  rightContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  menuContainer: {\n    paddingRight: 8,\n  },\n  menuButton: {\n    padding: 8,\n  },\n  menu: {\n    position: 'absolute',\n    right: 8,\n    zIndex: 3,\n  },\n});","import React from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { Text, FAB, Surface, useTheme, Divider } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport TransactionItem from '../components/TransactionItem';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function HomeScreen({ navigation }) {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n\n  // Calculate totals in the selected currency\n  const total = state.transactions.reduce((acc, tx) => acc + tx.amount, 0);\n  const income = state.transactions\n    .filter(tx => tx.amount > 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n  const expenses = state.transactions\n    .filter(tx => tx.amount < 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n\n  const renderHeader = () => (\n    <>\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          {t('myBudget')}\n        </Text>\n        \n        <View style={styles.balanceRow}>\n          <Text variant=\"titleLarge\">{t('totalBalance')}</Text>\n          <Text \n            variant=\"headlineMedium\"\n            style={{ color: total >= 0 ? theme.colors.success : theme.colors.error }}\n          >\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n\n        <Divider style={styles.divider} />\n        \n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.success }}>\n              {t('income')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.success }}>\n              +{formatCurrency(income, selectedCurrency)}\n            </Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.error }}>\n              {t('expense')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.error }}>\n              {formatCurrency(Math.abs(expenses), selectedCurrency)}\n            </Text>\n          </View>\n        </View>\n      </Surface>\n\n      <Text variant=\"titleLarge\" style={styles.sectionTitle}>\n        {t('recentTransactions')}\n      </Text>\n    </>\n  );\n\n  const renderEmptyList = () => (\n    <View style={styles.emptyContainer}>\n      <Text variant=\"bodyLarge\" style={{ color: theme.colors.textSecondary }}>\n        {t('noTransactions')}\n      </Text>\n      <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n        {t('addFirstTransaction')}\n      </Text>\n    </View>\n  );\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <FlatList\n        data={state.transactions}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <TransactionItem \n            transaction={item}\n            onPress={() => {\n              navigation.navigate('AddTransaction', {\n                isEditing: true,\n                transaction: item,\n              });\n            }}\n          />\n        )}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={renderEmptyList}\n        contentContainerStyle={styles.listContent}\n      />\n\n      <FAB\n        icon={props => (\n          <MaterialCommunityIcons\n            name=\"plus\"\n            size={24}\n            color={props.color}\n          />\n        )}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        onPress={() => navigation.navigate('AddTransaction')}\n        label={t('addTransaction')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n    paddingBottom: 80, // Space for FAB\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  title: {\n    marginBottom: 16,\n  },\n  balanceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    alignItems: 'flex-start',\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 32,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Animated } from 'react-native';\nimport { TextInput, Button, Switch, Text, HelperText, useTheme, SegmentedButtons, Menu } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { getCurrencySymbol } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CustomSnackbar = ({ visible, message, style }) => {\n  const [fadeAnim] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    if (visible) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return (\n    <Animated.View\n      style={[\n        styles.snackbar,\n        style,\n        {\n          opacity: fadeAnim,\n          transform: [{\n            translateY: fadeAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [50, 0],\n            }),\n          }],\n        },\n      ]}\n    >\n      <Text style={styles.snackbarText}>{message}</Text>\n    </Animated.View>\n  );\n};\n\nexport default function AddTransactionScreen({ navigation, route }) {\n  console.log('=== AddTransactionScreen Component Start ===');\n  console.log('Navigation prop:', navigation);\n  console.log('Route prop:', route);\n  \n  const { dispatch, selectedCurrency } = useTransactions();\n  const { categories, addCategory } = useCategories();\n  console.log('TransactionsContext dispatch available:', !!dispatch);\n  \n  const theme = useTheme();\n  console.log('Theme loaded:', !!theme);\n  \n  const { colors } = theme;\n  const { t } = useLanguage();\n\n  console.log('AddTransactionScreen mounted with route params:', route.params);\n\n  const params = route.params || {};\n  const isEditing = Boolean(params.isEditing);\n  const existingTransaction = params.transaction;\n\n  console.log('Is editing:', isEditing);\n  console.log('Existing transaction:', existingTransaction);\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [transactionType, setTransactionType] = useState('expense');\n  const [errors, setErrors] = useState({});\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n\n  useEffect(() => {\n    console.log('Setting form values. IsEditing:', isEditing, 'Transaction:', existingTransaction);\n    if (isEditing && existingTransaction) {\n      console.log('Existing transaction ID:', existingTransaction.id);\n      setDescription(existingTransaction.description || '');\n      setAmount(existingTransaction.amount ? Math.abs(existingTransaction.amount).toString() : '');\n      setCategory(existingTransaction.category || '');\n      setIsRecurring(Boolean(existingTransaction.isRecurring));\n      setTransactionType(existingTransaction.amount < 0 ? 'expense' : 'income');\n    }\n  }, [isEditing, existingTransaction]);\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!description.trim()) {\n      newErrors.description = t('descriptionRequired');\n    }\n\n    if (!amount) {\n      newErrors.amount = t('amountRequired');\n    } else if (isNaN(amount) || parseFloat(amount) <= 0) {\n      newErrors.amount = t('invalidAmount');\n    }\n\n    if (!category.trim()) {\n      newErrors.category = t('categoryRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    const parsedAmount = parseFloat(amount);\n    const finalAmount = transactionType === 'expense' ? -parsedAmount : parsedAmount;\n    const trimmedCategory = category.trim();\n\n    // If the category is new (not in the existing categories), add it\n    if (trimmedCategory && !categories.includes(trimmedCategory)) {\n      await addCategory(trimmedCategory);\n    }\n\n    const transactionData = {\n      description: description.trim(),\n      amount: finalAmount,\n      date: new Date().toISOString().split('T')[0],\n      category: trimmedCategory,\n      isRecurring,\n      type: transactionType,\n    };\n\n    if (isEditing) {\n      dispatch({\n        type: 'UPDATE_TRANSACTION',\n        payload: {\n          id: existingTransaction.id,\n          ...transactionData,\n        },\n      });\n    } else {\n      const newTransactionId = Date.now().toString();\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: {\n          id: newTransactionId,\n          ...transactionData,\n        },\n      });\n    }\n\n    setShowSnackbar(true);\n    setTimeout(() => {\n      setShowSnackbar(false);\n      navigation.goBack();\n    }, 1500);\n  };\n\n  return (\n    <>\n      <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\n        <View style={styles.content}>\n          <Text variant=\"headlineMedium\" style={[styles.title, { color: colors.primary }]}>\n            {isEditing ? t('editTransaction') : t('addTransaction')}\n          </Text>\n\n          <SegmentedButtons\n            value={transactionType}\n            onValueChange={setTransactionType}\n            buttons={[\n              { value: 'expense', label: t('expense') },\n              { value: 'income', label: t('income') },\n            ]}\n            style={styles.segmentedButtons}\n          />\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('description')}\n            value={description}\n            onChangeText={(text) => {\n              setDescription(text);\n              setErrors({ ...errors, description: '' });\n            }}\n            error={!!errors.description}\n            style={styles.input}\n            accessibilityLabel=\"Transaction description input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.description}>\n            {errors.description}\n          </HelperText>\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('amount')}\n            value={amount}\n            onChangeText={(text) => {\n              setAmount(text);\n              setErrors({ ...errors, amount: '' });\n            }}\n            keyboardType=\"decimal-pad\"\n            error={!!errors.amount}\n            style={styles.input}\n            left={<TextInput.Affix text={getCurrencySymbol(selectedCurrency)} />}\n            accessibilityLabel=\"Transaction amount input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.amount}>\n            {errors.amount}\n          </HelperText>\n\n          <View style={styles.categoryInputContainer}>\n            <Menu\n              visible={showCategoryMenu}\n              onDismiss={() => setShowCategoryMenu(false)}\n              anchor={\n                <TextInput\n                  mode=\"outlined\"\n                  label={t('category')}\n                  value={category}\n                  onChangeText={(text) => {\n                    setCategory(text);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  error={!!errors.category}\n                  style={[styles.input, { flex: 1 }]}\n                  right={\n                    <TextInput.Icon \n                      icon={() => (\n                        <MaterialCommunityIcons\n                          name=\"menu-down\"\n                          size={24}\n                          color={colors.primary}\n                        />\n                      )}\n                      onPress={() => setShowCategoryMenu(true)}\n                    />\n                  }\n                  onPressIn={() => setShowCategoryMenu(true)}\n                  accessibilityLabel=\"Transaction category input\"\n                />\n              }\n            >\n              {categories.map((cat) => (\n                <Menu.Item\n                  key={cat}\n                  onPress={() => {\n                    setCategory(cat);\n                    setShowCategoryMenu(false);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  title={cat}\n                />\n              ))}\n            </Menu>\n          </View>\n          <HelperText type=\"error\" visible={!!errors.category}>\n            {errors.category}\n          </HelperText>\n\n          <View style={styles.switchContainer}>\n            <Text variant=\"bodyLarge\">{t('recurringMonthly')}</Text>\n            <Switch\n              value={isRecurring}\n              onValueChange={setIsRecurring}\n              color={colors.primary}\n            />\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={handleSubmit}\n            style={styles.button}\n            labelStyle={styles.buttonLabel}\n            accessibilityLabel={isEditing ? \"Update transaction button\" : \"Add transaction button\"}\n          >\n            {isEditing ? t('update') : t('add')}\n          </Button>\n        </View>\n      </ScrollView>\n      <CustomSnackbar\n        visible={showSnackbar}\n        message={isEditing ? t('transactionUpdated') : t('transactionAdded')}\n        style={{ backgroundColor: colors.success }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 16,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 8,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 16,\n  },\n  switchLabel: {\n    marginLeft: 8,\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 16,\n    elevation: 4,\n  },\n  snackbarText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 16,\n    paddingVertical: 8,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  categoryInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});","import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, ScrollView, Platform } from 'react-native';\nimport { VictoryPie, VictoryLabel, VictoryLegend, VictoryAnimation } from 'victory-native';\nimport { Text, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CHART_TYPES = [\n  { value: 'pie', label: 'pieChart' },\n  { value: 'donut', label: 'donutChart' },\n];\n\nexport default function ChartScreen() {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n  const [chartType, setChartType] = useState('donut');\n\n  // Calculate category totals and percentages for expenses only\n  const categorySums = state.transactions\n    .filter(tx => tx.amount < 0) // Only include expenses\n    .reduce((acc, tx) => {\n      const cat = tx.category || 'Uncategorized';\n      acc[cat] = (acc[cat] || 0) + Math.abs(tx.amount); // Use absolute value for display\n      return acc;\n    }, {});\n\n  const total = Object.values(categorySums).reduce((sum, amount) => sum + amount, 0);\n\n  const chartData = Object.entries(categorySums).map(([category, amount]) => ({\n    x: category,\n    y: amount,\n    percentage: ((amount / total) * 100).toFixed(1)\n  }));\n\n  const colorScale = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.error,\n    theme.colors.success,\n    theme.colors.warning,\n    '#9333EA',\n    '#2563EB',\n    '#DC2626',\n  ];\n\n  if (chartData.length === 0) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n        <Text variant=\"headlineMedium\" style={styles.noDataText}>\n          {t('noExpenseData')}\n        </Text>\n        <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n          {t('addExpensesToSee')}\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView \n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <Text variant=\"headlineMedium\" style={[styles.title, { color: theme.colors.primary }]}>\n        {t('expenseBreakdown')}\n      </Text>\n      \n      <Surface style={styles.chartContainer} elevation={2}>\n        <Text variant=\"titleLarge\" style={[styles.totalAmount, { color: theme.colors.error }]}>\n          {t('totalSpent')}: {formatCurrency(total, selectedCurrency)}\n        </Text>\n\n        <SegmentedButtons\n          value={chartType}\n          onValueChange={setChartType}\n          buttons={CHART_TYPES.map(type => ({\n            ...type,\n            label: t(type.label)\n          }))}\n          style={styles.segmentedButtons}\n        />\n        \n        <VictoryPie\n          data={chartData}\n          colorScale={colorScale}\n          innerRadius={chartType === 'donut' ? 80 : 0}\n          padAngle={2}\n          animate={{\n            duration: 1000,\n            onLoad: { duration: 500 }\n          }}\n          height={300}\n          width={Math.min(350, Dimensions.get('window').width - 40)}\n          labels={() => ''}\n          labelComponent={<VictoryLabel text={''} />}\n          style={{\n            data: {\n              stroke: theme.colors.background,\n              strokeWidth: 1,\n            },\n            labels: { display: 'none' }\n          }}\n        />\n\n        <View style={styles.legendContainer}>\n          <VictoryLegend\n            x={10}\n            y={0}\n            orientation=\"horizontal\"\n            gutter={20}\n            rowGutter={10}\n            itemsPerRow={2}\n            centerTitle\n            style={{\n              labels: { \n                fill: theme.colors.text,\n                fontSize: 12,\n              },\n              parent: {\n                width: '100%',\n              }\n            }}\n            data={chartData.map((d, i) => ({\n              name: `${d.x}: ${formatCurrency(d.y, selectedCurrency)} (${d.percentage}%)`,\n              symbol: { fill: colorScale[i % colorScale.length] }\n            }))}\n          />\n        </View>\n      </Surface>\n\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"titleMedium\" style={{ color: theme.colors.text }}>\n          {t('summary')}\n        </Text>\n        {chartData.map((item, index) => (\n          <View key={item.x} style={styles.summaryRow}>\n            <View style={styles.categoryInfo}>\n              <View \n                style={[\n                  styles.colorIndicator, \n                  { backgroundColor: colorScale[index % colorScale.length] }\n                ]} \n              />\n              <Text variant=\"bodyMedium\">{item.x}</Text>\n            </View>\n            <Text variant=\"bodyMedium\" style={{ color: theme.colors.text }}>\n              {formatCurrency(item.y, selectedCurrency)}\n            </Text>\n          </View>\n        ))}\n        <View style={[styles.summaryRow, styles.totalRow]}>\n          <Text variant=\"titleMedium\">{t('total')}</Text>\n          <Text variant=\"titleMedium\" style={{ color: theme.colors.primary }}>\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n      </Surface>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    padding: 16,\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  chartContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center',\n    width: '100%',\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    width: '100%',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    flexWrap: 'wrap',\n  },\n  categoryInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 150,\n    marginRight: 8,\n  },\n  colorIndicator: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 8,\n    flexShrink: 0,\n  },\n  totalRow: {\n    borderTopWidth: 1,\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  noDataText: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  totalAmount: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  legendContainer: {\n    marginTop: 20,\n    width: '100%',\n    paddingHorizontal: 10,\n    alignItems: 'flex-start',\n  },\n});\n","import * as Notifications from 'expo-notifications';\nimport { Platform } from 'react-native';\n\nexport async function scheduleDailyReminder() {\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Notification permissions not granted!');\n    return;\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('daily-reminders', {\n      name: 'Daily Reminders',\n      importance: Notifications.AndroidImportance.MAX,\n    });\n  }\n\n  await Notifications.cancelAllScheduledNotificationsAsync();\n\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: 'Budget Reminder',\n      body: 'Don’t forget to log your expenses today!',\n      sound: true,\n    },\n    trigger: {\n      hour: 9,\n      minute: 0,\n      repeats: true,\n      channelId: 'daily-reminders', \n    },\n  });\n\n  alert('Daily reminder scheduled for 9 AM.');\n}\n\n// Configure notification handler\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: false,\n  }),\n});\n","import React, { createContext, useContext, useState } from 'react';\nimport { MD3LightTheme, MD3DarkTheme, adaptNavigationTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n  reactNavigationLight: NavigationDefaultTheme,\n  reactNavigationDark: NavigationDarkTheme,\n});\n\nconst lightTheme = {\n  ...MD3LightTheme,\n  ...LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...LightTheme.colors,\n    primary: '#3B82F6',\n    secondary: '#F59E0B',\n    background: '#FFFFFF',\n    surface: '#F3F4F6',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    error: '#EF4444',\n    success: '#10B981',\n    warning: '#F59E0B',\n    info: '#3B82F6',\n    border: '#E5E7EB',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n    xxl: 48,\n  },\n  typography: {\n    fontFamily: {\n      regular: 'System',\n      medium: 'System',\n      bold: 'System',\n    },\n    fontSize: {\n      xs: 12,\n      sm: 14,\n      md: 16,\n      lg: 18,\n      xl: 20,\n      xxl: 24,\n      xxxl: 32,\n    },\n    lineHeight: {\n      tight: 1.25,\n      normal: 1.5,\n      relaxed: 1.75,\n    },\n  },\n  roundness: 8,\n};\n\nconst darkTheme = {\n  ...MD3DarkTheme,\n  ...DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...DarkTheme.colors,\n    primary: '#60A5FA',\n    secondary: '#FBBF24',\n    background: '#111827',\n    surface: '#1F2937',\n    text: '#F9FAFB',\n    textSecondary: '#9CA3AF',\n    error: '#F87171',\n    success: '#34D399',\n    warning: '#FBBF24',\n    info: '#60A5FA',\n    border: '#374151',\n  },\n  spacing: lightTheme.spacing,\n  typography: lightTheme.typography,\n  roundness: lightTheme.roundness,\n};\n\nconst ThemeContext = createContext({\n  theme: lightTheme,\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport function ThemeProvider({ children }) {\n  const colorScheme = useColorScheme();\n  const [isDarkMode, setIsDarkMode] = useState(colorScheme === 'dark');\n  const currentTheme = isDarkMode ? darkTheme : lightTheme;\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: currentTheme, isDarkMode, toggleTheme }}>\n      <PaperProvider theme={currentTheme}>{children}</PaperProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useAppTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Modal as RNModal } from 'react-native';\nimport { List, Switch, Divider, Text, Surface, useTheme, Button, TextInput, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { scheduleDailyReminder } from '../notifications/NotificationsService';\nimport { useAppTheme } from '../../theme';\nimport { getAvailableCurrencies } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function SettingsScreen() {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { isDarkMode, toggleTheme } = useAppTheme();\n  const { language, changeLanguage, t } = useLanguage();\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n  const [showCurrencySelector, setShowCurrencySelector] = useState(false);\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const currencies = getAvailableCurrencies();\n  const { selectedCurrency, handleCurrencyChange } = useTransactions();\n  const { categories, addCategory, removeCategory, updateCategory } = useCategories();\n  \n  // Category management state\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [editedCategory, setEditedCategory] = useState('');\n\n  const handleNotificationToggle = async () => {\n    if (!notificationsEnabled) {\n      await scheduleDailyReminder();\n    }\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n\n  const handleCurrencySelect = async (currencyCode) => {\n    await handleCurrencyChange(currencyCode);\n    setShowCurrencySelector(false);\n  };\n\n  const selectedCurrencyDetails = currencies.find(c => c.code === selectedCurrency);\n\n  const handleAddCategory = () => {\n    if (newCategory.trim()) {\n      addCategory(newCategory.trim());\n      setNewCategory('');\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleEditCategory = () => {\n    if (editedCategory.trim() && selectedCategory) {\n      updateCategory(selectedCategory, editedCategory.trim());\n      setEditedCategory('');\n      setSelectedCategory(null);\n      setShowEditCategory(false);\n    }\n  };\n\n  const handleDeleteCategory = (category) => {\n    removeCategory(category);\n  };\n\n  const renderDialog = (visible, title, content, onDismiss) => {\n    return (\n      <RNModal\n        visible={visible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={onDismiss}\n      >\n        <View style={styles.modalOverlay}>\n          <Surface style={[styles.dialogContainer, { backgroundColor: colors.surface }]} elevation={5}>\n            <Text variant=\"titleLarge\" style={[styles.dialogTitle, { color: colors.text }]}>\n              {title}\n            </Text>\n            {content}\n          </Surface>\n        </View>\n      </RNModal>\n    );\n  };\n\n  const renderAddCategoryDialog = () => {\n    return renderDialog(\n      showAddCategory,\n      t('addNewCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={newCategory}\n          onChangeText={setNewCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowAddCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleAddCategory}>{t('add')}</Button>\n        </View>\n      </View>,\n      () => setShowAddCategory(false)\n    );\n  };\n\n  const renderEditCategoryDialog = () => {\n    return renderDialog(\n      showEditCategory,\n      t('editCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={editedCategory}\n          onChangeText={setEditedCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowEditCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleEditCategory}>{t('update')}</Button>\n        </View>\n      </View>,\n      () => setShowEditCategory(false)\n    );\n  };\n\n  const renderCurrencySelector = () => {\n    return renderDialog(\n      showCurrencySelector,\n      'Select Currency',\n      <View>\n        <ScrollView style={styles.currencyList}>\n          {currencies.map((currency) => (\n            <TouchableOpacity\n              key={currency.code}\n              style={[\n                styles.currencyItem,\n                selectedCurrency === currency.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => handleCurrencySelect(currency.code)}\n            >\n              <Text style={[styles.currencyLabel, { color: colors.text }]}>\n                {currency.label}\n              </Text>\n              {selectedCurrency === currency.code && (\n                <MaterialCommunityIcons\n                  name=\"check\"\n                  size={24}\n                  color={colors.primary}\n                />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowCurrencySelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          Close\n        </Button>\n      </View>,\n      () => setShowCurrencySelector(false)\n    );\n  };\n\n  const renderLanguageSelector = () => {\n    const languages = [\n      { code: 'tr', label: 'Türkçe' },\n      { code: 'en', label: 'English' }\n    ];\n\n    return renderDialog(\n      showLanguageSelector,\n      t('language'),\n      <View>\n        <ScrollView style={styles.languageList}>\n          {languages.map((lang) => (\n            <TouchableOpacity\n              key={lang.code}\n              style={[\n                styles.languageItem,\n                language === lang.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => {\n                changeLanguage(lang.code);\n                setShowLanguageSelector(false);\n              }}\n            >\n              <Text style={[styles.languageLabel, { color: colors.text }]}>\n                {lang.label}\n              </Text>\n              {language === lang.code && (\n                <MaterialCommunityIcons\n                  name=\"check\"\n                  size={24}\n                  color={colors.primary}\n                />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowLanguageSelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          {t('close')}\n        </Button>\n      </View>,\n      () => setShowLanguageSelector(false)\n    );\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: colors.background }]}>\n      <ScrollView style={styles.container}>\n        <Surface style={[styles.surface, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('appSettings')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('darkMode')}\n              description={t('darkModeDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"theme-light-dark\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              right={() => (\n                <Switch\n                  value={isDarkMode}\n                  onValueChange={toggleTheme}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('dailyReminders')}\n              description={t('dailyRemindersDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"bell\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              right={() => (\n                <Switch\n                  value={notificationsEnabled}\n                  onValueChange={handleNotificationToggle}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('currencyFormat')}\n              description={`${t('currentCurrency')}${selectedCurrencyDetails?.label || 'USD ($)'}`}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"currency-usd\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => setShowCurrencySelector(true)}\n            />\n            <Divider />\n\n            <List.Item\n              title={t('language')}\n              description={t('languageDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"translate\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => setShowLanguageSelector(true)}\n            />\n          </List.Section>\n\n          <Divider style={styles.divider} />\n\n          <List.Section>\n            <Text variant=\"titleMedium\" style={[styles.sectionTitle, { color: colors.text }]}>\n              {t('categories')}\n            </Text>\n            \n            {categories.map((category) => (\n              <List.Item\n                key={category}\n                title={category}\n                right={props => (\n                  <View style={styles.categoryActions}>\n                    <MaterialCommunityIcons\n                      name=\"pencil\"\n                      size={24}\n                      color={colors.primary}\n                      onPress={() => {\n                        setSelectedCategory(category);\n                        setEditedCategory(category);\n                        setShowEditCategory(true);\n                      }}\n                      style={{ padding: 8 }}\n                    />\n                    <MaterialCommunityIcons\n                      name=\"delete\"\n                      size={24}\n                      color={colors.error}\n                      onPress={() => handleDeleteCategory(category)}\n                      style={{ padding: 8 }}\n                    />\n                  </View>\n                )}\n              />\n            ))}\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowAddCategory(true)}\n              style={styles.addButton}\n            >\n              {t('addNewCategory')}\n            </Button>\n          </List.Section>\n        </Surface>\n\n        <Surface style={[styles.surface, styles.aboutSection, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('about')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('version')}\n              description=\"1.0.0\"\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"information\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('helpAndSupport')}\n              description={t('helpDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"help-circle\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => {/* TODO: Implement help section */}}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('privacyPolicy')}\n              description={t('privacyPolicyDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"shield-account\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => {/* TODO: Implement privacy policy */}}\n            />\n          </List.Section>\n        </Surface>\n      </ScrollView>\n\n      {renderCurrencySelector()}\n      {renderLanguageSelector()}\n      {renderAddCategoryDialog()}\n      {renderEditCategoryDialog()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  surface: {\n    borderRadius: 8,\n    marginBottom: 16,\n    padding: 16,\n  },\n  sectionTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  aboutSection: {\n    marginTop: 8,\n  },\n  currencySelector: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{ translateX: -150 }, { translateY: -200 }],\n    width: 300,\n    maxHeight: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  currencySelectorHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  currencySelectorTitle: {\n    fontWeight: '600',\n  },\n  closeButton: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  currencyList: {\n    flexGrow: 0,\n  },\n  currencyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 4,\n  },\n  currencyLabel: {\n    fontSize: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  categoryActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  addButton: {\n    marginTop: 16,\n    marginHorizontal: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dialogContainer: {\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  dialogTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  dialogInput: {\n    marginBottom: 16,\n  },\n  dialogActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 8,\n  },\n  dialogCloseButton: {\n    marginTop: 16,\n  },\n  languageList: {\n    maxHeight: 200,\n  },\n  languageItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  languageLabel: {\n    fontSize: 16,\n  },\n});\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\r\nimport { Text, Button, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useTransactions } from '../context/TransactionsContext';\r\nimport { useAppTheme } from '../../theme';\r\nimport { CURRENCIES } from '../services/format';\r\nimport { CommonActions } from '@react-navigation/native';\r\n\r\nconst LANGUAGES = [\r\n  { value: 'tr', label: 'Türkçe' },\r\n  { value: 'en', label: 'English' },\r\n];\r\n\r\nexport default function OnboardingScreen({ navigation }) {\r\n  const theme = useTheme();\r\n  const { colors } = theme;\r\n  const { changeLanguage, t } = useLanguage();\r\n  const { handleCurrencyChange } = useTransactions();\r\n  const { isDarkMode, toggleTheme } = useAppTheme();\r\n\r\n  // Set initial language to Turkish since it's the first option\r\n  const [selectedLanguage, setSelectedLanguage] = useState('tr');\r\n  const [selectedCurrency, setSelectedCurrency] = useState('TRY');\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  // Set initial language when component mounts\r\n  useEffect(() => {\r\n    handleLanguageSelect('tr');\r\n  }, []);\r\n\r\n  const handleLanguageSelect = (lang) => {\r\n    setSelectedLanguage(lang);\r\n    changeLanguage(lang);\r\n  };\r\n\r\n  const handleCurrencySelect = (currency) => {\r\n    setSelectedCurrency(currency);\r\n    handleCurrencyChange(currency);\r\n  };\r\n\r\n  const handleThemeSelect = (isDark) => {\r\n    if (isDark !== isDarkMode) {\r\n      toggleTheme();\r\n    }\r\n  };\r\n\r\n  const handleComplete = async () => {\r\n    try {\r\n      const preferences = {\r\n        language: selectedLanguage,\r\n        currency: selectedCurrency,\r\n        theme: isDarkMode ? 'dark' : 'light'\r\n      };\r\n      \r\n      console.log('Starting onboarding completion process...');\r\n      console.log('Preferences to save:', preferences);\r\n      \r\n      // First set the preferences\r\n      await AsyncStorage.setItem('userPreferences', JSON.stringify(preferences));\r\n      console.log('Preferences saved');\r\n      \r\n      // Then mark onboarding as complete\r\n      await AsyncStorage.setItem('hasCompletedOnboarding', 'true');\r\n      console.log('Onboarding marked as complete');\r\n\r\n      // Try multiple navigation methods\r\n      try {\r\n        // Method 1: Reset\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'MainApp' }],\r\n        });\r\n      } catch (navError) {\r\n        console.error('Reset navigation failed:', navError);\r\n        try {\r\n          // Method 2: Replace\r\n          navigation.replace('MainApp');\r\n        } catch (replaceError) {\r\n          console.error('Replace navigation failed:', replaceError);\r\n          try {\r\n            // Method 3: Dispatch\r\n            navigation.dispatch(\r\n              CommonActions.reset({\r\n                index: 0,\r\n                routes: [{ name: 'MainApp' }],\r\n              })\r\n            );\r\n          } catch (dispatchError) {\r\n            console.error('Dispatch navigation failed:', dispatchError);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleComplete:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        'There was an error saving your preferences. Please try again.',\r\n        [{ text: 'OK' }]\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderLanguageStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('selectLanguage')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        {LANGUAGES.map((lang) => (\r\n          <Button\r\n            key={lang.value}\r\n            mode={selectedLanguage === lang.value ? 'contained' : 'outlined'}\r\n            onPress={() => handleLanguageSelect(lang.value)}\r\n            style={styles.optionButton}\r\n          >\r\n            {lang.label}\r\n          </Button>\r\n        ))}\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const renderCurrencyStep = () => {\r\n    const currencyEntries = Object.entries(CURRENCIES);\r\n    const sortedCurrencies = [\r\n      // Put TRY first\r\n      currencyEntries.find(([code]) => code === 'TRY'),\r\n      // Then add all other currencies\r\n      ...currencyEntries.filter(([code]) => code !== 'TRY'),\r\n    ].filter(Boolean); // Remove any undefined entries\r\n\r\n    return (\r\n      <View style={styles.stepContainer}>\r\n        <Text variant=\"headlineMedium\" style={styles.title}>\r\n          {t('selectCurrency')}\r\n        </Text>\r\n        <Surface style={styles.optionsContainer} elevation={2}>\r\n          <ScrollView style={styles.currencyList}>\r\n            {sortedCurrencies.map(([code, currency]) => (\r\n              <Button\r\n                key={code}\r\n                mode={selectedCurrency === code ? 'contained' : 'outlined'}\r\n                onPress={() => handleCurrencySelect(code)}\r\n                style={styles.optionButton}\r\n              >\r\n                {`${currency.symbol} ${code}`}\r\n              </Button>\r\n            ))}\r\n          </ScrollView>\r\n        </Surface>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderThemeStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('chooseTheme')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        <Button\r\n          mode={!isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(false)}\r\n          style={styles.optionButton}\r\n          left={(props) => (\r\n            <MaterialCommunityIcons\r\n              name=\"white-balance-sunny\"\r\n              size={24}\r\n              color={props.color}\r\n            />\r\n          )}\r\n        >\r\n          {t('lightTheme')}\r\n        </Button>\r\n        <Button\r\n          mode={isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(true)}\r\n          style={styles.optionButton}\r\n          left={(props) => (\r\n            <MaterialCommunityIcons\r\n              name=\"weather-night\"\r\n              size={24}\r\n              color={props.color}\r\n            />\r\n          )}\r\n        >\r\n          {t('darkTheme')}\r\n        </Button>\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const steps = [\r\n    renderLanguageStep,\r\n    renderCurrencyStep,\r\n    renderThemeStep,\r\n  ];\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <Text variant=\"displaySmall\" style={[styles.welcomeTitle, { color: colors.primary }]}>\r\n        {t('welcome')}\r\n      </Text>\r\n      \r\n      {steps[currentStep]()}\r\n      \r\n      <View style={styles.navigationButtons}>\r\n        {currentStep > 0 && (\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => setCurrentStep(prev => prev - 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('previous')}\r\n          </Button>\r\n        )}\r\n        \r\n        {currentStep < steps.length - 1 ? (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={() => setCurrentStep(prev => prev + 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('next')}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleComplete}\r\n            style={styles.navButton}\r\n          >\r\n            {t('getStarted')}\r\n          </Button>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  stepContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 32,\r\n    textAlign: 'center',\r\n  },\r\n  optionsContainer: {\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    width: '100%',\r\n    maxWidth: 400,\r\n  },\r\n  optionButton: {\r\n    marginVertical: 8,\r\n  },\r\n  currencyList: {\r\n    maxHeight: 300,\r\n  },\r\n  navigationButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 16,\r\n  },\r\n  navButton: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n  welcomeTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: 'row-reverse',\r\n    alignItems: 'center',\r\n  },\r\n}); ","import React, { useEffect, useState, useCallback } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useTheme } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { View, Text } from 'react-native';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport { useLanguage } from '../context/LanguageContext';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport AddTransactionScreen from '../screens/AddTransactionScreen';\nimport ChartScreen from '../screens/ChartScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport OnboardingScreen from '../screens/OnboardingScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\nconst RootStack = createStackNavigator();\n\nfunction HomeStack() {\n  const { colors } = useTheme();\n  \n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background,\n          elevation: 0,\n          shadowOpacity: 0,\n        },\n        headerTintColor: colors.text,\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          title: 'My Budget',\n        }}\n      />\n      <Stack.Screen \n        name=\"AddTransaction\" \n        component={AddTransactionScreen}\n        options={({ route }) => ({\n          title: route.params?.isEditing ? 'Edit Transaction' : 'Add Transaction',\n          headerStyle: {\n            backgroundColor: colors.background,\n            elevation: 0,\n            shadowOpacity: 0,\n          },\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TabNavigator() {\n  const { colors } = useTheme();\n  const { t } = useLanguage();\n\n  const screenOptions = {\n    headerShown: true,\n    headerStyle: {\n      backgroundColor: colors.background,\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTintColor: colors.text,\n    headerTitleStyle: {\n      fontWeight: '600',\n    },\n    tabBarStyle: {\n      backgroundColor: colors.surface,\n      borderTopColor: colors.border,\n      paddingVertical: 8,\n      height: 60,\n    },\n    tabBarShowLabel: false,\n    tabBarActiveTintColor: colors.primary,\n    tabBarInactiveTintColor: colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: '500',\n    },\n  };\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={screenOptions}\n    >\n      <Tab.Screen\n        name=\"HomeStack\"\n        component={HomeStack}\n        options={{\n          title: t('tabHome'),\n          headerShown: false,\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Charts\"\n        component={ChartScreen}\n        options={{\n          title: t('tabCharts'),\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"chart-bar\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          title: t('tabSettings'),\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default function RootNavigation() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasCompletedOnboarding, setHasCompletedOnboarding] = useState(false);\n  const [, forceUpdate] = useState({});\n\n  const checkOnboardingStatus = useCallback(async () => {\n    try {\n      console.log('Checking onboarding status...');\n      const status = await AsyncStorage.getItem('hasCompletedOnboarding');\n      console.log('Retrieved onboarding status:', status);\n      \n      const shouldShowMainApp = status === 'true';\n      console.log('Should show main app:', shouldShowMainApp);\n      \n      setHasCompletedOnboarding(shouldShowMainApp);\n      forceUpdate({});\n    } catch (error) {\n      console.error('Error in checkOnboardingStatus:', error);\n      setHasCompletedOnboarding(false);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Check on mount\n  useEffect(() => {\n    checkOnboardingStatus();\n  }, [checkOnboardingStatus]);\n\n  // Check on focus\n  useFocusEffect(\n    useCallback(() => {\n      console.log('Screen focused, checking onboarding status');\n      checkOnboardingStatus();\n    }, [checkOnboardingStatus])\n  );\n\n  // Add listener for storage changes\n  useEffect(() => {\n    const checkStorageChanges = async () => {\n      try {\n        const status = await AsyncStorage.getItem('hasCompletedOnboarding');\n        if (status === 'true' && !hasCompletedOnboarding) {\n          console.log('Storage changed, updating navigation state');\n          setHasCompletedOnboarding(true);\n          forceUpdate({});\n        }\n      } catch (error) {\n        console.error('Error checking storage changes:', error);\n      }\n    };\n\n    const interval = setInterval(checkStorageChanges, 500);\n    return () => clearInterval(interval);\n  }, [hasCompletedOnboarding]);\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  console.log('Rendering RootNavigation with hasCompletedOnboarding:', hasCompletedOnboarding);\n\n  return (\n    <RootStack.Navigator screenOptions={{ headerShown: false }}>\n      {!hasCompletedOnboarding ? (\n        <RootStack.Screen \n          name=\"Onboarding\" \n          component={OnboardingScreen}\n          options={{\n            animationEnabled: false,\n            gestureEnabled: false\n          }}\n        />\n      ) : (\n        <RootStack.Screen \n          name=\"MainApp\" \n          component={TabNavigator}\n          options={{\n            animationEnabled: false\n          }}\n        />\n      )}\n    </RootStack.Navigator>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { TransactionsProvider } from './src/context/TransactionsContext';\nimport { CategoriesProvider } from './src/context/CategoriesContext';\nimport { LanguageProvider } from './src/context/LanguageContext';\nimport RootNavigation from './src/navigation/RootNavigation';\nimport { ThemeProvider } from './theme';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Platform, Text } from 'react-native';\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <ThemeProvider>\n          <LanguageProvider>\n            <CategoriesProvider>\n              <TransactionsProvider>\n                <NavigationContainer>\n                  <RootNavigation />\n                </NavigationContainer>\n              </TransactionsProvider>\n            </CategoriesProvider>\n          </LanguageProvider>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/MyBudgetApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [352], () => (__webpack_require__(67317)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["TRANSACTIONS_KEY","async","loadTransactions","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","warn","initialState","transactions","transactionsReducer","state","action","log","type","payload","_objectSpread","map","tx","id","filter","TransactionsContext","createContext","TransactionsProvider","children","dispatch","useReducer","selectedCurrency","setSelectedCurrency","useState","useEffect","stored","storedCurrency","userPreferences","Promise","all","currency","setItem","error","loadInitialData","stringify","saveTransactions","_jsx","Provider","value","handleCurrencyChange","newCurrency","useTransactions","useContext","CATEGORIES_STORAGE_KEY","DEFAULT_CATEGORIES","CategoriesContext","CategoriesProvider","categories","setCategories","loadCategories","storedCategories","saveCategories","newCategories","addCategory","category","includes","removeCategory","c","updateCategory","oldCategory","newCategory","useCategories","translations","en","settings","save","cancel","add","edit","delete","close","update","appSettings","darkMode","darkModeDesc","dailyReminders","dailyRemindersDesc","currencyFormat","currentCurrency","addNewCategory","editCategory","categoryName","language","languageDesc","about","version","helpAndSupport","helpDesc","privacyPolicy","privacyPolicyDesc","addTransaction","amount","date","note","income","expense","editTransaction","description","recurringMonthly","transactionUpdated","transactionAdded","recentTransactions","selectCategory","descriptionRequired","amountRequired","invalidAmount","categoryRequired","myBudget","totalBalance","noTransactions","addFirstTransaction","expenseBreakdown","totalSpent","pieChart","donutChart","summary","total","noExpenseData","addExpensesToSee","selectLanguage","selectCurrency","chooseTheme","lightTheme","darkTheme","next","previous","getStarted","welcome","tabHome","tabCharts","tabSettings","tr","LanguageContext","LanguageProvider","setLanguage","savedLanguage","loadLanguage","changeLanguage","newLanguage","t","key","_translations$languag","useLanguage","context","Error","CURRENCIES","TRY","symbol","locale","position","rate","USD","EUR","GBP","JPY","CNY","INR","AUD","CAD","CHF","formatCurrency","currencyCode","formattedNumber","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toFixed","getCurrencySymbol","_CURRENCIES$currencyC","CATEGORY_ICONS","Food","Transport","Shopping","Bills","Entertainment","Other","TransactionItem","transaction","onPress","theme","useTheme","colors","menuVisible","setMenuVisible","React","navigation","useNavigation","isExpense","Math","abs","icon","formattedDate","Date","toLocaleDateString","undefined","year","month","day","dynamicStyles","menuContent","backgroundColor","surface","Surface","styles","elevation","_jsxs","View","container","TouchableRipple","touchable","flex","accessibilityRole","disabled","accessibilityLabel","List","title","left","props","MaterialCommunityIcons","name","size","color","primary","right","rightContainer","Text","variant","success","titleStyle","descriptionStyle","textSecondary","menuContainer","Menu","visible","onDismiss","anchor","TouchableOpacity","stopPropagation","menuButton","contentStyle","anchorPosition","statusBarHeight","overlayAccessibilityLabel","Item","navigate","isEditing","leadingIcon","StyleSheet","create","marginBottom","borderRadius","overflow","flexDirection","alignItems","fontWeight","marginTop","alignSelf","gap","paddingRight","padding","menu","zIndex","HomeScreen","reduce","acc","expenses","background","FlatList","data","keyExtractor","item","renderItem","ListHeaderComponent","renderHeader","_Fragment","summaryContainer","balanceRow","Divider","divider","statsContainer","statItem","sectionTitle","ListEmptyComponent","renderEmptyList","emptyContainer","contentContainerStyle","listContent","FAB","fab","label","paddingBottom","justifyContent","marginVertical","paddingVertical","margin","bottom","CustomSnackbar","message","fadeAnim","Animated","Value","timing","toValue","duration","useNativeDriver","start","snackbar","opacity","transform","translateY","interpolate","inputRange","outputRange","snackbarText","AddTransactionScreen","route","params","Boolean","existingTransaction","setDescription","setAmount","setCategory","isRecurring","setIsRecurring","transactionType","setTransactionType","errors","setErrors","showSnackbar","setShowSnackbar","showCategoryMenu","setShowCategoryMenu","toString","ScrollView","content","SegmentedButtons","onValueChange","buttons","segmentedButtons","TextInput","mode","onChangeText","text","input","HelperText","keyboardType","Affix","categoryInputContainer","Icon","onPressIn","cat","switchContainer","Switch","Button","validateForm","newErrors","trim","isNaN","parseFloat","Object","keys","length","parsedAmount","finalAmount","trimmedCategory","transactionData","toISOString","split","newTransactionId","now","setTimeout","goBack","button","labelStyle","buttonLabel","textAlign","switchLabel","marginLeft","fontSize","CHART_TYPES","ChartScreen","chartType","setChartType","categorySums","values","sum","chartData","entries","x","y","percentage","colorScale","secondary","warning","noDataText","contentContainer","chartContainer","totalAmount","VictoryPie","innerRadius","padAngle","animate","onLoad","height","width","min","Dimensions","get","labels","labelComponent","VictoryLabel","stroke","strokeWidth","display","legendContainer","VictoryLegend","orientation","gutter","rowGutter","itemsPerRow","centerTitle","fill","parent","d","i","index","summaryRow","categoryInfo","colorIndicator","totalRow","flexGrow","flexWrap","minWidth","marginRight","flexShrink","borderTopWidth","paddingTop","paddingHorizontal","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","LightTheme","DarkTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","MD3LightTheme","info","border","spacing","xs","sm","md","lg","xl","xxl","typography","fontFamily","regular","medium","bold","xxxl","lineHeight","tight","normal","relaxed","roundness","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","ThemeProvider","colorScheme","useColorScheme","setIsDarkMode","currentTheme","PaperProvider","useAppTheme","SettingsScreen","notificationsEnabled","setNotificationsEnabled","showCurrencySelector","setShowCurrencySelector","showLanguageSelector","setShowLanguageSelector","currencies","code","details","showAddCategory","setShowAddCategory","showEditCategory","setShowEditCategory","setNewCategory","selectedCategory","setSelectedCategory","editedCategory","setEditedCategory","handleNotificationToggle","status","existingStatus","finalStatus","body","sound","trigger","hour","minute","repeats","channelId","alert","scheduleDailyReminder","selectedCurrencyDetails","find","handleAddCategory","handleEditCategory","renderDialog","RNModal","transparent","animationType","onRequestClose","modalOverlay","dialogContainer","dialogTitle","mainContainer","categoryActions","handleDeleteCategory","addButton","aboutSection","currencyList","currencyItem","primaryContainer","handleCurrencySelect","currencyLabel","dialogCloseButton","languageList","lang","languageItem","languageLabel","dialogInput","dialogActions","currencySelector","top","translateX","maxHeight","currencySelectorHeader","currencySelectorTitle","closeButton","marginHorizontal","maxWidth","borderBottomWidth","borderBottomColor","LANGUAGES","OnboardingScreen","selectedLanguage","setSelectedLanguage","currentStep","setCurrentStep","handleLanguageSelect","handleThemeSelect","isDark","steps","renderLanguageStep","stepContainer","optionsContainer","optionButton","renderCurrencyStep","currencyEntries","sortedCurrencies","renderThemeStep","welcomeTitle","navigationButtons","prev","navButton","preferences","reset","routes","navError","replace","replaceError","CommonActions","dispatchError","Alert","buttonContent","Tab","createBottomTabNavigator","Stack","createStackNavigator","RootStack","HomeStack","Navigator","screenOptions","headerStyle","shadowOpacity","headerTintColor","headerTitleStyle","Screen","component","options","_route$params","TabNavigator","headerShown","tabBarStyle","borderTopColor","tabBarShowLabel","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","initialRouteName","tabBarIcon","RootNavigation","isLoading","setIsLoading","hasCompletedOnboarding","setHasCompletedOnboarding","forceUpdate","checkOnboardingStatus","useCallback","shouldShowMainApp","useFocusEffect","interval","setInterval","clearInterval","animationEnabled","gestureEnabled","registerRootComponent","GestureHandlerRootView","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}