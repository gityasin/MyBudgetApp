{"version":3,"file":"static/js/main.c365c561.js","mappings":"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","sources":["src/services/storage.js","src/context/TransactionsContext.js","src/context/CategoriesContext.js","src/i18n/translations.js","src/context/LanguageContext.js","src/services/format.js","src/components/TransactionItem.js","src/screens/HomeScreen.js","src/screens/AddTransactionScreen.js","src/screens/ChartScreen.js","src/notifications/NotificationsService.js","theme.js","src/screens/SettingsScreen.js","src/navigation/RootNavigation.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst TRANSACTIONS_KEY = '@transactions';\n\nexport async function loadTransactions() {\n  try {\n    const jsonValue = await AsyncStorage.getItem(TRANSACTIONS_KEY);\n    return jsonValue != null ? JSON.parse(jsonValue) : [];\n  } catch (e) {\n    console.warn('Error loading transactions:', e);\n    return [];\n  }\n}\n\nexport async function saveTransactions(transactions) {\n  try {\n    const jsonValue = JSON.stringify(transactions);\n    await AsyncStorage.setItem(TRANSACTIONS_KEY, jsonValue);\n  } catch (e) {\n    console.warn('Error saving transactions:', e);\n  }\n}\n","import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport { loadTransactions, saveTransactions } from '../services/storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst initialState = {\n  transactions: [],\n};\n\nfunction transactionsReducer(state, action) {\n  console.log(\"Reducer called with action:\", action);\n\n  switch (action.type) {\n    case 'SET_TRANSACTIONS':\n      console.log(\"Setting transactions:\", action.payload);\n      return { ...state, transactions: action.payload };\n    case 'ADD_TRANSACTION':\n      console.log(\"Adding transaction:\", action.payload);\n      return { ...state, transactions: [...state.transactions, action.payload] };\n    case 'UPDATE_TRANSACTION':\n      console.log(\"Updating transaction:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.map(tx =>\n          tx.id === action.payload.id ? action.payload : tx\n        ),\n      };\n    case 'DELETE_TRANSACTION':\n      console.log(\"Deleting transaction with ID:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.filter(tx => tx.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n\nconst TransactionsContext = createContext();\n\nexport function TransactionsProvider({ children }) {\n  const [state, dispatch] = useReducer(transactionsReducer, initialState);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      const [stored, storedCurrency] = await Promise.all([\n        loadTransactions(),\n        AsyncStorage.getItem('selectedCurrency')\n      ]);\n\n      dispatch({ type: 'SET_TRANSACTIONS', payload: stored });\n      \n      if (storedCurrency) {\n        setSelectedCurrency(storedCurrency);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Save transactions whenever they change\n  useEffect(() => {\n    console.log(\"Saving transactions to storage:\", state.transactions);\n    saveTransactions(state.transactions);\n  }, [state.transactions]);\n\n  // Handle currency changes - now just updates the display currency\n  const handleCurrencyChange = async (newCurrency) => {\n    if (newCurrency === selectedCurrency) return;\n\n    try {\n      await AsyncStorage.setItem('selectedCurrency', newCurrency);\n      setSelectedCurrency(newCurrency);\n    } catch (error) {\n      console.error('Error changing currency:', error);\n    }\n  };\n\n  return (\n    <TransactionsContext.Provider \n      value={{ \n        state, \n        dispatch,\n        selectedCurrency,\n        handleCurrencyChange\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  return useContext(TransactionsContext);\n}","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CATEGORIES_STORAGE_KEY = '@categories';\r\nconst DEFAULT_CATEGORIES = ['Food', 'Transport', 'Shopping', 'Bills', 'Entertainment', 'Other'];\r\n\r\nconst CategoriesContext = createContext();\r\n\r\nexport function CategoriesProvider({ children }) {\r\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    // Load categories from storage on mount\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const storedCategories = await AsyncStorage.getItem(CATEGORIES_STORAGE_KEY);\r\n      if (storedCategories) {\r\n        setCategories(JSON.parse(storedCategories));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n    }\r\n  };\r\n\r\n  const saveCategories = async (newCategories) => {\r\n    try {\r\n      await AsyncStorage.setItem(CATEGORIES_STORAGE_KEY, JSON.stringify(newCategories));\r\n      setCategories(newCategories);\r\n    } catch (error) {\r\n      console.error('Error saving categories:', error);\r\n    }\r\n  };\r\n\r\n  const addCategory = async (category) => {\r\n    if (!category || categories.includes(category)) return;\r\n    const newCategories = [...categories, category];\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const removeCategory = async (category) => {\r\n    const newCategories = categories.filter(c => c !== category);\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const updateCategory = async (oldCategory, newCategory) => {\r\n    if (!newCategory || categories.includes(newCategory)) return;\r\n    const newCategories = categories.map(c => \r\n      c === oldCategory ? newCategory : c\r\n    );\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <CategoriesContext.Provider \r\n      value={{\r\n        categories,\r\n        addCategory,\r\n        removeCategory,\r\n        updateCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </CategoriesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCategories() {\r\n  return useContext(CategoriesContext);\r\n} ","export const translations = {\r\n  en: {\r\n    // General\r\n    settings: 'Settings',\r\n    save: 'Save',\r\n    cancel: 'Cancel',\r\n    add: 'Add',\r\n    edit: 'Edit',\r\n    delete: 'Delete',\r\n    close: 'Close',\r\n    update: 'Update',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'App Settings',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDesc: 'Toggle dark/light theme',\r\n    dailyReminders: 'Daily Reminders',\r\n    dailyRemindersDesc: 'Get notified to add transactions',\r\n    currencyFormat: 'Currency Format',\r\n    currentCurrency: 'Current: ',\r\n    categories: 'Categories',\r\n    addNewCategory: 'Add New Category',\r\n    editCategory: 'Edit Category',\r\n    categoryName: 'Category Name',\r\n    language: 'Language',\r\n    languageDesc: 'Change application language',\r\n    \r\n    // About Section\r\n    about: 'About',\r\n    version: 'Version',\r\n    helpAndSupport: 'Help & Support',\r\n    helpDesc: 'Get assistance with the app',\r\n    privacyPolicy: 'Privacy Policy',\r\n    privacyPolicyDesc: 'Read our privacy policy',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'Add Transaction',\r\n    amount: 'Amount',\r\n    category: 'Category',\r\n    date: 'Date',\r\n    note: 'Note',\r\n    income: 'Income',\r\n    expense: 'Expense',\r\n    editTransaction: 'Edit Transaction',\r\n    description: 'Description',\r\n    recurringMonthly: 'Recurring Monthly?',\r\n    transactionUpdated: 'Transaction updated successfully!',\r\n    transactionAdded: 'Transaction added successfully!',\r\n    recentTransactions: 'Recent Transactions',\r\n    selectCategory: 'Select Category',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Description is required',\r\n    amountRequired: 'Amount is required',\r\n    invalidAmount: 'Please enter a valid positive amount',\r\n    categoryRequired: 'Category is required',\r\n    \r\n    // Home Screen\r\n    myBudget: 'My Budget',\r\n    totalBalance: 'Total Balance',\r\n    noTransactions: 'No transactions yet',\r\n    addFirstTransaction: 'Tap the + button to add your first transaction',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Expense Breakdown',\r\n    totalSpent: 'Total Spent',\r\n    pieChart: 'Pie Chart',\r\n    donutChart: 'Donut Chart',\r\n    summary: 'Summary',\r\n    total: 'Total',\r\n    noExpenseData: 'No expense data available',\r\n    addExpensesToSee: 'Add some expenses to see your spending breakdown',\r\n  },\r\n  tr: {\r\n    // General\r\n    settings: 'Ayarlar',\r\n    save: 'Kaydet',\r\n    cancel: 'İptal',\r\n    add: 'Ekle',\r\n    edit: 'Düzenle',\r\n    delete: 'Sil',\r\n    close: 'Kapat',\r\n    update: 'Güncelle',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'Uygulama Ayarları',\r\n    darkMode: 'Karanlık Mod',\r\n    darkModeDesc: 'Karanlık/aydınlık tema değiştir',\r\n    dailyReminders: 'Günlük Hatırlatmalar',\r\n    dailyRemindersDesc: 'İşlem ekleme hatırlatmaları al',\r\n    currencyFormat: 'Para Birimi',\r\n    currentCurrency: 'Mevcut: ',\r\n    categories: 'Kategoriler',\r\n    addNewCategory: 'Yeni Kategori Ekle',\r\n    editCategory: 'Kategori Düzenle',\r\n    categoryName: 'Kategori Adı',\r\n    language: 'Dil',\r\n    languageDesc: 'Uygulama dilini değiştir',\r\n    \r\n    // About Section\r\n    about: 'Hakkında',\r\n    version: 'Versiyon',\r\n    helpAndSupport: 'Yardım & Destek',\r\n    helpDesc: 'Uygulama ile ilgili yardım alın',\r\n    privacyPolicy: 'Gizlilik Politikası',\r\n    privacyPolicyDesc: 'Gizlilik politikamızı okuyun',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'İşlem Ekle',\r\n    amount: 'Tutar',\r\n    category: 'Kategori',\r\n    date: 'Tarih',\r\n    note: 'Not',\r\n    income: 'Gelir',\r\n    expense: 'Gider',\r\n    editTransaction: 'İşlem Düzenle',\r\n    description: 'Açıklama',\r\n    recurringMonthly: 'Aylık Tekrar?',\r\n    transactionUpdated: 'İşlem başarıyla güncellendi!',\r\n    transactionAdded: 'İşlem başarıyla eklendi!',\r\n    recentTransactions: 'Son İşlemler',\r\n    selectCategory: 'Kategori Seç',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Açıklama gerekli',\r\n    amountRequired: 'Tutar gerekli',\r\n    invalidAmount: 'Lütfen geçerli bir pozitif tutar girin',\r\n    categoryRequired: 'Kategori gerekli',\r\n    \r\n    // Home Screen\r\n    myBudget: 'Bütçem',\r\n    totalBalance: 'Toplam Bakiye',\r\n    noTransactions: 'Henüz işlem yok',\r\n    addFirstTransaction: 'İlk işleminizi eklemek için + butonuna dokunun',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Gider Dağılımı',\r\n    totalSpent: 'Toplam Harcama',\r\n    pieChart: 'Pasta Grafik',\r\n    donutChart: 'Halka Grafik',\r\n    summary: 'Özet',\r\n    total: 'Toplam',\r\n    noExpenseData: 'Gider verisi bulunmuyor',\r\n    addExpensesToSee: 'Harcama dağılımını görmek için gider ekleyin',\r\n  }\r\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { translations } from '../i18n/translations';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  useEffect(() => {\r\n    // Load saved language preference\r\n    const loadLanguage = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('userLanguage');\r\n        if (savedLanguage) {\r\n          setLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language:', error);\r\n      }\r\n    };\r\n    \r\n    loadLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (newLanguage) => {\r\n    try {\r\n      await AsyncStorage.setItem('userLanguage', newLanguage);\r\n      setLanguage(newLanguage);\r\n    } catch (error) {\r\n      console.error('Error saving language:', error);\r\n    }\r\n  };\r\n\r\n  const t = (key) => {\r\n    return translations[language]?.[key] || translations.en[key] || key;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n}; ","// Currency formatting utilities\r\nexport const CURRENCIES = {\r\n  USD: { symbol: '$', locale: 'en-US', position: 'before', rate: 1 },\r\n  EUR: { symbol: '€', locale: 'de-DE', position: 'after', rate: 0.91 },\r\n  GBP: { symbol: '£', locale: 'en-GB', position: 'before', rate: 0.79 },\r\n  JPY: { symbol: '¥', locale: 'ja-JP', position: 'before', rate: 149.45 },\r\n  CNY: { symbol: '¥', locale: 'zh-CN', position: 'before', rate: 7.23 },\r\n  INR: { symbol: '₹', locale: 'en-IN', position: 'before', rate: 83.12 },\r\n  AUD: { symbol: '$', locale: 'en-AU', position: 'before', rate: 1.54 },\r\n  CAD: { symbol: '$', locale: 'en-CA', position: 'before', rate: 1.36 },\r\n  CHF: { symbol: 'CHF', locale: 'de-CH', position: 'before', rate: 0.89 },\r\n  TRY: { symbol: '₺', locale: 'tr-TR', position: 'after', rate: 31.89 },\r\n};\r\n\r\nexport const convertAmount = (amount, fromCurrency = 'USD', toCurrency = 'USD') => {\r\n  const fromRate = CURRENCIES[fromCurrency]?.rate || 1;\r\n  const toRate = CURRENCIES[toCurrency]?.rate || 1;\r\n  \r\n  // Convert to USD first, then to target currency\r\n  const amountInUSD = amount / fromRate;\r\n  return amountInUSD * toRate;\r\n};\r\n\r\nexport const formatCurrency = (amount, currencyCode = 'USD') => {\r\n  try {\r\n    const currency = CURRENCIES[currencyCode] || CURRENCIES.USD;\r\n    const formattedNumber = new Intl.NumberFormat(currency.locale, {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n\r\n    return currency.position === 'before' \r\n      ? `${currency.symbol}${formattedNumber}`\r\n      : `${formattedNumber} ${currency.symbol}`;\r\n  } catch (error) {\r\n    console.warn('Error formatting currency:', error);\r\n    return `${CURRENCIES.USD.symbol}${amount.toFixed(2)}`;\r\n  }\r\n};\r\n\r\nexport const getCurrencySymbol = (currencyCode = 'USD') => {\r\n  return CURRENCIES[currencyCode]?.symbol || CURRENCIES.USD.symbol;\r\n};\r\n\r\nexport const getAvailableCurrencies = () => {\r\n  return Object.entries(CURRENCIES).map(([code, details]) => ({\r\n    code,\r\n    symbol: details.symbol,\r\n    label: `${code} (${details.symbol})`,\r\n  }));\r\n};\r\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, List, useTheme, TouchableRipple, Menu, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CATEGORY_ICONS = {\n  Food: 'food',\n  Transport: 'car',\n  Shopping: 'shopping',\n  Bills: 'file-document',\n  Entertainment: 'gamepad-variant',\n  Other: 'dots-horizontal',\n};\n\nexport default function TransactionItem({ transaction, onPress }) {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { dispatch, selectedCurrency } = useTransactions();\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const navigation = useNavigation();\n  const { t } = useLanguage();\n\n  const isExpense = transaction.amount < 0;\n  const amount = Math.abs(transaction.amount);\n  const icon = CATEGORY_ICONS[transaction.category] || CATEGORY_ICONS.Other;\n\n  const formattedDate = new Date(transaction.date).toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  const handleDelete = () => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: transaction.id,\n    });\n    setMenuVisible(false);\n  };\n\n  const handleEdit = () => {\n    setMenuVisible(false);\n    navigation.navigate('AddTransaction', {\n      isEditing: true,\n      transaction: {\n        ...transaction,\n        amount: Math.abs(transaction.amount),\n      },\n    });\n  };\n\n  return (\n    <Surface style={styles.surface} elevation={1}>\n      <TouchableRipple\n        onPress={onPress}\n        style={styles.touchable}\n        accessibilityRole=\"button\"\n        accessibilityLabel={`${transaction.description} transaction of ${isExpense ? t('expense') : t('income')} ${formatCurrency(amount, selectedCurrency)}`}\n      >\n        <List.Item\n          title={transaction.description}\n          description={`${transaction.category} • ${formattedDate}`}\n          left={props => (\n            <List.Icon\n              {...props}\n              icon={icon}\n              color={colors.primary}\n            />\n          )}\n          right={props => (\n            <View style={styles.rightContainer}>\n              <Text\n                {...props}\n                variant=\"titleMedium\"\n                style={[\n                  styles.amount,\n                  { color: isExpense ? colors.error : colors.success }\n                ]}\n              >\n                {isExpense ? '-' : '+'}{formatCurrency(amount, selectedCurrency)}\n              </Text>\n              <Menu\n                visible={menuVisible}\n                onDismiss={() => setMenuVisible(false)}\n                anchor={\n                  <IconButton\n                    icon=\"dots-vertical\"\n                    size={20}\n                    onPress={() => setMenuVisible(true)}\n                  />\n                }\n              >\n                <Menu.Item\n                  onPress={handleEdit}\n                  title={t('edit')}\n                  leadingIcon=\"pencil\"\n                />\n                <Menu.Item\n                  onPress={handleDelete}\n                  title={t('delete')}\n                  leadingIcon=\"delete\"\n                />\n              </Menu>\n            </View>\n          )}\n          titleStyle={styles.title}\n          descriptionStyle={[styles.description, { color: colors.textSecondary }]}\n        />\n      </TouchableRipple>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  surface: {\n    marginBottom: 8,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  touchable: {\n    flex: 1,\n  },\n  title: {\n    fontWeight: '500',\n  },\n  description: {\n    marginTop: 4,\n  },\n  amount: {\n    fontWeight: '600',\n    alignSelf: 'center',\n  },\n  rightContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n});","import React from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { Text, FAB, Surface, useTheme, Divider } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport TransactionItem from '../components/TransactionItem';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function HomeScreen({ navigation }) {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n\n  // Calculate totals in the selected currency\n  const total = state.transactions.reduce((acc, tx) => acc + tx.amount, 0);\n  const income = state.transactions\n    .filter(tx => tx.amount > 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n  const expenses = state.transactions\n    .filter(tx => tx.amount < 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n\n  const renderHeader = () => (\n    <>\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          {t('myBudget')}\n        </Text>\n        \n        <View style={styles.balanceRow}>\n          <Text variant=\"titleLarge\">{t('totalBalance')}</Text>\n          <Text \n            variant=\"headlineMedium\"\n            style={{ color: total >= 0 ? theme.colors.success : theme.colors.error }}\n          >\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n\n        <Divider style={styles.divider} />\n        \n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.success }}>\n              {t('income')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.success }}>\n              +{formatCurrency(income, selectedCurrency)}\n            </Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.error }}>\n              {t('expense')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.error }}>\n              {formatCurrency(Math.abs(expenses), selectedCurrency)}\n            </Text>\n          </View>\n        </View>\n      </Surface>\n\n      <Text variant=\"titleLarge\" style={styles.sectionTitle}>\n        {t('recentTransactions')}\n      </Text>\n    </>\n  );\n\n  const renderEmptyList = () => (\n    <View style={styles.emptyContainer}>\n      <Text variant=\"bodyLarge\" style={{ color: theme.colors.textSecondary }}>\n        {t('noTransactions')}\n      </Text>\n      <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n        {t('addFirstTransaction')}\n      </Text>\n    </View>\n  );\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <FlatList\n        data={state.transactions}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <TransactionItem \n            transaction={item}\n            onPress={() => {\n              navigation.navigate('AddTransaction', {\n                isEditing: true,\n                transaction: item,\n              });\n            }}\n          />\n        )}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={renderEmptyList}\n        contentContainerStyle={styles.listContent}\n      />\n\n      <FAB\n        icon=\"plus\"\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        onPress={() => navigation.navigate('AddTransaction')}\n        label={t('addTransaction')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n    paddingBottom: 80, // Space for FAB\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  title: {\n    marginBottom: 16,\n  },\n  balanceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    alignItems: 'flex-start',\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 32,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Animated } from 'react-native';\nimport { TextInput, Button, Switch, Text, HelperText, useTheme, SegmentedButtons, Menu } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { getCurrencySymbol } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CustomSnackbar = ({ visible, message, style }) => {\n  const [fadeAnim] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    if (visible) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return (\n    <Animated.View\n      style={[\n        styles.snackbar,\n        style,\n        {\n          opacity: fadeAnim,\n          transform: [{\n            translateY: fadeAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [50, 0],\n            }),\n          }],\n        },\n      ]}\n    >\n      <Text style={styles.snackbarText}>{message}</Text>\n    </Animated.View>\n  );\n};\n\nexport default function AddTransactionScreen({ navigation, route }) {\n  console.log('=== AddTransactionScreen Component Start ===');\n  console.log('Navigation prop:', navigation);\n  console.log('Route prop:', route);\n  \n  const { dispatch } = useTransactions();\n  const { categories, addCategory } = useCategories();\n  console.log('TransactionsContext dispatch available:', !!dispatch);\n  \n  const theme = useTheme();\n  console.log('Theme loaded:', !!theme);\n  \n  const { colors } = theme;\n  const { t } = useLanguage();\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  console.log('AddTransactionScreen mounted with route params:', route.params);\n\n  const params = route.params || {};\n  const isEditing = Boolean(params.isEditing);\n  const existingTransaction = params.transaction;\n\n  console.log('Is editing:', isEditing);\n  console.log('Existing transaction:', existingTransaction);\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [transactionType, setTransactionType] = useState('expense');\n  const [errors, setErrors] = useState({});\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n\n  useEffect(() => {\n    console.log('Setting form values. IsEditing:', isEditing, 'Transaction:', existingTransaction);\n    if (isEditing && existingTransaction) {\n      console.log('Existing transaction ID:', existingTransaction.id);\n      setDescription(existingTransaction.description || '');\n      setAmount(existingTransaction.amount ? Math.abs(existingTransaction.amount).toString() : '');\n      setCategory(existingTransaction.category || '');\n      setIsRecurring(Boolean(existingTransaction.isRecurring));\n      setTransactionType(existingTransaction.amount < 0 ? 'expense' : 'income');\n    }\n    loadSelectedCurrency();\n  }, [isEditing, existingTransaction]);\n\n  const loadSelectedCurrency = async () => {\n    try {\n      const currency = await AsyncStorage.getItem('selectedCurrency');\n      if (currency) {\n        setSelectedCurrency(currency);\n      }\n    } catch (error) {\n      console.warn('Error loading currency preference:', error);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!description.trim()) {\n      newErrors.description = t('descriptionRequired');\n    }\n\n    if (!amount) {\n      newErrors.amount = t('amountRequired');\n    } else if (isNaN(amount) || parseFloat(amount) <= 0) {\n      newErrors.amount = t('invalidAmount');\n    }\n\n    if (!category.trim()) {\n      newErrors.category = t('categoryRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    const parsedAmount = parseFloat(amount);\n    const finalAmount = transactionType === 'expense' ? -parsedAmount : parsedAmount;\n    const trimmedCategory = category.trim();\n\n    // If the category is new (not in the existing categories), add it\n    if (trimmedCategory && !categories.includes(trimmedCategory)) {\n      await addCategory(trimmedCategory);\n    }\n\n    const transactionData = {\n      description: description.trim(),\n      amount: finalAmount,\n      date: new Date().toISOString().split('T')[0],\n      category: trimmedCategory,\n      isRecurring,\n      type: transactionType,\n    };\n\n    if (isEditing) {\n      dispatch({\n        type: 'UPDATE_TRANSACTION',\n        payload: {\n          id: existingTransaction.id,\n          ...transactionData,\n        },\n      });\n    } else {\n      const newTransactionId = Date.now().toString();\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: {\n          id: newTransactionId,\n          ...transactionData,\n        },\n      });\n    }\n\n    setShowSnackbar(true);\n    setTimeout(() => {\n      setShowSnackbar(false);\n      navigation.goBack();\n    }, 1500);\n  };\n\n  return (\n    <>\n      <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\n        <View style={styles.content}>\n          <Text variant=\"headlineMedium\" style={[styles.title, { color: colors.primary }]}>\n            {isEditing ? t('editTransaction') : t('addTransaction')}\n          </Text>\n\n          <SegmentedButtons\n            value={transactionType}\n            onValueChange={setTransactionType}\n            buttons={[\n              { value: 'expense', label: t('expense') },\n              { value: 'income', label: t('income') },\n            ]}\n            style={styles.segmentedButtons}\n          />\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('description')}\n            value={description}\n            onChangeText={(text) => {\n              setDescription(text);\n              setErrors({ ...errors, description: '' });\n            }}\n            error={!!errors.description}\n            style={styles.input}\n            accessibilityLabel=\"Transaction description input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.description}>\n            {errors.description}\n          </HelperText>\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('amount')}\n            value={amount}\n            onChangeText={(text) => {\n              setAmount(text);\n              setErrors({ ...errors, amount: '' });\n            }}\n            keyboardType=\"decimal-pad\"\n            error={!!errors.amount}\n            style={styles.input}\n            left={<TextInput.Affix text={getCurrencySymbol(selectedCurrency)} />}\n            accessibilityLabel=\"Transaction amount input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.amount}>\n            {errors.amount}\n          </HelperText>\n\n          <View style={styles.categoryInputContainer}>\n            <Menu\n              visible={showCategoryMenu}\n              onDismiss={() => setShowCategoryMenu(false)}\n              anchor={\n                <TextInput\n                  mode=\"outlined\"\n                  label={t('category')}\n                  value={category}\n                  onChangeText={(text) => {\n                    setCategory(text);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  error={!!errors.category}\n                  style={[styles.input, { flex: 1 }]}\n                  right={\n                    <TextInput.Icon \n                      icon=\"menu-down\" \n                      onPress={() => setShowCategoryMenu(true)}\n                    />\n                  }\n                  onPressIn={() => setShowCategoryMenu(true)}\n                  accessibilityLabel=\"Transaction category input\"\n                />\n              }\n            >\n              {categories.map((cat) => (\n                <Menu.Item\n                  key={cat}\n                  onPress={() => {\n                    setCategory(cat);\n                    setShowCategoryMenu(false);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  title={cat}\n                />\n              ))}\n            </Menu>\n          </View>\n          <HelperText type=\"error\" visible={!!errors.category}>\n            {errors.category}\n          </HelperText>\n\n          <View style={styles.switchContainer}>\n            <Text variant=\"bodyLarge\">{t('recurringMonthly')}</Text>\n            <Switch\n              value={isRecurring}\n              onValueChange={setIsRecurring}\n              color={colors.primary}\n            />\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={handleSubmit}\n            style={styles.button}\n            labelStyle={styles.buttonLabel}\n            accessibilityLabel={isEditing ? \"Update transaction button\" : \"Add transaction button\"}\n          >\n            {isEditing ? t('update') : t('add')}\n          </Button>\n        </View>\n      </ScrollView>\n      <CustomSnackbar\n        visible={showSnackbar}\n        message={isEditing ? t('transactionUpdated') : t('transactionAdded')}\n        style={{ backgroundColor: colors.success }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 16,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 8,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 16,\n  },\n  switchLabel: {\n    marginLeft: 8,\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 16,\n    elevation: 4,\n  },\n  snackbarText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 16,\n    paddingVertical: 8,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  categoryInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});","import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, ScrollView, Platform } from 'react-native';\nimport { VictoryPie, VictoryLabel, VictoryLegend, VictoryAnimation } from 'victory-native';\nimport { Text, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CHART_TYPES = [\n  { value: 'pie', label: 'pieChart' },\n  { value: 'donut', label: 'donutChart' },\n];\n\nexport default function ChartScreen() {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n  const [chartType, setChartType] = useState('donut');\n\n  // Calculate category totals and percentages for expenses only\n  const categorySums = state.transactions\n    .filter(tx => tx.amount < 0) // Only include expenses\n    .reduce((acc, tx) => {\n      const cat = tx.category || 'Uncategorized';\n      acc[cat] = (acc[cat] || 0) + Math.abs(tx.amount); // Use absolute value for display\n      return acc;\n    }, {});\n\n  const total = Object.values(categorySums).reduce((sum, amount) => sum + amount, 0);\n\n  const chartData = Object.entries(categorySums).map(([category, amount]) => ({\n    x: category,\n    y: amount,\n    percentage: ((amount / total) * 100).toFixed(1)\n  }));\n\n  const colorScale = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.error,\n    theme.colors.success,\n    theme.colors.warning,\n    '#9333EA',\n    '#2563EB',\n    '#DC2626',\n  ];\n\n  if (chartData.length === 0) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n        <Text variant=\"headlineMedium\" style={styles.noDataText}>\n          {t('noExpenseData')}\n        </Text>\n        <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n          {t('addExpensesToSee')}\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView \n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <Text variant=\"headlineMedium\" style={[styles.title, { color: theme.colors.primary }]}>\n        {t('expenseBreakdown')}\n      </Text>\n      \n      <Surface style={styles.chartContainer} elevation={2}>\n        <Text variant=\"titleLarge\" style={[styles.totalAmount, { color: theme.colors.error }]}>\n          {t('totalSpent')}: {formatCurrency(total, selectedCurrency)}\n        </Text>\n\n        <SegmentedButtons\n          value={chartType}\n          onValueChange={setChartType}\n          buttons={CHART_TYPES.map(type => ({\n            ...type,\n            label: t(type.label)\n          }))}\n          style={styles.segmentedButtons}\n        />\n        \n        <VictoryPie\n          data={chartData}\n          colorScale={colorScale}\n          innerRadius={chartType === 'donut' ? 80 : 0}\n          padAngle={2}\n          animate={{\n            duration: 1000,\n            onLoad: { duration: 500 }\n          }}\n          height={300}\n          width={Math.min(350, Dimensions.get('window').width - 40)}\n          labels={() => ''}\n          labelComponent={<VictoryLabel text={''} />}\n          style={{\n            data: {\n              stroke: theme.colors.background,\n              strokeWidth: 1,\n            },\n            labels: { display: 'none' }\n          }}\n        />\n\n        <View style={styles.legendContainer}>\n          <VictoryLegend\n            x={10}\n            y={0}\n            orientation=\"horizontal\"\n            gutter={20}\n            rowGutter={10}\n            itemsPerRow={2}\n            centerTitle\n            style={{\n              labels: { \n                fill: theme.colors.text,\n                fontSize: 12,\n              },\n              parent: {\n                width: '100%',\n              }\n            }}\n            data={chartData.map((d, i) => ({\n              name: `${d.x}: ${formatCurrency(d.y, selectedCurrency)} (${d.percentage}%)`,\n              symbol: { fill: colorScale[i % colorScale.length] }\n            }))}\n          />\n        </View>\n      </Surface>\n\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"titleMedium\" style={{ color: theme.colors.text }}>\n          {t('summary')}\n        </Text>\n        {chartData.map((item, index) => (\n          <View key={item.x} style={styles.summaryRow}>\n            <View style={styles.categoryInfo}>\n              <View \n                style={[\n                  styles.colorIndicator, \n                  { backgroundColor: colorScale[index % colorScale.length] }\n                ]} \n              />\n              <Text variant=\"bodyMedium\">{item.x}</Text>\n            </View>\n            <Text variant=\"bodyMedium\" style={{ color: theme.colors.text }}>\n              {formatCurrency(item.y, selectedCurrency)}\n            </Text>\n          </View>\n        ))}\n        <View style={[styles.summaryRow, styles.totalRow]}>\n          <Text variant=\"titleMedium\">{t('total')}</Text>\n          <Text variant=\"titleMedium\" style={{ color: theme.colors.primary }}>\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n      </Surface>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    padding: 16,\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  chartContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center',\n    width: '100%',\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    width: '100%',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    flexWrap: 'wrap',\n  },\n  categoryInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 150,\n    marginRight: 8,\n  },\n  colorIndicator: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 8,\n    flexShrink: 0,\n  },\n  totalRow: {\n    borderTopWidth: 1,\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  noDataText: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  totalAmount: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  legendContainer: {\n    marginTop: 20,\n    width: '100%',\n    paddingHorizontal: 10,\n    alignItems: 'flex-start',\n  },\n});\n","import * as Notifications from 'expo-notifications';\nimport { Platform } from 'react-native';\n\nexport async function scheduleDailyReminder() {\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Notification permissions not granted!');\n    return;\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('daily-reminders', {\n      name: 'Daily Reminders',\n      importance: Notifications.AndroidImportance.MAX,\n    });\n  }\n\n  await Notifications.cancelAllScheduledNotificationsAsync();\n\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: 'Budget Reminder',\n      body: 'Don’t forget to log your expenses today!',\n      sound: true,\n    },\n    trigger: {\n      hour: 9,\n      minute: 0,\n      repeats: true,\n      channelId: 'daily-reminders', \n    },\n  });\n\n  alert('Daily reminder scheduled for 9 AM.');\n}\n\n// Configure notification handler\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: false,\n  }),\n});\n","import React, { createContext, useContext, useState } from 'react';\nimport { MD3LightTheme, MD3DarkTheme, adaptNavigationTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n  reactNavigationLight: NavigationDefaultTheme,\n  reactNavigationDark: NavigationDarkTheme,\n});\n\nconst lightTheme = {\n  ...MD3LightTheme,\n  ...LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...LightTheme.colors,\n    primary: '#3B82F6',\n    secondary: '#F59E0B',\n    background: '#FFFFFF',\n    surface: '#F3F4F6',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    error: '#EF4444',\n    success: '#10B981',\n    warning: '#F59E0B',\n    info: '#3B82F6',\n    border: '#E5E7EB',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n    xxl: 48,\n  },\n  typography: {\n    fontFamily: {\n      regular: 'System',\n      medium: 'System',\n      bold: 'System',\n    },\n    fontSize: {\n      xs: 12,\n      sm: 14,\n      md: 16,\n      lg: 18,\n      xl: 20,\n      xxl: 24,\n      xxxl: 32,\n    },\n    lineHeight: {\n      tight: 1.25,\n      normal: 1.5,\n      relaxed: 1.75,\n    },\n  },\n  roundness: 8,\n};\n\nconst darkTheme = {\n  ...MD3DarkTheme,\n  ...DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...DarkTheme.colors,\n    primary: '#60A5FA',\n    secondary: '#FBBF24',\n    background: '#111827',\n    surface: '#1F2937',\n    text: '#F9FAFB',\n    textSecondary: '#9CA3AF',\n    error: '#F87171',\n    success: '#34D399',\n    warning: '#FBBF24',\n    info: '#60A5FA',\n    border: '#374151',\n  },\n  spacing: lightTheme.spacing,\n  typography: lightTheme.typography,\n  roundness: lightTheme.roundness,\n};\n\nconst ThemeContext = createContext({\n  theme: lightTheme,\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport function ThemeProvider({ children }) {\n  const colorScheme = useColorScheme();\n  const [isDarkMode, setIsDarkMode] = useState(colorScheme === 'dark');\n  const currentTheme = isDarkMode ? darkTheme : lightTheme;\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: currentTheme, isDarkMode, toggleTheme }}>\n      <PaperProvider theme={currentTheme}>{children}</PaperProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useAppTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Modal as RNModal } from 'react-native';\nimport { List, Switch, Divider, Text, Surface, useTheme, Button, TextInput, IconButton } from 'react-native-paper';\nimport { scheduleDailyReminder } from '../notifications/NotificationsService';\nimport { useAppTheme } from '../../theme';\nimport { getAvailableCurrencies } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function SettingsScreen() {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { isDarkMode, toggleTheme } = useAppTheme();\n  const { language, changeLanguage, t } = useLanguage();\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n  const [showCurrencySelector, setShowCurrencySelector] = useState(false);\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const currencies = getAvailableCurrencies();\n  const { selectedCurrency, handleCurrencyChange } = useTransactions();\n  const { categories, addCategory, removeCategory, updateCategory } = useCategories();\n  \n  // Category management state\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [editedCategory, setEditedCategory] = useState('');\n\n  const handleNotificationToggle = async () => {\n    if (!notificationsEnabled) {\n      await scheduleDailyReminder();\n    }\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n\n  const handleCurrencySelect = async (currencyCode) => {\n    await handleCurrencyChange(currencyCode);\n    setShowCurrencySelector(false);\n  };\n\n  const selectedCurrencyDetails = currencies.find(c => c.code === selectedCurrency);\n\n  const handleAddCategory = () => {\n    if (newCategory.trim()) {\n      addCategory(newCategory.trim());\n      setNewCategory('');\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleEditCategory = () => {\n    if (editedCategory.trim() && selectedCategory) {\n      updateCategory(selectedCategory, editedCategory.trim());\n      setEditedCategory('');\n      setSelectedCategory(null);\n      setShowEditCategory(false);\n    }\n  };\n\n  const handleDeleteCategory = (category) => {\n    removeCategory(category);\n  };\n\n  const renderDialog = (visible, title, content, onDismiss) => {\n    return (\n      <RNModal\n        visible={visible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={onDismiss}\n      >\n        <View style={styles.modalOverlay}>\n          <Surface style={[styles.dialogContainer, { backgroundColor: colors.surface }]} elevation={5}>\n            <Text variant=\"titleLarge\" style={[styles.dialogTitle, { color: colors.text }]}>\n              {title}\n            </Text>\n            {content}\n          </Surface>\n        </View>\n      </RNModal>\n    );\n  };\n\n  const renderAddCategoryDialog = () => {\n    return renderDialog(\n      showAddCategory,\n      t('addNewCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={newCategory}\n          onChangeText={setNewCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowAddCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleAddCategory}>{t('add')}</Button>\n        </View>\n      </View>,\n      () => setShowAddCategory(false)\n    );\n  };\n\n  const renderEditCategoryDialog = () => {\n    return renderDialog(\n      showEditCategory,\n      t('editCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={editedCategory}\n          onChangeText={setEditedCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowEditCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleEditCategory}>{t('update')}</Button>\n        </View>\n      </View>,\n      () => setShowEditCategory(false)\n    );\n  };\n\n  const renderCurrencySelector = () => {\n    return renderDialog(\n      showCurrencySelector,\n      'Select Currency',\n      <View>\n        <ScrollView style={styles.currencyList}>\n          {currencies.map((currency) => (\n            <TouchableOpacity\n              key={currency.code}\n              style={[\n                styles.currencyItem,\n                selectedCurrency === currency.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => handleCurrencySelect(currency.code)}\n            >\n              <Text style={[styles.currencyLabel, { color: colors.text }]}>\n                {currency.label}\n              </Text>\n              {selectedCurrency === currency.code && (\n                <List.Icon icon=\"check\" color={colors.primary} />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowCurrencySelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          Close\n        </Button>\n      </View>,\n      () => setShowCurrencySelector(false)\n    );\n  };\n\n  const renderLanguageSelector = () => {\n    const languages = [\n      { code: 'en', label: 'English' },\n      { code: 'tr', label: 'Türkçe' }\n    ];\n\n    return renderDialog(\n      showLanguageSelector,\n      t('language'),\n      <View>\n        <ScrollView style={styles.languageList}>\n          {languages.map((lang) => (\n            <TouchableOpacity\n              key={lang.code}\n              style={[\n                styles.languageItem,\n                language === lang.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => {\n                changeLanguage(lang.code);\n                setShowLanguageSelector(false);\n              }}\n            >\n              <Text style={[styles.languageLabel, { color: colors.text }]}>\n                {lang.label}\n              </Text>\n              {language === lang.code && (\n                <List.Icon icon=\"check\" color={colors.primary} />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowLanguageSelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          {t('close')}\n        </Button>\n      </View>,\n      () => setShowLanguageSelector(false)\n    );\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: colors.background }]}>\n      <ScrollView style={styles.container}>\n        <Surface style={[styles.surface, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('appSettings')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('darkMode')}\n              description={t('darkModeDesc')}\n              left={props => <List.Icon {...props} icon=\"theme-light-dark\" />}\n              right={() => (\n                <Switch\n                  value={isDarkMode}\n                  onValueChange={toggleTheme}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('dailyReminders')}\n              description={t('dailyRemindersDesc')}\n              left={props => <List.Icon {...props} icon=\"bell\" />}\n              right={() => (\n                <Switch\n                  value={notificationsEnabled}\n                  onValueChange={handleNotificationToggle}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('currencyFormat')}\n              description={`${t('currentCurrency')}${selectedCurrencyDetails?.label || 'USD ($)'}`}\n              left={props => <List.Icon {...props} icon=\"currency-usd\" />}\n              onPress={() => setShowCurrencySelector(true)}\n            />\n            <Divider />\n\n            <List.Item\n              title={t('language')}\n              description={t('languageDesc')}\n              left={props => <List.Icon {...props} icon=\"translate\" />}\n              onPress={() => setShowLanguageSelector(true)}\n            />\n          </List.Section>\n\n          <Divider style={styles.divider} />\n\n          <List.Section>\n            <Text variant=\"titleMedium\" style={[styles.sectionTitle, { color: colors.text }]}>\n              {t('categories')}\n            </Text>\n            \n            {categories.map((category) => (\n              <List.Item\n                key={category}\n                title={category}\n                right={props => (\n                  <View style={styles.categoryActions}>\n                    <IconButton\n                      icon=\"pencil\"\n                      size={20}\n                      onPress={() => {\n                        setSelectedCategory(category);\n                        setEditedCategory(category);\n                        setShowEditCategory(true);\n                      }}\n                    />\n                    <IconButton\n                      icon=\"delete\"\n                      size={20}\n                      onPress={() => handleDeleteCategory(category)}\n                    />\n                  </View>\n                )}\n              />\n            ))}\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowAddCategory(true)}\n              style={styles.addButton}\n            >\n              {t('addNewCategory')}\n            </Button>\n          </List.Section>\n        </Surface>\n\n        <Surface style={[styles.surface, styles.aboutSection, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('about')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('version')}\n              description=\"1.0.0\"\n              left={props => <List.Icon {...props} icon=\"information\" />}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('helpAndSupport')}\n              description={t('helpDesc')}\n              left={props => <List.Icon {...props} icon=\"help-circle\" />}\n              onPress={() => {/* TODO: Implement help section */}}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('privacyPolicy')}\n              description={t('privacyPolicyDesc')}\n              left={props => <List.Icon {...props} icon=\"shield-account\" />}\n              onPress={() => {/* TODO: Implement privacy policy */}}\n            />\n          </List.Section>\n        </Surface>\n      </ScrollView>\n\n      {renderCurrencySelector()}\n      {renderLanguageSelector()}\n      {renderAddCategoryDialog()}\n      {renderEditCategoryDialog()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  surface: {\n    borderRadius: 8,\n    marginBottom: 16,\n    padding: 16,\n  },\n  sectionTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  aboutSection: {\n    marginTop: 8,\n  },\n  currencySelector: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{ translateX: -150 }, { translateY: -200 }],\n    width: 300,\n    maxHeight: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  currencySelectorHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  currencySelectorTitle: {\n    fontWeight: '600',\n  },\n  closeButton: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  currencyList: {\n    flexGrow: 0,\n  },\n  currencyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 4,\n  },\n  currencyLabel: {\n    fontSize: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  categoryActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  addButton: {\n    marginTop: 16,\n    marginHorizontal: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dialogContainer: {\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  dialogTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  dialogInput: {\n    marginBottom: 16,\n  },\n  dialogActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 8,\n  },\n  dialogCloseButton: {\n    marginTop: 16,\n  },\n  languageList: {\n    maxHeight: 200,\n  },\n  languageItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  languageLabel: {\n    fontSize: 16,\n  },\n});\n","import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useTheme } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport AddTransactionScreen from '../screens/AddTransactionScreen';\nimport ChartScreen from '../screens/ChartScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nfunction HomeStack() {\n  const { colors } = useTheme();\n  \n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background,\n          elevation: 0,\n          shadowOpacity: 0,\n        },\n        headerTintColor: colors.text,\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          title: 'My Budget',\n        }}\n      />\n      <Stack.Screen \n        name=\"AddTransaction\" \n        component={AddTransactionScreen}\n        options={({ route }) => ({\n          title: route.params?.isEditing ? 'Edit Transaction' : 'Add Transaction',\n          headerStyle: {\n            backgroundColor: colors.background,\n            elevation: 0,\n            shadowOpacity: 0,\n          },\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function RootNavigation() {\n  const { colors } = useTheme();\n\n  const screenOptions = {\n    headerShown: true,\n    headerStyle: {\n      backgroundColor: colors.background,\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTintColor: colors.text,\n    headerTitleStyle: {\n      fontWeight: '600',\n    },\n    tabBarStyle: {\n      backgroundColor: colors.surface,\n      borderTopColor: colors.border,\n      paddingVertical: 8,\n      height: 60,\n    },\n    tabBarActiveTintColor: colors.primary,\n    tabBarInactiveTintColor: colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: '500',\n    },\n  };\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={screenOptions}\n    >\n      <Tab.Screen\n        name=\"HomeStack\"\n        component={HomeStack}\n        options={{\n          title: 'Home',\n          headerShown: false,\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Charts\"\n        component={ChartScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"chart-bar\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { TransactionsProvider } from './src/context/TransactionsContext';\nimport { CategoriesProvider } from './src/context/CategoriesContext';\nimport { LanguageProvider } from './src/context/LanguageContext';\nimport RootNavigation from './src/navigation/RootNavigation';\nimport { ThemeProvider } from './theme';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Platform, Text } from 'react-native';\n\nconst linking = {\n  enabled: true,\n  prefixes: ['https://gityasin.github.io/MyBudgetApp', 'mybudgetapp://'],\n  config: {\n    screens: {\n      HomeStack: {\n        screens: {\n          Home: '',\n          AddTransaction: 'transaction/add',\n        }\n      },\n      Charts: 'charts',\n      Settings: 'settings',\n    },\n  },\n};\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <ThemeProvider>\n          <LanguageProvider>\n            <CategoriesProvider>\n              <TransactionsProvider>\n                <NavigationContainer\n                  linking={linking}\n                  fallback={<Text>Loading...</Text>}\n                  documentTitle={{\n                    formatter: (options, route) =>\n                      `My Budget App${route?.name ? ` - ${route.name}` : ''}`,\n                  }}\n                >\n                  <RootNavigation />\n                </NavigationContainer>\n              </TransactionsProvider>\n            </CategoriesProvider>\n          </LanguageProvider>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/MyBudgetApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [419], () => (__webpack_require__(57119)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["TRANSACTIONS_KEY","async","loadTransactions","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","warn","initialState","transactions","transactionsReducer","state","action","log","type","payload","_objectSpread","map","tx","id","filter","TransactionsContext","createContext","TransactionsProvider","children","dispatch","useReducer","selectedCurrency","setSelectedCurrency","useState","useEffect","stored","storedCurrency","Promise","all","loadInitialData","stringify","setItem","saveTransactions","_jsx","Provider","value","handleCurrencyChange","newCurrency","error","useTransactions","useContext","CATEGORIES_STORAGE_KEY","DEFAULT_CATEGORIES","CategoriesContext","CategoriesProvider","categories","setCategories","loadCategories","storedCategories","saveCategories","newCategories","addCategory","category","includes","removeCategory","c","updateCategory","oldCategory","newCategory","useCategories","translations","en","settings","save","cancel","add","edit","delete","close","update","appSettings","darkMode","darkModeDesc","dailyReminders","dailyRemindersDesc","currencyFormat","currentCurrency","addNewCategory","editCategory","categoryName","language","languageDesc","about","version","helpAndSupport","helpDesc","privacyPolicy","privacyPolicyDesc","addTransaction","amount","date","note","income","expense","editTransaction","description","recurringMonthly","transactionUpdated","transactionAdded","recentTransactions","selectCategory","descriptionRequired","amountRequired","invalidAmount","categoryRequired","myBudget","totalBalance","noTransactions","addFirstTransaction","expenseBreakdown","totalSpent","pieChart","donutChart","summary","total","noExpenseData","addExpensesToSee","tr","LanguageContext","LanguageProvider","setLanguage","savedLanguage","loadLanguage","changeLanguage","newLanguage","t","key","_translations$languag","useLanguage","context","Error","CURRENCIES","USD","symbol","locale","position","rate","EUR","GBP","JPY","CNY","INR","AUD","CAD","CHF","TRY","formatCurrency","currencyCode","currency","formattedNumber","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toFixed","getCurrencySymbol","_CURRENCIES$currencyC","CATEGORY_ICONS","Food","Transport","Shopping","Bills","Entertainment","Other","TransactionItem","transaction","onPress","theme","useTheme","colors","menuVisible","setMenuVisible","React","navigation","useNavigation","isExpense","Math","abs","icon","formattedDate","Date","toLocaleDateString","undefined","year","month","day","handleDelete","handleEdit","navigate","isEditing","Surface","styles","surface","elevation","TouchableRipple","touchable","accessibilityRole","accessibilityLabel","List","title","left","props","color","primary","right","_jsxs","View","rightContainer","Text","variant","success","Menu","visible","onDismiss","anchor","IconButton","size","Item","leadingIcon","titleStyle","descriptionStyle","textSecondary","StyleSheet","create","marginBottom","borderRadius","overflow","flex","fontWeight","marginTop","alignSelf","flexDirection","alignItems","gap","HomeScreen","reduce","acc","expenses","container","backgroundColor","background","FlatList","data","keyExtractor","item","renderItem","ListHeaderComponent","renderHeader","_Fragment","summaryContainer","balanceRow","Divider","divider","statsContainer","statItem","sectionTitle","ListEmptyComponent","renderEmptyList","emptyContainer","contentContainerStyle","listContent","FAB","fab","label","padding","paddingBottom","justifyContent","marginVertical","paddingVertical","margin","bottom","CustomSnackbar","message","fadeAnim","Animated","Value","timing","toValue","duration","useNativeDriver","start","snackbar","opacity","transform","translateY","interpolate","inputRange","outputRange","snackbarText","AddTransactionScreen","route","params","Boolean","existingTransaction","setDescription","setAmount","setCategory","isRecurring","setIsRecurring","transactionType","setTransactionType","errors","setErrors","showSnackbar","setShowSnackbar","showCategoryMenu","setShowCategoryMenu","toString","loadSelectedCurrency","ScrollView","content","SegmentedButtons","onValueChange","buttons","segmentedButtons","TextInput","mode","onChangeText","text","input","HelperText","keyboardType","Affix","categoryInputContainer","Icon","onPressIn","cat","switchContainer","Switch","Button","validateForm","newErrors","trim","isNaN","parseFloat","Object","keys","length","parsedAmount","finalAmount","trimmedCategory","transactionData","toISOString","split","newTransactionId","now","setTimeout","goBack","button","labelStyle","buttonLabel","textAlign","switchLabel","marginLeft","fontSize","CHART_TYPES","ChartScreen","chartType","setChartType","categorySums","values","sum","chartData","entries","x","y","percentage","colorScale","secondary","warning","noDataText","contentContainer","chartContainer","totalAmount","VictoryPie","innerRadius","padAngle","animate","onLoad","height","width","min","Dimensions","get","labels","labelComponent","VictoryLabel","stroke","strokeWidth","display","legendContainer","VictoryLegend","orientation","gutter","rowGutter","itemsPerRow","centerTitle","fill","parent","d","i","name","index","summaryRow","categoryInfo","colorIndicator","totalRow","flexGrow","flexWrap","minWidth","marginRight","flexShrink","borderTopWidth","paddingTop","paddingHorizontal","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","LightTheme","DarkTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","lightTheme","MD3LightTheme","info","border","spacing","xs","sm","md","lg","xl","xxl","typography","fontFamily","regular","medium","bold","xxxl","lineHeight","tight","normal","relaxed","roundness","darkTheme","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","ThemeProvider","colorScheme","useColorScheme","setIsDarkMode","currentTheme","PaperProvider","SettingsScreen","useAppTheme","notificationsEnabled","setNotificationsEnabled","showCurrencySelector","setShowCurrencySelector","showLanguageSelector","setShowLanguageSelector","currencies","code","details","showAddCategory","setShowAddCategory","showEditCategory","setShowEditCategory","setNewCategory","selectedCategory","setSelectedCategory","editedCategory","setEditedCategory","handleNotificationToggle","status","existingStatus","finalStatus","body","sound","trigger","hour","minute","repeats","channelId","alert","scheduleDailyReminder","selectedCurrencyDetails","find","handleAddCategory","handleEditCategory","renderDialog","RNModal","transparent","animationType","onRequestClose","modalOverlay","dialogContainer","dialogTitle","mainContainer","categoryActions","handleDeleteCategory","addButton","aboutSection","currencyList","TouchableOpacity","currencyItem","primaryContainer","handleCurrencySelect","currencyLabel","dialogCloseButton","languageList","lang","languageItem","languageLabel","dialogInput","dialogActions","currencySelector","top","translateX","maxHeight","currencySelectorHeader","currencySelectorTitle","closeButton","marginHorizontal","maxWidth","borderBottomWidth","borderBottomColor","Tab","createBottomTabNavigator","Stack","createStackNavigator","HomeStack","Navigator","screenOptions","headerStyle","shadowOpacity","headerTintColor","headerTitleStyle","Screen","component","options","_route$params","RootNavigation","headerShown","tabBarStyle","borderTopColor","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","initialRouteName","tabBarIcon","linking","enabled","prefixes","config","screens","Home","AddTransaction","Charts","Settings","registerRootComponent","GestureHandlerRootView","SafeAreaProvider","NavigationContainer","fallback","documentTitle","formatter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}