{"version":3,"file":"static/js/main.57e99256.js","mappings":"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","sources":["src/services/storage.js","src/context/TransactionsContext.js","src/context/CategoriesContext.js","src/i18n/translations.js","src/context/LanguageContext.js","src/services/format.js","src/components/TransactionItem.js","src/screens/HomeScreen.js","src/screens/AddTransactionScreen.js","src/screens/ChartScreen.js","src/notifications/NotificationsService.js","theme.js","src/screens/SettingsScreen.js","src/screens/OnboardingScreen.js","src/navigation/RootNavigation.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst TRANSACTIONS_KEY = '@transactions';\n\nexport async function loadTransactions() {\n  try {\n    const jsonValue = await AsyncStorage.getItem(TRANSACTIONS_KEY);\n    return jsonValue != null ? JSON.parse(jsonValue) : [];\n  } catch (e) {\n    console.warn('Error loading transactions:', e);\n    return [];\n  }\n}\n\nexport async function saveTransactions(transactions) {\n  try {\n    const jsonValue = JSON.stringify(transactions);\n    await AsyncStorage.setItem(TRANSACTIONS_KEY, jsonValue);\n  } catch (e) {\n    console.warn('Error saving transactions:', e);\n  }\n}\n","import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport { loadTransactions, saveTransactions } from '../services/storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst initialState = {\n  transactions: [],\n};\n\nfunction transactionsReducer(state, action) {\n  console.log(\"Reducer called with action:\", action);\n\n  switch (action.type) {\n    case 'SET_TRANSACTIONS':\n      console.log(\"Setting transactions:\", action.payload);\n      return { ...state, transactions: action.payload };\n    case 'ADD_TRANSACTION':\n      console.log(\"Adding transaction:\", action.payload);\n      return { ...state, transactions: [...state.transactions, action.payload] };\n    case 'UPDATE_TRANSACTION':\n      console.log(\"Updating transaction:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.map(tx =>\n          tx.id === action.payload.id ? action.payload : tx\n        ),\n      };\n    case 'DELETE_TRANSACTION':\n      console.log(\"Deleting transaction with ID:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.filter(tx => tx.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n\nconst TransactionsContext = createContext();\n\nexport function TransactionsProvider({ children }) {\n  const [state, dispatch] = useReducer(transactionsReducer, initialState);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      const [stored, storedCurrency] = await Promise.all([\n        loadTransactions(),\n        AsyncStorage.getItem('selectedCurrency')\n      ]);\n\n      dispatch({ type: 'SET_TRANSACTIONS', payload: stored });\n      \n      if (storedCurrency) {\n        setSelectedCurrency(storedCurrency);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Save transactions whenever they change\n  useEffect(() => {\n    console.log(\"Saving transactions to storage:\", state.transactions);\n    saveTransactions(state.transactions);\n  }, [state.transactions]);\n\n  // Handle currency changes - now just updates the display currency\n  const handleCurrencyChange = async (newCurrency) => {\n    if (newCurrency === selectedCurrency) return;\n\n    try {\n      await AsyncStorage.setItem('selectedCurrency', newCurrency);\n      setSelectedCurrency(newCurrency);\n    } catch (error) {\n      console.error('Error changing currency:', error);\n    }\n  };\n\n  return (\n    <TransactionsContext.Provider \n      value={{ \n        state, \n        dispatch,\n        selectedCurrency,\n        handleCurrencyChange\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  return useContext(TransactionsContext);\n}","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CATEGORIES_STORAGE_KEY = '@categories';\r\nconst DEFAULT_CATEGORIES = ['Food', 'Transport', 'Shopping', 'Bills', 'Entertainment', 'Other'];\r\n\r\nconst CategoriesContext = createContext();\r\n\r\nexport function CategoriesProvider({ children }) {\r\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    // Load categories from storage on mount\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const storedCategories = await AsyncStorage.getItem(CATEGORIES_STORAGE_KEY);\r\n      if (storedCategories) {\r\n        setCategories(JSON.parse(storedCategories));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n    }\r\n  };\r\n\r\n  const saveCategories = async (newCategories) => {\r\n    try {\r\n      await AsyncStorage.setItem(CATEGORIES_STORAGE_KEY, JSON.stringify(newCategories));\r\n      setCategories(newCategories);\r\n    } catch (error) {\r\n      console.error('Error saving categories:', error);\r\n    }\r\n  };\r\n\r\n  const addCategory = async (category) => {\r\n    if (!category || categories.includes(category)) return;\r\n    const newCategories = [...categories, category];\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const removeCategory = async (category) => {\r\n    const newCategories = categories.filter(c => c !== category);\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const updateCategory = async (oldCategory, newCategory) => {\r\n    if (!newCategory || categories.includes(newCategory)) return;\r\n    const newCategories = categories.map(c => \r\n      c === oldCategory ? newCategory : c\r\n    );\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <CategoriesContext.Provider \r\n      value={{\r\n        categories,\r\n        addCategory,\r\n        removeCategory,\r\n        updateCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </CategoriesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCategories() {\r\n  return useContext(CategoriesContext);\r\n} ","export const translations = {\r\n  en: {\r\n    // General\r\n    settings: 'Settings',\r\n    save: 'Save',\r\n    cancel: 'Cancel',\r\n    add: 'Add',\r\n    edit: 'Edit',\r\n    delete: 'Delete',\r\n    close: 'Close',\r\n    update: 'Update',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'App Settings',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDesc: 'Toggle dark/light theme',\r\n    dailyReminders: 'Daily Reminders',\r\n    dailyRemindersDesc: 'Get notified to add transactions',\r\n    currencyFormat: 'Currency Format',\r\n    currentCurrency: 'Current: ',\r\n    categories: 'Categories',\r\n    addNewCategory: 'Add New Category',\r\n    editCategory: 'Edit Category',\r\n    categoryName: 'Category Name',\r\n    language: 'Language',\r\n    languageDesc: 'Change application language',\r\n    \r\n    // About Section\r\n    about: 'About',\r\n    version: 'Version',\r\n    helpAndSupport: 'Help & Support',\r\n    helpDesc: 'Get assistance with the app',\r\n    privacyPolicy: 'Privacy Policy',\r\n    privacyPolicyDesc: 'Read our privacy policy',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'Add Transaction',\r\n    amount: 'Amount',\r\n    category: 'Category',\r\n    date: 'Date',\r\n    note: 'Note',\r\n    income: 'Income',\r\n    expense: 'Expense',\r\n    editTransaction: 'Edit Transaction',\r\n    description: 'Description',\r\n    recurringMonthly: 'Recurring Monthly?',\r\n    transactionUpdated: 'Transaction updated successfully!',\r\n    transactionAdded: 'Transaction added successfully!',\r\n    recentTransactions: 'Recent Transactions',\r\n    selectCategory: 'Select Category',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Description is required',\r\n    amountRequired: 'Amount is required',\r\n    invalidAmount: 'Please enter a valid positive amount',\r\n    categoryRequired: 'Category is required',\r\n    \r\n    // Home Screen\r\n    myBudget: 'My Budget',\r\n    totalBalance: 'Total Balance',\r\n    noTransactions: 'No transactions yet',\r\n    addFirstTransaction: 'Tap the + button to add your first transaction',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Expense Breakdown',\r\n    totalSpent: 'Total Spent',\r\n    pieChart: 'Pie Chart',\r\n    donutChart: 'Donut Chart',\r\n    summary: 'Summary',\r\n    total: 'Total',\r\n    noExpenseData: 'No expense data available',\r\n    addExpensesToSee: 'Add some expenses to see your spending breakdown',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Select Your Language',\r\n    selectCurrency: 'Select Your Currency',\r\n    chooseTheme: 'Choose Your Theme',\r\n    lightTheme: 'Light Theme',\r\n    darkTheme: 'Dark Theme',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    getStarted: 'Get Started',\r\n    welcome: 'Welcome to My Budget',\r\n  },\r\n  tr: {\r\n    // General\r\n    settings: 'Ayarlar',\r\n    save: 'Kaydet',\r\n    cancel: 'İptal',\r\n    add: 'Ekle',\r\n    edit: 'Düzenle',\r\n    delete: 'Sil',\r\n    close: 'Kapat',\r\n    update: 'Güncelle',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'Uygulama Ayarları',\r\n    darkMode: 'Karanlık Mod',\r\n    darkModeDesc: 'Karanlık/aydınlık tema değiştir',\r\n    dailyReminders: 'Günlük Hatırlatmalar',\r\n    dailyRemindersDesc: 'İşlem ekleme hatırlatmaları al',\r\n    currencyFormat: 'Para Birimi',\r\n    currentCurrency: 'Mevcut: ',\r\n    categories: 'Kategoriler',\r\n    addNewCategory: 'Yeni Kategori Ekle',\r\n    editCategory: 'Kategori Düzenle',\r\n    categoryName: 'Kategori Adı',\r\n    language: 'Dil',\r\n    languageDesc: 'Uygulama dilini değiştir',\r\n    \r\n    // About Section\r\n    about: 'Hakkında',\r\n    version: 'Versiyon',\r\n    helpAndSupport: 'Yardım & Destek',\r\n    helpDesc: 'Uygulama ile ilgili yardım alın',\r\n    privacyPolicy: 'Gizlilik Politikası',\r\n    privacyPolicyDesc: 'Gizlilik politikamızı okuyun',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'İşlem Ekle',\r\n    amount: 'Tutar',\r\n    category: 'Kategori',\r\n    date: 'Tarih',\r\n    note: 'Not',\r\n    income: 'Gelir',\r\n    expense: 'Gider',\r\n    editTransaction: 'İşlem Düzenle',\r\n    description: 'Açıklama',\r\n    recurringMonthly: 'Aylık Tekrar?',\r\n    transactionUpdated: 'İşlem başarıyla güncellendi!',\r\n    transactionAdded: 'İşlem başarıyla eklendi!',\r\n    recentTransactions: 'Son İşlemler',\r\n    selectCategory: 'Kategori Seç',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Açıklama gerekli',\r\n    amountRequired: 'Tutar gerekli',\r\n    invalidAmount: 'Lütfen geçerli bir pozitif tutar girin',\r\n    categoryRequired: 'Kategori gerekli',\r\n    \r\n    // Home Screen\r\n    myBudget: 'Bütçem',\r\n    totalBalance: 'Toplam Bakiye',\r\n    noTransactions: 'Henüz işlem yok',\r\n    addFirstTransaction: 'İlk işleminizi eklemek için + butonuna dokunun',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Gider Dağılımı',\r\n    totalSpent: 'Toplam Harcama',\r\n    pieChart: 'Pasta Grafik',\r\n    donutChart: 'Halka Grafik',\r\n    summary: 'Özet',\r\n    total: 'Toplam',\r\n    noExpenseData: 'Gider verisi bulunmuyor',\r\n    addExpensesToSee: 'Harcama dağılımını görmek için gider ekleyin',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Dilinizi Seçin',\r\n    selectCurrency: 'Para Biriminizi Seçin',\r\n    chooseTheme: 'Temanızı Seçin',\r\n    lightTheme: 'Açık Tema',\r\n    darkTheme: 'Koyu Tema',\r\n    next: 'İleri',\r\n    previous: 'Geri',\r\n    getStarted: 'Başlayın',\r\n    welcome: 'My Budget\\'e Hoş Geldiniz',\r\n  }\r\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { translations } from '../i18n/translations';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  useEffect(() => {\r\n    // Load saved language preference\r\n    const loadLanguage = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('userLanguage');\r\n        if (savedLanguage) {\r\n          setLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language:', error);\r\n      }\r\n    };\r\n    \r\n    loadLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (newLanguage) => {\r\n    try {\r\n      await AsyncStorage.setItem('userLanguage', newLanguage);\r\n      setLanguage(newLanguage);\r\n    } catch (error) {\r\n      console.error('Error saving language:', error);\r\n    }\r\n  };\r\n\r\n  const t = (key) => {\r\n    return translations[language]?.[key] || translations.en[key] || key;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n}; ","// Currency formatting utilities\r\nexport const CURRENCIES = {\r\n  USD: { symbol: '$', locale: 'en-US', position: 'before', rate: 1 },\r\n  EUR: { symbol: '€', locale: 'de-DE', position: 'after', rate: 0.91 },\r\n  GBP: { symbol: '£', locale: 'en-GB', position: 'before', rate: 0.79 },\r\n  JPY: { symbol: '¥', locale: 'ja-JP', position: 'before', rate: 149.45 },\r\n  CNY: { symbol: '¥', locale: 'zh-CN', position: 'before', rate: 7.23 },\r\n  INR: { symbol: '₹', locale: 'en-IN', position: 'before', rate: 83.12 },\r\n  AUD: { symbol: '$', locale: 'en-AU', position: 'before', rate: 1.54 },\r\n  CAD: { symbol: '$', locale: 'en-CA', position: 'before', rate: 1.36 },\r\n  CHF: { symbol: 'CHF', locale: 'de-CH', position: 'before', rate: 0.89 },\r\n  TRY: { symbol: '₺', locale: 'tr-TR', position: 'after', rate: 31.89 },\r\n};\r\n\r\nexport const convertAmount = (amount, fromCurrency = 'USD', toCurrency = 'USD') => {\r\n  const fromRate = CURRENCIES[fromCurrency]?.rate || 1;\r\n  const toRate = CURRENCIES[toCurrency]?.rate || 1;\r\n  \r\n  // Convert to USD first, then to target currency\r\n  const amountInUSD = amount / fromRate;\r\n  return amountInUSD * toRate;\r\n};\r\n\r\nexport const formatCurrency = (amount, currencyCode = 'USD') => {\r\n  try {\r\n    const currency = CURRENCIES[currencyCode] || CURRENCIES.USD;\r\n    const formattedNumber = new Intl.NumberFormat(currency.locale, {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n\r\n    return currency.position === 'before' \r\n      ? `${currency.symbol}${formattedNumber}`\r\n      : `${formattedNumber} ${currency.symbol}`;\r\n  } catch (error) {\r\n    console.warn('Error formatting currency:', error);\r\n    return `${CURRENCIES.USD.symbol}${amount.toFixed(2)}`;\r\n  }\r\n};\r\n\r\nexport const getCurrencySymbol = (currencyCode = 'USD') => {\r\n  return CURRENCIES[currencyCode]?.symbol || CURRENCIES.USD.symbol;\r\n};\r\n\r\nexport const getAvailableCurrencies = () => {\r\n  return Object.entries(CURRENCIES).map(([code, details]) => ({\r\n    code,\r\n    symbol: details.symbol,\r\n    label: `${code} (${details.symbol})`,\r\n  }));\r\n};\r\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, List, useTheme, TouchableRipple, Menu, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CATEGORY_ICONS = {\n  Food: 'food',\n  Transport: 'car',\n  Shopping: 'shopping',\n  Bills: 'file-document',\n  Entertainment: 'gamepad-variant',\n  Other: 'dots-horizontal',\n};\n\nexport default function TransactionItem({ transaction, onPress }) {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { dispatch, selectedCurrency } = useTransactions();\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const navigation = useNavigation();\n  const { t } = useLanguage();\n\n  const isExpense = transaction.amount < 0;\n  const amount = Math.abs(transaction.amount);\n  const icon = CATEGORY_ICONS[transaction.category] || CATEGORY_ICONS.Other;\n\n  const formattedDate = new Date(transaction.date).toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  const handleDelete = () => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: transaction.id,\n    });\n    setMenuVisible(false);\n  };\n\n  const handleEdit = () => {\n    setMenuVisible(false);\n    navigation.navigate('AddTransaction', {\n      isEditing: true,\n      transaction: {\n        ...transaction,\n        amount: Math.abs(transaction.amount),\n      },\n    });\n  };\n\n  return (\n    <Surface style={styles.surface} elevation={1}>\n      <TouchableRipple\n        onPress={onPress}\n        style={styles.touchable}\n        accessibilityRole=\"button\"\n        accessibilityLabel={`${transaction.description} transaction of ${isExpense ? t('expense') : t('income')} ${formatCurrency(amount, selectedCurrency)}`}\n      >\n        <List.Item\n          title={transaction.description}\n          description={`${transaction.category} • ${formattedDate}`}\n          left={props => (\n            <List.Icon\n              {...props}\n              icon={icon}\n              color={colors.primary}\n            />\n          )}\n          right={props => (\n            <View style={styles.rightContainer}>\n              <Text\n                {...props}\n                variant=\"titleMedium\"\n                style={[\n                  styles.amount,\n                  { color: isExpense ? colors.error : colors.success }\n                ]}\n              >\n                {isExpense ? '-' : '+'}{formatCurrency(amount, selectedCurrency)}\n              </Text>\n              <Menu\n                visible={menuVisible}\n                onDismiss={() => setMenuVisible(false)}\n                anchor={\n                  <IconButton\n                    icon=\"dots-vertical\"\n                    size={20}\n                    onPress={() => setMenuVisible(true)}\n                  />\n                }\n              >\n                <Menu.Item\n                  onPress={handleEdit}\n                  title={t('edit')}\n                  leadingIcon=\"pencil\"\n                />\n                <Menu.Item\n                  onPress={handleDelete}\n                  title={t('delete')}\n                  leadingIcon=\"delete\"\n                />\n              </Menu>\n            </View>\n          )}\n          titleStyle={styles.title}\n          descriptionStyle={[styles.description, { color: colors.textSecondary }]}\n        />\n      </TouchableRipple>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  surface: {\n    marginBottom: 8,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  touchable: {\n    flex: 1,\n  },\n  title: {\n    fontWeight: '500',\n  },\n  description: {\n    marginTop: 4,\n  },\n  amount: {\n    fontWeight: '600',\n    alignSelf: 'center',\n  },\n  rightContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n});","import React from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { Text, FAB, Surface, useTheme, Divider } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport TransactionItem from '../components/TransactionItem';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function HomeScreen({ navigation }) {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n\n  // Calculate totals in the selected currency\n  const total = state.transactions.reduce((acc, tx) => acc + tx.amount, 0);\n  const income = state.transactions\n    .filter(tx => tx.amount > 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n  const expenses = state.transactions\n    .filter(tx => tx.amount < 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n\n  const renderHeader = () => (\n    <>\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          {t('myBudget')}\n        </Text>\n        \n        <View style={styles.balanceRow}>\n          <Text variant=\"titleLarge\">{t('totalBalance')}</Text>\n          <Text \n            variant=\"headlineMedium\"\n            style={{ color: total >= 0 ? theme.colors.success : theme.colors.error }}\n          >\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n\n        <Divider style={styles.divider} />\n        \n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.success }}>\n              {t('income')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.success }}>\n              +{formatCurrency(income, selectedCurrency)}\n            </Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.error }}>\n              {t('expense')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.error }}>\n              {formatCurrency(Math.abs(expenses), selectedCurrency)}\n            </Text>\n          </View>\n        </View>\n      </Surface>\n\n      <Text variant=\"titleLarge\" style={styles.sectionTitle}>\n        {t('recentTransactions')}\n      </Text>\n    </>\n  );\n\n  const renderEmptyList = () => (\n    <View style={styles.emptyContainer}>\n      <Text variant=\"bodyLarge\" style={{ color: theme.colors.textSecondary }}>\n        {t('noTransactions')}\n      </Text>\n      <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n        {t('addFirstTransaction')}\n      </Text>\n    </View>\n  );\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <FlatList\n        data={state.transactions}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <TransactionItem \n            transaction={item}\n            onPress={() => {\n              navigation.navigate('AddTransaction', {\n                isEditing: true,\n                transaction: item,\n              });\n            }}\n          />\n        )}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={renderEmptyList}\n        contentContainerStyle={styles.listContent}\n      />\n\n      <FAB\n        icon=\"plus\"\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        onPress={() => navigation.navigate('AddTransaction')}\n        label={t('addTransaction')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n    paddingBottom: 80, // Space for FAB\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  title: {\n    marginBottom: 16,\n  },\n  balanceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    alignItems: 'flex-start',\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 32,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Animated } from 'react-native';\nimport { TextInput, Button, Switch, Text, HelperText, useTheme, SegmentedButtons, Menu } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { getCurrencySymbol } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CustomSnackbar = ({ visible, message, style }) => {\n  const [fadeAnim] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    if (visible) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return (\n    <Animated.View\n      style={[\n        styles.snackbar,\n        style,\n        {\n          opacity: fadeAnim,\n          transform: [{\n            translateY: fadeAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [50, 0],\n            }),\n          }],\n        },\n      ]}\n    >\n      <Text style={styles.snackbarText}>{message}</Text>\n    </Animated.View>\n  );\n};\n\nexport default function AddTransactionScreen({ navigation, route }) {\n  console.log('=== AddTransactionScreen Component Start ===');\n  console.log('Navigation prop:', navigation);\n  console.log('Route prop:', route);\n  \n  const { dispatch } = useTransactions();\n  const { categories, addCategory } = useCategories();\n  console.log('TransactionsContext dispatch available:', !!dispatch);\n  \n  const theme = useTheme();\n  console.log('Theme loaded:', !!theme);\n  \n  const { colors } = theme;\n  const { t } = useLanguage();\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  console.log('AddTransactionScreen mounted with route params:', route.params);\n\n  const params = route.params || {};\n  const isEditing = Boolean(params.isEditing);\n  const existingTransaction = params.transaction;\n\n  console.log('Is editing:', isEditing);\n  console.log('Existing transaction:', existingTransaction);\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [transactionType, setTransactionType] = useState('expense');\n  const [errors, setErrors] = useState({});\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n\n  useEffect(() => {\n    console.log('Setting form values. IsEditing:', isEditing, 'Transaction:', existingTransaction);\n    if (isEditing && existingTransaction) {\n      console.log('Existing transaction ID:', existingTransaction.id);\n      setDescription(existingTransaction.description || '');\n      setAmount(existingTransaction.amount ? Math.abs(existingTransaction.amount).toString() : '');\n      setCategory(existingTransaction.category || '');\n      setIsRecurring(Boolean(existingTransaction.isRecurring));\n      setTransactionType(existingTransaction.amount < 0 ? 'expense' : 'income');\n    }\n    loadSelectedCurrency();\n  }, [isEditing, existingTransaction]);\n\n  const loadSelectedCurrency = async () => {\n    try {\n      const currency = await AsyncStorage.getItem('selectedCurrency');\n      if (currency) {\n        setSelectedCurrency(currency);\n      }\n    } catch (error) {\n      console.warn('Error loading currency preference:', error);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!description.trim()) {\n      newErrors.description = t('descriptionRequired');\n    }\n\n    if (!amount) {\n      newErrors.amount = t('amountRequired');\n    } else if (isNaN(amount) || parseFloat(amount) <= 0) {\n      newErrors.amount = t('invalidAmount');\n    }\n\n    if (!category.trim()) {\n      newErrors.category = t('categoryRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    const parsedAmount = parseFloat(amount);\n    const finalAmount = transactionType === 'expense' ? -parsedAmount : parsedAmount;\n    const trimmedCategory = category.trim();\n\n    // If the category is new (not in the existing categories), add it\n    if (trimmedCategory && !categories.includes(trimmedCategory)) {\n      await addCategory(trimmedCategory);\n    }\n\n    const transactionData = {\n      description: description.trim(),\n      amount: finalAmount,\n      date: new Date().toISOString().split('T')[0],\n      category: trimmedCategory,\n      isRecurring,\n      type: transactionType,\n    };\n\n    if (isEditing) {\n      dispatch({\n        type: 'UPDATE_TRANSACTION',\n        payload: {\n          id: existingTransaction.id,\n          ...transactionData,\n        },\n      });\n    } else {\n      const newTransactionId = Date.now().toString();\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: {\n          id: newTransactionId,\n          ...transactionData,\n        },\n      });\n    }\n\n    setShowSnackbar(true);\n    setTimeout(() => {\n      setShowSnackbar(false);\n      navigation.goBack();\n    }, 1500);\n  };\n\n  return (\n    <>\n      <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\n        <View style={styles.content}>\n          <Text variant=\"headlineMedium\" style={[styles.title, { color: colors.primary }]}>\n            {isEditing ? t('editTransaction') : t('addTransaction')}\n          </Text>\n\n          <SegmentedButtons\n            value={transactionType}\n            onValueChange={setTransactionType}\n            buttons={[\n              { value: 'expense', label: t('expense') },\n              { value: 'income', label: t('income') },\n            ]}\n            style={styles.segmentedButtons}\n          />\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('description')}\n            value={description}\n            onChangeText={(text) => {\n              setDescription(text);\n              setErrors({ ...errors, description: '' });\n            }}\n            error={!!errors.description}\n            style={styles.input}\n            accessibilityLabel=\"Transaction description input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.description}>\n            {errors.description}\n          </HelperText>\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('amount')}\n            value={amount}\n            onChangeText={(text) => {\n              setAmount(text);\n              setErrors({ ...errors, amount: '' });\n            }}\n            keyboardType=\"decimal-pad\"\n            error={!!errors.amount}\n            style={styles.input}\n            left={<TextInput.Affix text={getCurrencySymbol(selectedCurrency)} />}\n            accessibilityLabel=\"Transaction amount input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.amount}>\n            {errors.amount}\n          </HelperText>\n\n          <View style={styles.categoryInputContainer}>\n            <Menu\n              visible={showCategoryMenu}\n              onDismiss={() => setShowCategoryMenu(false)}\n              anchor={\n                <TextInput\n                  mode=\"outlined\"\n                  label={t('category')}\n                  value={category}\n                  onChangeText={(text) => {\n                    setCategory(text);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  error={!!errors.category}\n                  style={[styles.input, { flex: 1 }]}\n                  right={\n                    <TextInput.Icon \n                      icon=\"menu-down\" \n                      onPress={() => setShowCategoryMenu(true)}\n                    />\n                  }\n                  onPressIn={() => setShowCategoryMenu(true)}\n                  accessibilityLabel=\"Transaction category input\"\n                />\n              }\n            >\n              {categories.map((cat) => (\n                <Menu.Item\n                  key={cat}\n                  onPress={() => {\n                    setCategory(cat);\n                    setShowCategoryMenu(false);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  title={cat}\n                />\n              ))}\n            </Menu>\n          </View>\n          <HelperText type=\"error\" visible={!!errors.category}>\n            {errors.category}\n          </HelperText>\n\n          <View style={styles.switchContainer}>\n            <Text variant=\"bodyLarge\">{t('recurringMonthly')}</Text>\n            <Switch\n              value={isRecurring}\n              onValueChange={setIsRecurring}\n              color={colors.primary}\n            />\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={handleSubmit}\n            style={styles.button}\n            labelStyle={styles.buttonLabel}\n            accessibilityLabel={isEditing ? \"Update transaction button\" : \"Add transaction button\"}\n          >\n            {isEditing ? t('update') : t('add')}\n          </Button>\n        </View>\n      </ScrollView>\n      <CustomSnackbar\n        visible={showSnackbar}\n        message={isEditing ? t('transactionUpdated') : t('transactionAdded')}\n        style={{ backgroundColor: colors.success }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 16,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 8,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 16,\n  },\n  switchLabel: {\n    marginLeft: 8,\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 16,\n    elevation: 4,\n  },\n  snackbarText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 16,\n    paddingVertical: 8,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  categoryInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});","import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, ScrollView, Platform } from 'react-native';\nimport { VictoryPie, VictoryLabel, VictoryLegend, VictoryAnimation } from 'victory-native';\nimport { Text, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CHART_TYPES = [\n  { value: 'pie', label: 'pieChart' },\n  { value: 'donut', label: 'donutChart' },\n];\n\nexport default function ChartScreen() {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n  const [chartType, setChartType] = useState('donut');\n\n  // Calculate category totals and percentages for expenses only\n  const categorySums = state.transactions\n    .filter(tx => tx.amount < 0) // Only include expenses\n    .reduce((acc, tx) => {\n      const cat = tx.category || 'Uncategorized';\n      acc[cat] = (acc[cat] || 0) + Math.abs(tx.amount); // Use absolute value for display\n      return acc;\n    }, {});\n\n  const total = Object.values(categorySums).reduce((sum, amount) => sum + amount, 0);\n\n  const chartData = Object.entries(categorySums).map(([category, amount]) => ({\n    x: category,\n    y: amount,\n    percentage: ((amount / total) * 100).toFixed(1)\n  }));\n\n  const colorScale = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.error,\n    theme.colors.success,\n    theme.colors.warning,\n    '#9333EA',\n    '#2563EB',\n    '#DC2626',\n  ];\n\n  if (chartData.length === 0) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n        <Text variant=\"headlineMedium\" style={styles.noDataText}>\n          {t('noExpenseData')}\n        </Text>\n        <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n          {t('addExpensesToSee')}\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView \n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <Text variant=\"headlineMedium\" style={[styles.title, { color: theme.colors.primary }]}>\n        {t('expenseBreakdown')}\n      </Text>\n      \n      <Surface style={styles.chartContainer} elevation={2}>\n        <Text variant=\"titleLarge\" style={[styles.totalAmount, { color: theme.colors.error }]}>\n          {t('totalSpent')}: {formatCurrency(total, selectedCurrency)}\n        </Text>\n\n        <SegmentedButtons\n          value={chartType}\n          onValueChange={setChartType}\n          buttons={CHART_TYPES.map(type => ({\n            ...type,\n            label: t(type.label)\n          }))}\n          style={styles.segmentedButtons}\n        />\n        \n        <VictoryPie\n          data={chartData}\n          colorScale={colorScale}\n          innerRadius={chartType === 'donut' ? 80 : 0}\n          padAngle={2}\n          animate={{\n            duration: 1000,\n            onLoad: { duration: 500 }\n          }}\n          height={300}\n          width={Math.min(350, Dimensions.get('window').width - 40)}\n          labels={() => ''}\n          labelComponent={<VictoryLabel text={''} />}\n          style={{\n            data: {\n              stroke: theme.colors.background,\n              strokeWidth: 1,\n            },\n            labels: { display: 'none' }\n          }}\n        />\n\n        <View style={styles.legendContainer}>\n          <VictoryLegend\n            x={10}\n            y={0}\n            orientation=\"horizontal\"\n            gutter={20}\n            rowGutter={10}\n            itemsPerRow={2}\n            centerTitle\n            style={{\n              labels: { \n                fill: theme.colors.text,\n                fontSize: 12,\n              },\n              parent: {\n                width: '100%',\n              }\n            }}\n            data={chartData.map((d, i) => ({\n              name: `${d.x}: ${formatCurrency(d.y, selectedCurrency)} (${d.percentage}%)`,\n              symbol: { fill: colorScale[i % colorScale.length] }\n            }))}\n          />\n        </View>\n      </Surface>\n\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"titleMedium\" style={{ color: theme.colors.text }}>\n          {t('summary')}\n        </Text>\n        {chartData.map((item, index) => (\n          <View key={item.x} style={styles.summaryRow}>\n            <View style={styles.categoryInfo}>\n              <View \n                style={[\n                  styles.colorIndicator, \n                  { backgroundColor: colorScale[index % colorScale.length] }\n                ]} \n              />\n              <Text variant=\"bodyMedium\">{item.x}</Text>\n            </View>\n            <Text variant=\"bodyMedium\" style={{ color: theme.colors.text }}>\n              {formatCurrency(item.y, selectedCurrency)}\n            </Text>\n          </View>\n        ))}\n        <View style={[styles.summaryRow, styles.totalRow]}>\n          <Text variant=\"titleMedium\">{t('total')}</Text>\n          <Text variant=\"titleMedium\" style={{ color: theme.colors.primary }}>\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n      </Surface>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    padding: 16,\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  chartContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center',\n    width: '100%',\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    width: '100%',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    flexWrap: 'wrap',\n  },\n  categoryInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 150,\n    marginRight: 8,\n  },\n  colorIndicator: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 8,\n    flexShrink: 0,\n  },\n  totalRow: {\n    borderTopWidth: 1,\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  noDataText: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  totalAmount: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  legendContainer: {\n    marginTop: 20,\n    width: '100%',\n    paddingHorizontal: 10,\n    alignItems: 'flex-start',\n  },\n});\n","import * as Notifications from 'expo-notifications';\nimport { Platform } from 'react-native';\n\nexport async function scheduleDailyReminder() {\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Notification permissions not granted!');\n    return;\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('daily-reminders', {\n      name: 'Daily Reminders',\n      importance: Notifications.AndroidImportance.MAX,\n    });\n  }\n\n  await Notifications.cancelAllScheduledNotificationsAsync();\n\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: 'Budget Reminder',\n      body: 'Don’t forget to log your expenses today!',\n      sound: true,\n    },\n    trigger: {\n      hour: 9,\n      minute: 0,\n      repeats: true,\n      channelId: 'daily-reminders', \n    },\n  });\n\n  alert('Daily reminder scheduled for 9 AM.');\n}\n\n// Configure notification handler\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: false,\n  }),\n});\n","import React, { createContext, useContext, useState } from 'react';\nimport { MD3LightTheme, MD3DarkTheme, adaptNavigationTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n  reactNavigationLight: NavigationDefaultTheme,\n  reactNavigationDark: NavigationDarkTheme,\n});\n\nconst lightTheme = {\n  ...MD3LightTheme,\n  ...LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...LightTheme.colors,\n    primary: '#3B82F6',\n    secondary: '#F59E0B',\n    background: '#FFFFFF',\n    surface: '#F3F4F6',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    error: '#EF4444',\n    success: '#10B981',\n    warning: '#F59E0B',\n    info: '#3B82F6',\n    border: '#E5E7EB',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n    xxl: 48,\n  },\n  typography: {\n    fontFamily: {\n      regular: 'System',\n      medium: 'System',\n      bold: 'System',\n    },\n    fontSize: {\n      xs: 12,\n      sm: 14,\n      md: 16,\n      lg: 18,\n      xl: 20,\n      xxl: 24,\n      xxxl: 32,\n    },\n    lineHeight: {\n      tight: 1.25,\n      normal: 1.5,\n      relaxed: 1.75,\n    },\n  },\n  roundness: 8,\n};\n\nconst darkTheme = {\n  ...MD3DarkTheme,\n  ...DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...DarkTheme.colors,\n    primary: '#60A5FA',\n    secondary: '#FBBF24',\n    background: '#111827',\n    surface: '#1F2937',\n    text: '#F9FAFB',\n    textSecondary: '#9CA3AF',\n    error: '#F87171',\n    success: '#34D399',\n    warning: '#FBBF24',\n    info: '#60A5FA',\n    border: '#374151',\n  },\n  spacing: lightTheme.spacing,\n  typography: lightTheme.typography,\n  roundness: lightTheme.roundness,\n};\n\nconst ThemeContext = createContext({\n  theme: lightTheme,\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport function ThemeProvider({ children }) {\n  const colorScheme = useColorScheme();\n  const [isDarkMode, setIsDarkMode] = useState(colorScheme === 'dark');\n  const currentTheme = isDarkMode ? darkTheme : lightTheme;\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: currentTheme, isDarkMode, toggleTheme }}>\n      <PaperProvider theme={currentTheme}>{children}</PaperProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useAppTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Modal as RNModal } from 'react-native';\nimport { List, Switch, Divider, Text, Surface, useTheme, Button, TextInput, IconButton } from 'react-native-paper';\nimport { scheduleDailyReminder } from '../notifications/NotificationsService';\nimport { useAppTheme } from '../../theme';\nimport { getAvailableCurrencies } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function SettingsScreen() {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { isDarkMode, toggleTheme } = useAppTheme();\n  const { language, changeLanguage, t } = useLanguage();\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n  const [showCurrencySelector, setShowCurrencySelector] = useState(false);\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const currencies = getAvailableCurrencies();\n  const { selectedCurrency, handleCurrencyChange } = useTransactions();\n  const { categories, addCategory, removeCategory, updateCategory } = useCategories();\n  \n  // Category management state\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [editedCategory, setEditedCategory] = useState('');\n\n  const handleNotificationToggle = async () => {\n    if (!notificationsEnabled) {\n      await scheduleDailyReminder();\n    }\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n\n  const handleCurrencySelect = async (currencyCode) => {\n    await handleCurrencyChange(currencyCode);\n    setShowCurrencySelector(false);\n  };\n\n  const selectedCurrencyDetails = currencies.find(c => c.code === selectedCurrency);\n\n  const handleAddCategory = () => {\n    if (newCategory.trim()) {\n      addCategory(newCategory.trim());\n      setNewCategory('');\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleEditCategory = () => {\n    if (editedCategory.trim() && selectedCategory) {\n      updateCategory(selectedCategory, editedCategory.trim());\n      setEditedCategory('');\n      setSelectedCategory(null);\n      setShowEditCategory(false);\n    }\n  };\n\n  const handleDeleteCategory = (category) => {\n    removeCategory(category);\n  };\n\n  const renderDialog = (visible, title, content, onDismiss) => {\n    return (\n      <RNModal\n        visible={visible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={onDismiss}\n      >\n        <View style={styles.modalOverlay}>\n          <Surface style={[styles.dialogContainer, { backgroundColor: colors.surface }]} elevation={5}>\n            <Text variant=\"titleLarge\" style={[styles.dialogTitle, { color: colors.text }]}>\n              {title}\n            </Text>\n            {content}\n          </Surface>\n        </View>\n      </RNModal>\n    );\n  };\n\n  const renderAddCategoryDialog = () => {\n    return renderDialog(\n      showAddCategory,\n      t('addNewCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={newCategory}\n          onChangeText={setNewCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowAddCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleAddCategory}>{t('add')}</Button>\n        </View>\n      </View>,\n      () => setShowAddCategory(false)\n    );\n  };\n\n  const renderEditCategoryDialog = () => {\n    return renderDialog(\n      showEditCategory,\n      t('editCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={editedCategory}\n          onChangeText={setEditedCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowEditCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleEditCategory}>{t('update')}</Button>\n        </View>\n      </View>,\n      () => setShowEditCategory(false)\n    );\n  };\n\n  const renderCurrencySelector = () => {\n    return renderDialog(\n      showCurrencySelector,\n      'Select Currency',\n      <View>\n        <ScrollView style={styles.currencyList}>\n          {currencies.map((currency) => (\n            <TouchableOpacity\n              key={currency.code}\n              style={[\n                styles.currencyItem,\n                selectedCurrency === currency.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => handleCurrencySelect(currency.code)}\n            >\n              <Text style={[styles.currencyLabel, { color: colors.text }]}>\n                {currency.label}\n              </Text>\n              {selectedCurrency === currency.code && (\n                <List.Icon icon=\"check\" color={colors.primary} />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowCurrencySelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          Close\n        </Button>\n      </View>,\n      () => setShowCurrencySelector(false)\n    );\n  };\n\n  const renderLanguageSelector = () => {\n    const languages = [\n      { code: 'en', label: 'English' },\n      { code: 'tr', label: 'Türkçe' }\n    ];\n\n    return renderDialog(\n      showLanguageSelector,\n      t('language'),\n      <View>\n        <ScrollView style={styles.languageList}>\n          {languages.map((lang) => (\n            <TouchableOpacity\n              key={lang.code}\n              style={[\n                styles.languageItem,\n                language === lang.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => {\n                changeLanguage(lang.code);\n                setShowLanguageSelector(false);\n              }}\n            >\n              <Text style={[styles.languageLabel, { color: colors.text }]}>\n                {lang.label}\n              </Text>\n              {language === lang.code && (\n                <List.Icon icon=\"check\" color={colors.primary} />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowLanguageSelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          {t('close')}\n        </Button>\n      </View>,\n      () => setShowLanguageSelector(false)\n    );\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: colors.background }]}>\n      <ScrollView style={styles.container}>\n        <Surface style={[styles.surface, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('appSettings')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('darkMode')}\n              description={t('darkModeDesc')}\n              left={props => <List.Icon {...props} icon=\"theme-light-dark\" />}\n              right={() => (\n                <Switch\n                  value={isDarkMode}\n                  onValueChange={toggleTheme}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('dailyReminders')}\n              description={t('dailyRemindersDesc')}\n              left={props => <List.Icon {...props} icon=\"bell\" />}\n              right={() => (\n                <Switch\n                  value={notificationsEnabled}\n                  onValueChange={handleNotificationToggle}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('currencyFormat')}\n              description={`${t('currentCurrency')}${selectedCurrencyDetails?.label || 'USD ($)'}`}\n              left={props => <List.Icon {...props} icon=\"currency-usd\" />}\n              onPress={() => setShowCurrencySelector(true)}\n            />\n            <Divider />\n\n            <List.Item\n              title={t('language')}\n              description={t('languageDesc')}\n              left={props => <List.Icon {...props} icon=\"translate\" />}\n              onPress={() => setShowLanguageSelector(true)}\n            />\n          </List.Section>\n\n          <Divider style={styles.divider} />\n\n          <List.Section>\n            <Text variant=\"titleMedium\" style={[styles.sectionTitle, { color: colors.text }]}>\n              {t('categories')}\n            </Text>\n            \n            {categories.map((category) => (\n              <List.Item\n                key={category}\n                title={category}\n                right={props => (\n                  <View style={styles.categoryActions}>\n                    <IconButton\n                      icon=\"pencil\"\n                      size={20}\n                      onPress={() => {\n                        setSelectedCategory(category);\n                        setEditedCategory(category);\n                        setShowEditCategory(true);\n                      }}\n                    />\n                    <IconButton\n                      icon=\"delete\"\n                      size={20}\n                      onPress={() => handleDeleteCategory(category)}\n                    />\n                  </View>\n                )}\n              />\n            ))}\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowAddCategory(true)}\n              style={styles.addButton}\n            >\n              {t('addNewCategory')}\n            </Button>\n          </List.Section>\n        </Surface>\n\n        <Surface style={[styles.surface, styles.aboutSection, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('about')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('version')}\n              description=\"1.0.0\"\n              left={props => <List.Icon {...props} icon=\"information\" />}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('helpAndSupport')}\n              description={t('helpDesc')}\n              left={props => <List.Icon {...props} icon=\"help-circle\" />}\n              onPress={() => {/* TODO: Implement help section */}}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('privacyPolicy')}\n              description={t('privacyPolicyDesc')}\n              left={props => <List.Icon {...props} icon=\"shield-account\" />}\n              onPress={() => {/* TODO: Implement privacy policy */}}\n            />\n          </List.Section>\n        </Surface>\n      </ScrollView>\n\n      {renderCurrencySelector()}\n      {renderLanguageSelector()}\n      {renderAddCategoryDialog()}\n      {renderEditCategoryDialog()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  surface: {\n    borderRadius: 8,\n    marginBottom: 16,\n    padding: 16,\n  },\n  sectionTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  aboutSection: {\n    marginTop: 8,\n  },\n  currencySelector: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{ translateX: -150 }, { translateY: -200 }],\n    width: 300,\n    maxHeight: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  currencySelectorHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  currencySelectorTitle: {\n    fontWeight: '600',\n  },\n  closeButton: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  currencyList: {\n    flexGrow: 0,\n  },\n  currencyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 4,\n  },\n  currencyLabel: {\n    fontSize: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  categoryActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  addButton: {\n    marginTop: 16,\n    marginHorizontal: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dialogContainer: {\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  dialogTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  dialogInput: {\n    marginBottom: 16,\n  },\n  dialogActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 8,\n  },\n  dialogCloseButton: {\n    marginTop: 16,\n  },\n  languageList: {\n    maxHeight: 200,\n  },\n  languageItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  languageLabel: {\n    fontSize: 16,\n  },\n});\n","import React, { useState } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport { Text, Button, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useTransactions } from '../context/TransactionsContext';\r\nimport { useAppTheme } from '../../theme';\r\nimport { CURRENCIES } from '../services/format';\r\n\r\nconst LANGUAGES = [\r\n  { value: 'en', label: 'English' },\r\n  { value: 'tr', label: 'Türkçe' },\r\n];\r\n\r\nexport default function OnboardingScreen({ navigation }) {\r\n  const theme = useTheme();\r\n  const { colors } = theme;\r\n  const { changeLanguage, t } = useLanguage();\r\n  const { handleCurrencyChange } = useTransactions();\r\n  const { isDarkMode, toggleTheme } = useAppTheme();\r\n\r\n  const [selectedLanguage, setSelectedLanguage] = useState('en');\r\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  const handleLanguageSelect = (lang) => {\r\n    setSelectedLanguage(lang);\r\n    changeLanguage(lang);\r\n  };\r\n\r\n  const handleCurrencySelect = (currency) => {\r\n    setSelectedCurrency(currency);\r\n    handleCurrencyChange(currency);\r\n  };\r\n\r\n  const handleThemeSelect = (isDark) => {\r\n    if (isDark !== isDarkMode) {\r\n      toggleTheme();\r\n    }\r\n  };\r\n\r\n  const handleComplete = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('hasCompletedOnboarding', 'true');\r\n      navigation.replace('HomeStack');\r\n    } catch (error) {\r\n      console.error('Error saving onboarding status:', error);\r\n    }\r\n  };\r\n\r\n  const renderLanguageStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('selectLanguage')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        {LANGUAGES.map((lang) => (\r\n          <Button\r\n            key={lang.value}\r\n            mode={selectedLanguage === lang.value ? 'contained' : 'outlined'}\r\n            onPress={() => handleLanguageSelect(lang.value)}\r\n            style={styles.optionButton}\r\n          >\r\n            {lang.label}\r\n          </Button>\r\n        ))}\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const renderCurrencyStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('selectCurrency')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        <ScrollView style={styles.currencyList}>\r\n          {Object.entries(CURRENCIES).map(([code, currency]) => (\r\n            <Button\r\n              key={code}\r\n              mode={selectedCurrency === code ? 'contained' : 'outlined'}\r\n              onPress={() => handleCurrencySelect(code)}\r\n              style={styles.optionButton}\r\n            >\r\n              {`${currency.symbol} ${code}`}\r\n            </Button>\r\n          ))}\r\n        </ScrollView>\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const renderThemeStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('chooseTheme')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        <Button\r\n          mode={!isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(false)}\r\n          style={styles.optionButton}\r\n          icon=\"white-balance-sunny\"\r\n        >\r\n          {t('lightTheme')}\r\n        </Button>\r\n        <Button\r\n          mode={isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(true)}\r\n          style={styles.optionButton}\r\n          icon=\"moon-waning-crescent\"\r\n        >\r\n          {t('darkTheme')}\r\n        </Button>\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const steps = [\r\n    renderLanguageStep,\r\n    renderCurrencyStep,\r\n    renderThemeStep,\r\n  ];\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <Text variant=\"displaySmall\" style={[styles.welcomeTitle, { color: colors.primary }]}>\r\n        {t('welcome')}\r\n      </Text>\r\n      \r\n      {steps[currentStep]()}\r\n      \r\n      <View style={styles.navigationButtons}>\r\n        {currentStep > 0 && (\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => setCurrentStep(prev => prev - 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('previous')}\r\n          </Button>\r\n        )}\r\n        \r\n        {currentStep < steps.length - 1 ? (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={() => setCurrentStep(prev => prev + 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('next')}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleComplete}\r\n            style={styles.navButton}\r\n          >\r\n            {t('getStarted')}\r\n          </Button>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  stepContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 32,\r\n    textAlign: 'center',\r\n  },\r\n  optionsContainer: {\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    width: '100%',\r\n    maxWidth: 400,\r\n  },\r\n  optionButton: {\r\n    marginVertical: 8,\r\n  },\r\n  currencyList: {\r\n    maxHeight: 300,\r\n  },\r\n  navigationButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 16,\r\n  },\r\n  navButton: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n  welcomeTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n  },\r\n}); ","import React, { useEffect, useState } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useTheme } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport AddTransactionScreen from '../screens/AddTransactionScreen';\nimport ChartScreen from '../screens/ChartScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport OnboardingScreen from '../screens/OnboardingScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\nconst RootStack = createStackNavigator();\n\nfunction HomeStack() {\n  const { colors } = useTheme();\n  \n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background,\n          elevation: 0,\n          shadowOpacity: 0,\n        },\n        headerTintColor: colors.text,\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          title: 'My Budget',\n        }}\n      />\n      <Stack.Screen \n        name=\"AddTransaction\" \n        component={AddTransactionScreen}\n        options={({ route }) => ({\n          title: route.params?.isEditing ? 'Edit Transaction' : 'Add Transaction',\n          headerStyle: {\n            backgroundColor: colors.background,\n            elevation: 0,\n            shadowOpacity: 0,\n          },\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TabNavigator() {\n  const { colors } = useTheme();\n\n  const screenOptions = {\n    headerShown: true,\n    headerStyle: {\n      backgroundColor: colors.background,\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTintColor: colors.text,\n    headerTitleStyle: {\n      fontWeight: '600',\n    },\n    tabBarStyle: {\n      backgroundColor: colors.surface,\n      borderTopColor: colors.border,\n      paddingVertical: 8,\n      height: 60,\n    },\n    tabBarActiveTintColor: colors.primary,\n    tabBarInactiveTintColor: colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: '500',\n    },\n  };\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={screenOptions}\n    >\n      <Tab.Screen\n        name=\"HomeStack\"\n        component={HomeStack}\n        options={{\n          title: 'Home',\n          headerShown: false,\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Charts\"\n        component={ChartScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"chart-bar\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default function RootNavigation() {\n  const [hasCompletedOnboarding, setHasCompletedOnboarding] = useState(null);\n\n  useEffect(() => {\n    checkOnboardingStatus();\n  }, []);\n\n  const checkOnboardingStatus = async () => {\n    try {\n      const status = await AsyncStorage.getItem('hasCompletedOnboarding');\n      setHasCompletedOnboarding(status === 'true');\n    } catch (error) {\n      console.error('Error checking onboarding status:', error);\n      setHasCompletedOnboarding(false);\n    }\n  };\n\n  if (hasCompletedOnboarding === null) {\n    // You might want to show a loading screen here\n    return null;\n  }\n\n  return (\n    <RootStack.Navigator screenOptions={{ headerShown: false }}>\n      {!hasCompletedOnboarding ? (\n        <RootStack.Screen name=\"Onboarding\" component={OnboardingScreen} />\n      ) : (\n        <RootStack.Screen name=\"MainApp\" component={TabNavigator} />\n      )}\n    </RootStack.Navigator>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { TransactionsProvider } from './src/context/TransactionsContext';\nimport { CategoriesProvider } from './src/context/CategoriesContext';\nimport { LanguageProvider } from './src/context/LanguageContext';\nimport RootNavigation from './src/navigation/RootNavigation';\nimport { ThemeProvider } from './theme';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Platform, Text } from 'react-native';\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <ThemeProvider>\n          <LanguageProvider>\n            <CategoriesProvider>\n              <TransactionsProvider>\n                <NavigationContainer>\n                  <RootNavigation />\n                </NavigationContainer>\n              </TransactionsProvider>\n            </CategoriesProvider>\n          </LanguageProvider>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/MyBudgetApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [419], () => (__webpack_require__(67317)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["TRANSACTIONS_KEY","async","loadTransactions","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","warn","initialState","transactions","transactionsReducer","state","action","log","type","payload","_objectSpread","map","tx","id","filter","TransactionsContext","createContext","TransactionsProvider","children","dispatch","useReducer","selectedCurrency","setSelectedCurrency","useState","useEffect","stored","storedCurrency","Promise","all","loadInitialData","stringify","setItem","saveTransactions","_jsx","Provider","value","handleCurrencyChange","newCurrency","error","useTransactions","useContext","CATEGORIES_STORAGE_KEY","DEFAULT_CATEGORIES","CategoriesContext","CategoriesProvider","categories","setCategories","loadCategories","storedCategories","saveCategories","newCategories","addCategory","category","includes","removeCategory","c","updateCategory","oldCategory","newCategory","useCategories","translations","en","settings","save","cancel","add","edit","delete","close","update","appSettings","darkMode","darkModeDesc","dailyReminders","dailyRemindersDesc","currencyFormat","currentCurrency","addNewCategory","editCategory","categoryName","language","languageDesc","about","version","helpAndSupport","helpDesc","privacyPolicy","privacyPolicyDesc","addTransaction","amount","date","note","income","expense","editTransaction","description","recurringMonthly","transactionUpdated","transactionAdded","recentTransactions","selectCategory","descriptionRequired","amountRequired","invalidAmount","categoryRequired","myBudget","totalBalance","noTransactions","addFirstTransaction","expenseBreakdown","totalSpent","pieChart","donutChart","summary","total","noExpenseData","addExpensesToSee","selectLanguage","selectCurrency","chooseTheme","lightTheme","darkTheme","next","previous","getStarted","welcome","tr","LanguageContext","LanguageProvider","setLanguage","savedLanguage","loadLanguage","changeLanguage","newLanguage","t","key","_translations$languag","useLanguage","context","Error","CURRENCIES","USD","symbol","locale","position","rate","EUR","GBP","JPY","CNY","INR","AUD","CAD","CHF","TRY","formatCurrency","currencyCode","currency","formattedNumber","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toFixed","getCurrencySymbol","_CURRENCIES$currencyC","CATEGORY_ICONS","Food","Transport","Shopping","Bills","Entertainment","Other","TransactionItem","transaction","onPress","theme","useTheme","colors","menuVisible","setMenuVisible","React","navigation","useNavigation","isExpense","Math","abs","icon","formattedDate","Date","toLocaleDateString","undefined","year","month","day","handleDelete","handleEdit","navigate","isEditing","Surface","styles","surface","elevation","TouchableRipple","touchable","accessibilityRole","accessibilityLabel","List","title","left","props","color","primary","right","_jsxs","View","rightContainer","Text","variant","success","Menu","visible","onDismiss","anchor","IconButton","size","Item","leadingIcon","titleStyle","descriptionStyle","textSecondary","StyleSheet","create","marginBottom","borderRadius","overflow","flex","fontWeight","marginTop","alignSelf","flexDirection","alignItems","gap","HomeScreen","reduce","acc","expenses","container","backgroundColor","background","FlatList","data","keyExtractor","item","renderItem","ListHeaderComponent","renderHeader","_Fragment","summaryContainer","balanceRow","Divider","divider","statsContainer","statItem","sectionTitle","ListEmptyComponent","renderEmptyList","emptyContainer","contentContainerStyle","listContent","FAB","fab","label","padding","paddingBottom","justifyContent","marginVertical","paddingVertical","margin","bottom","CustomSnackbar","message","fadeAnim","Animated","Value","timing","toValue","duration","useNativeDriver","start","snackbar","opacity","transform","translateY","interpolate","inputRange","outputRange","snackbarText","AddTransactionScreen","route","params","Boolean","existingTransaction","setDescription","setAmount","setCategory","isRecurring","setIsRecurring","transactionType","setTransactionType","errors","setErrors","showSnackbar","setShowSnackbar","showCategoryMenu","setShowCategoryMenu","toString","loadSelectedCurrency","ScrollView","content","SegmentedButtons","onValueChange","buttons","segmentedButtons","TextInput","mode","onChangeText","text","input","HelperText","keyboardType","Affix","categoryInputContainer","Icon","onPressIn","cat","switchContainer","Switch","Button","validateForm","newErrors","trim","isNaN","parseFloat","Object","keys","length","parsedAmount","finalAmount","trimmedCategory","transactionData","toISOString","split","newTransactionId","now","setTimeout","goBack","button","labelStyle","buttonLabel","textAlign","switchLabel","marginLeft","fontSize","CHART_TYPES","ChartScreen","chartType","setChartType","categorySums","values","sum","chartData","entries","x","y","percentage","colorScale","secondary","warning","noDataText","contentContainer","chartContainer","totalAmount","VictoryPie","innerRadius","padAngle","animate","onLoad","height","width","min","Dimensions","get","labels","labelComponent","VictoryLabel","stroke","strokeWidth","display","legendContainer","VictoryLegend","orientation","gutter","rowGutter","itemsPerRow","centerTitle","fill","parent","d","i","name","index","summaryRow","categoryInfo","colorIndicator","totalRow","flexGrow","flexWrap","minWidth","marginRight","flexShrink","borderTopWidth","paddingTop","paddingHorizontal","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","LightTheme","DarkTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","MD3LightTheme","info","border","spacing","xs","sm","md","lg","xl","xxl","typography","fontFamily","regular","medium","bold","xxxl","lineHeight","tight","normal","relaxed","roundness","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","ThemeProvider","colorScheme","useColorScheme","setIsDarkMode","currentTheme","PaperProvider","useAppTheme","SettingsScreen","notificationsEnabled","setNotificationsEnabled","showCurrencySelector","setShowCurrencySelector","showLanguageSelector","setShowLanguageSelector","currencies","code","details","showAddCategory","setShowAddCategory","showEditCategory","setShowEditCategory","setNewCategory","selectedCategory","setSelectedCategory","editedCategory","setEditedCategory","handleNotificationToggle","status","existingStatus","finalStatus","body","sound","trigger","hour","minute","repeats","channelId","alert","scheduleDailyReminder","selectedCurrencyDetails","find","handleAddCategory","handleEditCategory","renderDialog","RNModal","transparent","animationType","onRequestClose","modalOverlay","dialogContainer","dialogTitle","mainContainer","categoryActions","handleDeleteCategory","addButton","aboutSection","currencyList","TouchableOpacity","currencyItem","primaryContainer","handleCurrencySelect","currencyLabel","dialogCloseButton","languageList","lang","languageItem","languageLabel","dialogInput","dialogActions","currencySelector","top","translateX","maxHeight","currencySelectorHeader","currencySelectorTitle","closeButton","marginHorizontal","maxWidth","borderBottomWidth","borderBottomColor","LANGUAGES","OnboardingScreen","selectedLanguage","setSelectedLanguage","currentStep","setCurrentStep","handleThemeSelect","isDark","steps","renderLanguageStep","stepContainer","optionsContainer","handleLanguageSelect","optionButton","renderCurrencyStep","renderThemeStep","welcomeTitle","navigationButtons","prev","navButton","replace","Tab","createBottomTabNavigator","Stack","createStackNavigator","RootStack","HomeStack","Navigator","screenOptions","headerStyle","shadowOpacity","headerTintColor","headerTitleStyle","Screen","component","options","_route$params","TabNavigator","headerShown","tabBarStyle","borderTopColor","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","initialRouteName","tabBarIcon","RootNavigation","hasCompletedOnboarding","setHasCompletedOnboarding","checkOnboardingStatus","registerRootComponent","GestureHandlerRootView","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}