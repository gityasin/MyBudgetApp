{"version":3,"file":"static/js/main.ed44d812.js","mappings":"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","sources":["src/services/storage.js","src/context/TransactionsContext.js","src/context/CategoriesContext.js","src/i18n/translations.js","src/context/LanguageContext.js","src/services/format.js","src/components/TransactionItem.js","src/screens/HomeScreen.js","src/screens/AddTransactionScreen.js","src/screens/ChartScreen.js","src/notifications/NotificationsService.js","theme.js","src/screens/SettingsScreen.js","src/screens/OnboardingScreen.js","src/navigation/RootNavigation.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst TRANSACTIONS_KEY = '@transactions';\n\nexport async function loadTransactions() {\n  try {\n    const jsonValue = await AsyncStorage.getItem(TRANSACTIONS_KEY);\n    return jsonValue != null ? JSON.parse(jsonValue) : [];\n  } catch (e) {\n    console.warn('Error loading transactions:', e);\n    return [];\n  }\n}\n\nexport async function saveTransactions(transactions) {\n  try {\n    const jsonValue = JSON.stringify(transactions);\n    await AsyncStorage.setItem(TRANSACTIONS_KEY, jsonValue);\n  } catch (e) {\n    console.warn('Error saving transactions:', e);\n  }\n}\n","import React, { createContext, useReducer, useContext, useEffect, useState } from 'react';\nimport { loadTransactions, saveTransactions } from '../services/storage';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst initialState = {\n  transactions: [],\n};\n\nfunction transactionsReducer(state, action) {\n  console.log(\"Reducer called with action:\", action);\n\n  switch (action.type) {\n    case 'SET_TRANSACTIONS':\n      console.log(\"Setting transactions:\", action.payload);\n      return { ...state, transactions: action.payload };\n    case 'ADD_TRANSACTION':\n      console.log(\"Adding transaction:\", action.payload);\n      return { ...state, transactions: [...state.transactions, action.payload] };\n    case 'UPDATE_TRANSACTION':\n      console.log(\"Updating transaction:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.map(tx =>\n          tx.id === action.payload.id ? action.payload : tx\n        ),\n      };\n    case 'DELETE_TRANSACTION':\n      console.log(\"Deleting transaction with ID:\", action.payload);\n      return {\n        ...state,\n        transactions: state.transactions.filter(tx => tx.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n\nconst TransactionsContext = createContext();\n\nexport function TransactionsProvider({ children }) {\n  const [state, dispatch] = useReducer(transactionsReducer, initialState);\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  // Load initial data\n  useEffect(() => {\n    const loadInitialData = async () => {\n      const [stored, storedCurrency] = await Promise.all([\n        loadTransactions(),\n        AsyncStorage.getItem('selectedCurrency')\n      ]);\n\n      dispatch({ type: 'SET_TRANSACTIONS', payload: stored });\n      \n      if (storedCurrency) {\n        setSelectedCurrency(storedCurrency);\n      }\n    };\n\n    loadInitialData();\n  }, []);\n\n  // Save transactions whenever they change\n  useEffect(() => {\n    console.log(\"Saving transactions to storage:\", state.transactions);\n    saveTransactions(state.transactions);\n  }, [state.transactions]);\n\n  // Handle currency changes - now just updates the display currency\n  const handleCurrencyChange = async (newCurrency) => {\n    if (newCurrency === selectedCurrency) return;\n\n    try {\n      await AsyncStorage.setItem('selectedCurrency', newCurrency);\n      setSelectedCurrency(newCurrency);\n    } catch (error) {\n      console.error('Error changing currency:', error);\n    }\n  };\n\n  return (\n    <TransactionsContext.Provider \n      value={{ \n        state, \n        dispatch,\n        selectedCurrency,\n        handleCurrencyChange\n      }}\n    >\n      {children}\n    </TransactionsContext.Provider>\n  );\n}\n\nexport function useTransactions() {\n  return useContext(TransactionsContext);\n}","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst CATEGORIES_STORAGE_KEY = '@categories';\r\nconst DEFAULT_CATEGORIES = ['Food', 'Transport', 'Shopping', 'Bills', 'Entertainment', 'Other'];\r\n\r\nconst CategoriesContext = createContext();\r\n\r\nexport function CategoriesProvider({ children }) {\r\n  const [categories, setCategories] = useState(DEFAULT_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    // Load categories from storage on mount\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = async () => {\r\n    try {\r\n      const storedCategories = await AsyncStorage.getItem(CATEGORIES_STORAGE_KEY);\r\n      if (storedCategories) {\r\n        setCategories(JSON.parse(storedCategories));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n    }\r\n  };\r\n\r\n  const saveCategories = async (newCategories) => {\r\n    try {\r\n      await AsyncStorage.setItem(CATEGORIES_STORAGE_KEY, JSON.stringify(newCategories));\r\n      setCategories(newCategories);\r\n    } catch (error) {\r\n      console.error('Error saving categories:', error);\r\n    }\r\n  };\r\n\r\n  const addCategory = async (category) => {\r\n    if (!category || categories.includes(category)) return;\r\n    const newCategories = [...categories, category];\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const removeCategory = async (category) => {\r\n    const newCategories = categories.filter(c => c !== category);\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  const updateCategory = async (oldCategory, newCategory) => {\r\n    if (!newCategory || categories.includes(newCategory)) return;\r\n    const newCategories = categories.map(c => \r\n      c === oldCategory ? newCategory : c\r\n    );\r\n    await saveCategories(newCategories);\r\n  };\r\n\r\n  return (\r\n    <CategoriesContext.Provider \r\n      value={{\r\n        categories,\r\n        addCategory,\r\n        removeCategory,\r\n        updateCategory,\r\n      }}\r\n    >\r\n      {children}\r\n    </CategoriesContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCategories() {\r\n  return useContext(CategoriesContext);\r\n} ","export const translations = {\r\n  en: {\r\n    // General\r\n    settings: 'Settings',\r\n    save: 'Save',\r\n    cancel: 'Cancel',\r\n    add: 'Add',\r\n    edit: 'Edit',\r\n    delete: 'Delete',\r\n    close: 'Close',\r\n    update: 'Update',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'App Settings',\r\n    darkMode: 'Dark Mode',\r\n    darkModeDesc: 'Toggle dark/light theme',\r\n    dailyReminders: 'Daily Reminders',\r\n    dailyRemindersDesc: 'Get notified to add transactions',\r\n    currencyFormat: 'Currency Format',\r\n    currentCurrency: 'Current: ',\r\n    categories: 'Categories',\r\n    addNewCategory: 'Add New Category',\r\n    editCategory: 'Edit Category',\r\n    categoryName: 'Category Name',\r\n    language: 'Language',\r\n    languageDesc: 'Change application language',\r\n    \r\n    // About Section\r\n    about: 'About',\r\n    version: 'Version',\r\n    helpAndSupport: 'Help & Support',\r\n    helpDesc: 'Get assistance with the app',\r\n    privacyPolicy: 'Privacy Policy',\r\n    privacyPolicyDesc: 'Read our privacy policy',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'Add Transaction',\r\n    amount: 'Amount',\r\n    category: 'Category',\r\n    date: 'Date',\r\n    note: 'Note',\r\n    income: 'Income',\r\n    expense: 'Expense',\r\n    editTransaction: 'Edit Transaction',\r\n    description: 'Description',\r\n    recurringMonthly: 'Recurring Monthly?',\r\n    transactionUpdated: 'Transaction updated successfully!',\r\n    transactionAdded: 'Transaction added successfully!',\r\n    recentTransactions: 'Recent Transactions',\r\n    selectCategory: 'Select Category',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Description is required',\r\n    amountRequired: 'Amount is required',\r\n    invalidAmount: 'Please enter a valid positive amount',\r\n    categoryRequired: 'Category is required',\r\n    \r\n    // Home Screen\r\n    myBudget: 'My Budget',\r\n    totalBalance: 'Total Balance',\r\n    noTransactions: 'No transactions yet',\r\n    addFirstTransaction: 'Tap the + button to add your first transaction',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Expense Breakdown',\r\n    totalSpent: 'Total Spent',\r\n    pieChart: 'Pie Chart',\r\n    donutChart: 'Donut Chart',\r\n    summary: 'Summary',\r\n    total: 'Total',\r\n    noExpenseData: 'No expense data available',\r\n    addExpensesToSee: 'Add some expenses to see your spending breakdown',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Select Your Language',\r\n    selectCurrency: 'Select Your Currency',\r\n    chooseTheme: 'Choose Your Theme',\r\n    lightTheme: 'Light Theme',\r\n    darkTheme: 'Dark Theme',\r\n    next: 'Next',\r\n    previous: 'Previous',\r\n    getStarted: 'Get Started',\r\n    welcome: 'Welcome to My Budget',\r\n  },\r\n  tr: {\r\n    // General\r\n    settings: 'Ayarlar',\r\n    save: 'Kaydet',\r\n    cancel: 'İptal',\r\n    add: 'Ekle',\r\n    edit: 'Düzenle',\r\n    delete: 'Sil',\r\n    close: 'Kapat',\r\n    update: 'Güncelle',\r\n    \r\n    // Settings Screen\r\n    appSettings: 'Uygulama Ayarları',\r\n    darkMode: 'Karanlık Mod',\r\n    darkModeDesc: 'Karanlık/aydınlık tema değiştir',\r\n    dailyReminders: 'Günlük Hatırlatmalar',\r\n    dailyRemindersDesc: 'İşlem ekleme hatırlatmaları al',\r\n    currencyFormat: 'Para Birimi',\r\n    currentCurrency: 'Mevcut: ',\r\n    categories: 'Kategoriler',\r\n    addNewCategory: 'Yeni Kategori Ekle',\r\n    editCategory: 'Kategori Düzenle',\r\n    categoryName: 'Kategori Adı',\r\n    language: 'Dil',\r\n    languageDesc: 'Uygulama dilini değiştir',\r\n    \r\n    // About Section\r\n    about: 'Hakkında',\r\n    version: 'Versiyon',\r\n    helpAndSupport: 'Yardım & Destek',\r\n    helpDesc: 'Uygulama ile ilgili yardım alın',\r\n    privacyPolicy: 'Gizlilik Politikası',\r\n    privacyPolicyDesc: 'Gizlilik politikamızı okuyun',\r\n    \r\n    // Transaction Related\r\n    addTransaction: 'İşlem Ekle',\r\n    amount: 'Tutar',\r\n    category: 'Kategori',\r\n    date: 'Tarih',\r\n    note: 'Not',\r\n    income: 'Gelir',\r\n    expense: 'Gider',\r\n    editTransaction: 'İşlem Düzenle',\r\n    description: 'Açıklama',\r\n    recurringMonthly: 'Aylık Tekrar?',\r\n    transactionUpdated: 'İşlem başarıyla güncellendi!',\r\n    transactionAdded: 'İşlem başarıyla eklendi!',\r\n    recentTransactions: 'Son İşlemler',\r\n    selectCategory: 'Kategori Seç',\r\n    \r\n    // Form Validation\r\n    descriptionRequired: 'Açıklama gerekli',\r\n    amountRequired: 'Tutar gerekli',\r\n    invalidAmount: 'Lütfen geçerli bir pozitif tutar girin',\r\n    categoryRequired: 'Kategori gerekli',\r\n    \r\n    // Home Screen\r\n    myBudget: 'Bütçem',\r\n    totalBalance: 'Toplam Bakiye',\r\n    noTransactions: 'Henüz işlem yok',\r\n    addFirstTransaction: 'İlk işleminizi eklemek için + butonuna dokunun',\r\n    \r\n    // Charts Screen\r\n    expenseBreakdown: 'Gider Dağılımı',\r\n    totalSpent: 'Toplam Harcama',\r\n    pieChart: 'Pasta Grafik',\r\n    donutChart: 'Halka Grafik',\r\n    summary: 'Özet',\r\n    total: 'Toplam',\r\n    noExpenseData: 'Gider verisi bulunmuyor',\r\n    addExpensesToSee: 'Harcama dağılımını görmek için gider ekleyin',\r\n\r\n    // Onboarding Screen\r\n    selectLanguage: 'Dilinizi Seçin',\r\n    selectCurrency: 'Para Biriminizi Seçin',\r\n    chooseTheme: 'Temanızı Seçin',\r\n    lightTheme: 'Açık Tema',\r\n    darkTheme: 'Koyu Tema',\r\n    next: 'İleri',\r\n    previous: 'Geri',\r\n    getStarted: 'Başlayın',\r\n    welcome: 'My Budget\\'a Hoş Geldiniz',\r\n  }\r\n}; ","import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { translations } from '../i18n/translations';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language, setLanguage] = useState('en');\r\n\r\n  useEffect(() => {\r\n    // Load saved language preference\r\n    const loadLanguage = async () => {\r\n      try {\r\n        const savedLanguage = await AsyncStorage.getItem('userLanguage');\r\n        if (savedLanguage) {\r\n          setLanguage(savedLanguage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading language:', error);\r\n      }\r\n    };\r\n    \r\n    loadLanguage();\r\n  }, []);\r\n\r\n  const changeLanguage = async (newLanguage) => {\r\n    try {\r\n      await AsyncStorage.setItem('userLanguage', newLanguage);\r\n      setLanguage(newLanguage);\r\n    } catch (error) {\r\n      console.error('Error saving language:', error);\r\n    }\r\n  };\r\n\r\n  const t = (key) => {\r\n    return translations[language]?.[key] || translations.en[key] || key;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, changeLanguage, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n}; ","// Currency formatting utilities\r\nexport const CURRENCIES = {\r\n  TRY: { symbol: '₺', locale: 'tr-TR', position: 'after', rate: 31.89 },\r\n  USD: { symbol: '$', locale: 'en-US', position: 'before', rate: 1 },\r\n  EUR: { symbol: '€', locale: 'de-DE', position: 'after', rate: 0.91 },\r\n  GBP: { symbol: '£', locale: 'en-GB', position: 'before', rate: 0.79 },\r\n  JPY: { symbol: '¥', locale: 'ja-JP', position: 'before', rate: 149.45 },\r\n  CNY: { symbol: '¥', locale: 'zh-CN', position: 'before', rate: 7.23 },\r\n  INR: { symbol: '₹', locale: 'en-IN', position: 'before', rate: 83.12 },\r\n  AUD: { symbol: '$', locale: 'en-AU', position: 'before', rate: 1.54 },\r\n  CAD: { symbol: '$', locale: 'en-CA', position: 'before', rate: 1.36 },\r\n  CHF: { symbol: 'CHF', locale: 'de-CH', position: 'before', rate: 0.89 },\r\n};\r\n\r\nexport const convertAmount = (amount, fromCurrency = 'USD', toCurrency = 'USD') => {\r\n  const fromRate = CURRENCIES[fromCurrency]?.rate || 1;\r\n  const toRate = CURRENCIES[toCurrency]?.rate || 1;\r\n  \r\n  // Convert to USD first, then to target currency\r\n  const amountInUSD = amount / fromRate;\r\n  return amountInUSD * toRate;\r\n};\r\n\r\nexport const formatCurrency = (amount, currencyCode = 'USD') => {\r\n  try {\r\n    const currency = CURRENCIES[currencyCode] || CURRENCIES.USD;\r\n    const formattedNumber = new Intl.NumberFormat(currency.locale, {\r\n      style: 'decimal',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    }).format(amount);\r\n\r\n    return currency.position === 'before' \r\n      ? `${currency.symbol}${formattedNumber}`\r\n      : `${formattedNumber} ${currency.symbol}`;\r\n  } catch (error) {\r\n    console.warn('Error formatting currency:', error);\r\n    return `${CURRENCIES.USD.symbol}${amount.toFixed(2)}`;\r\n  }\r\n};\r\n\r\nexport const getCurrencySymbol = (currencyCode = 'USD') => {\r\n  return CURRENCIES[currencyCode]?.symbol || CURRENCIES.USD.symbol;\r\n};\r\n\r\nexport const getAvailableCurrencies = () => {\r\n  return Object.entries(CURRENCIES).map(([code, details]) => ({\r\n    code,\r\n    symbol: details.symbol,\r\n    label: `${code} (${details.symbol})`,\r\n  }));\r\n};\r\n","import React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { Surface, Text, List, useTheme, TouchableRipple, Menu, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CATEGORY_ICONS = {\n  Food: 'silverware-fork-knife',\n  Transport: 'car',\n  Shopping: 'cart',\n  Bills: 'file-document',\n  Entertainment: 'gamepad-variant',\n  Other: 'dots-horizontal',\n};\n\nexport default function TransactionItem({ transaction, onPress }) {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { dispatch, selectedCurrency } = useTransactions();\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const navigation = useNavigation();\n  const { t } = useLanguage();\n\n  const isExpense = transaction.amount < 0;\n  const amount = Math.abs(transaction.amount);\n  const icon = CATEGORY_ICONS[transaction.category] || CATEGORY_ICONS.Other;\n\n  const formattedDate = new Date(transaction.date).toLocaleDateString(undefined, {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  const handleDelete = () => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: transaction.id,\n    });\n    setMenuVisible(false);\n  };\n\n  const handleEdit = () => {\n    setMenuVisible(false);\n    navigation.navigate('AddTransaction', {\n      isEditing: true,\n      transaction: {\n        ...transaction,\n        amount: Math.abs(transaction.amount),\n      },\n    });\n  };\n\n  const dynamicStyles = {\n    menuContent: {\n      backgroundColor: colors.surface,\n    }\n  };\n\n  return (\n    <Surface style={styles.surface} elevation={1}>\n      <View style={styles.container}>\n        <TouchableRipple\n          onPress={(e) => {\n            if (!menuVisible) {\n              onPress();\n            }\n          }}\n          style={[styles.touchable, { flex: 1 }]}\n          accessibilityRole=\"button\"\n          disabled={menuVisible}\n          accessibilityLabel={`${transaction.description} transaction of ${isExpense ? t('expense') : t('income')} ${formatCurrency(amount, selectedCurrency)}`}\n        >\n          <List.Item\n            title={transaction.description}\n            description={`${transaction.category} • ${formattedDate}`}\n            left={props => (\n              <MaterialCommunityIcons\n                name={icon}\n                size={24}\n                color={colors.primary}\n                style={props.style}\n              />\n            )}\n            right={props => (\n              <View style={styles.rightContainer}>\n                <Text\n                  {...props}\n                  variant=\"titleMedium\"\n                  style={[\n                    styles.amount,\n                    { color: isExpense ? colors.error : colors.success }\n                  ]}\n                >\n                  {isExpense ? '-' : '+'}{formatCurrency(amount, selectedCurrency)}\n                </Text>\n              </View>\n            )}\n            titleStyle={styles.title}\n            descriptionStyle={[styles.description, { color: colors.textSecondary }]}\n          />\n        </TouchableRipple>\n        \n        <View style={styles.menuContainer}>\n          <Menu\n            visible={menuVisible}\n            onDismiss={() => setMenuVisible(false)}\n            anchor={\n              <TouchableOpacity \n                onPress={(e) => {\n                  e.stopPropagation();\n                  setMenuVisible(true);\n                }}\n                style={styles.menuButton}\n              >\n                <MaterialCommunityIcons\n                  name=\"dots-vertical\"\n                  size={24}\n                  color={colors.primary}\n                />\n              </TouchableOpacity>\n            }\n            contentStyle={[dynamicStyles.menuContent]}\n            anchorPosition=\"bottom\"\n            statusBarHeight={0}\n            overlayAccessibilityLabel=\"Close menu\"\n          >\n            <Menu.Item\n              onPress={(e) => {\n                e.stopPropagation();\n                handleEdit();\n              }}\n              title={t('edit')}\n              leadingIcon={props => (\n                <MaterialCommunityIcons\n                  name=\"pencil\"\n                  size={20}\n                  color={props.color}\n                />\n              )}\n            />\n            <Menu.Item\n              onPress={(e) => {\n                e.stopPropagation();\n                handleDelete();\n              }}\n              title={t('delete')}\n              leadingIcon={props => (\n                <MaterialCommunityIcons\n                  name=\"delete\"\n                  size={20}\n                  color={props.color}\n                />\n              )}\n            />\n          </Menu>\n        </View>\n      </View>\n    </Surface>\n  );\n}\n\nconst styles = StyleSheet.create({\n  surface: {\n    marginBottom: 8,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  touchable: {\n    flex: 1,\n  },\n  title: {\n    fontWeight: '500',\n  },\n  description: {\n    marginTop: 4,\n  },\n  amount: {\n    fontWeight: '600',\n    alignSelf: 'center',\n  },\n  rightContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  menuContainer: {\n    paddingRight: 8,\n  },\n  menuButton: {\n    padding: 8,\n  },\n  menu: {\n    position: 'absolute',\n    right: 8,\n    zIndex: 3,\n  },\n});","import React from 'react';\nimport { View, StyleSheet, FlatList } from 'react-native';\nimport { Text, FAB, Surface, useTheme, Divider } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport TransactionItem from '../components/TransactionItem';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function HomeScreen({ navigation }) {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n\n  // Calculate totals in the selected currency\n  const total = state.transactions.reduce((acc, tx) => acc + tx.amount, 0);\n  const income = state.transactions\n    .filter(tx => tx.amount > 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n  const expenses = state.transactions\n    .filter(tx => tx.amount < 0)\n    .reduce((acc, tx) => acc + tx.amount, 0);\n\n  const renderHeader = () => (\n    <>\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"headlineMedium\" style={styles.title}>\n          {t('myBudget')}\n        </Text>\n        \n        <View style={styles.balanceRow}>\n          <Text variant=\"titleLarge\">{t('totalBalance')}</Text>\n          <Text \n            variant=\"headlineMedium\"\n            style={{ color: total >= 0 ? theme.colors.success : theme.colors.error }}\n          >\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n\n        <Divider style={styles.divider} />\n        \n        <View style={styles.statsContainer}>\n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.success }}>\n              {t('income')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.success }}>\n              +{formatCurrency(income, selectedCurrency)}\n            </Text>\n          </View>\n          \n          <View style={styles.statItem}>\n            <Text variant=\"titleMedium\" style={{ color: theme.colors.error }}>\n              {t('expense')}\n            </Text>\n            <Text variant=\"titleLarge\" style={{ color: theme.colors.error }}>\n              {formatCurrency(Math.abs(expenses), selectedCurrency)}\n            </Text>\n          </View>\n        </View>\n      </Surface>\n\n      <Text variant=\"titleLarge\" style={styles.sectionTitle}>\n        {t('recentTransactions')}\n      </Text>\n    </>\n  );\n\n  const renderEmptyList = () => (\n    <View style={styles.emptyContainer}>\n      <Text variant=\"bodyLarge\" style={{ color: theme.colors.textSecondary }}>\n        {t('noTransactions')}\n      </Text>\n      <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n        {t('addFirstTransaction')}\n      </Text>\n    </View>\n  );\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <FlatList\n        data={state.transactions}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => (\n          <TransactionItem \n            transaction={item}\n            onPress={() => {\n              navigation.navigate('AddTransaction', {\n                isEditing: true,\n                transaction: item,\n              });\n            }}\n          />\n        )}\n        ListHeaderComponent={renderHeader}\n        ListEmptyComponent={renderEmptyList}\n        contentContainerStyle={styles.listContent}\n      />\n\n      <FAB\n        icon={props => (\n          <MaterialCommunityIcons\n            name=\"plus\"\n            size={24}\n            color={props.color}\n          />\n        )}\n        style={[styles.fab, { backgroundColor: theme.colors.primary }]}\n        onPress={() => navigation.navigate('AddTransaction')}\n        label={t('addTransaction')}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  listContent: {\n    padding: 16,\n    paddingBottom: 80, // Space for FAB\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  title: {\n    marginBottom: 16,\n  },\n  balanceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  statItem: {\n    alignItems: 'flex-start',\n  },\n  sectionTitle: {\n    marginBottom: 16,\n  },\n  emptyContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 32,\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, Animated } from 'react-native';\nimport { TextInput, Button, Switch, Text, HelperText, useTheme, SegmentedButtons, Menu } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { getCurrencySymbol } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CustomSnackbar = ({ visible, message, style }) => {\n  const [fadeAnim] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    if (visible) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return (\n    <Animated.View\n      style={[\n        styles.snackbar,\n        style,\n        {\n          opacity: fadeAnim,\n          transform: [{\n            translateY: fadeAnim.interpolate({\n              inputRange: [0, 1],\n              outputRange: [50, 0],\n            }),\n          }],\n        },\n      ]}\n    >\n      <Text style={styles.snackbarText}>{message}</Text>\n    </Animated.View>\n  );\n};\n\nexport default function AddTransactionScreen({ navigation, route }) {\n  console.log('=== AddTransactionScreen Component Start ===');\n  console.log('Navigation prop:', navigation);\n  console.log('Route prop:', route);\n  \n  const { dispatch } = useTransactions();\n  const { categories, addCategory } = useCategories();\n  console.log('TransactionsContext dispatch available:', !!dispatch);\n  \n  const theme = useTheme();\n  console.log('Theme loaded:', !!theme);\n  \n  const { colors } = theme;\n  const { t } = useLanguage();\n  const [selectedCurrency, setSelectedCurrency] = useState('USD');\n\n  console.log('AddTransactionScreen mounted with route params:', route.params);\n\n  const params = route.params || {};\n  const isEditing = Boolean(params.isEditing);\n  const existingTransaction = params.transaction;\n\n  console.log('Is editing:', isEditing);\n  console.log('Existing transaction:', existingTransaction);\n\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState('');\n  const [category, setCategory] = useState('');\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [transactionType, setTransactionType] = useState('expense');\n  const [errors, setErrors] = useState({});\n  const [showSnackbar, setShowSnackbar] = useState(false);\n  const [showCategoryMenu, setShowCategoryMenu] = useState(false);\n\n  useEffect(() => {\n    console.log('Setting form values. IsEditing:', isEditing, 'Transaction:', existingTransaction);\n    if (isEditing && existingTransaction) {\n      console.log('Existing transaction ID:', existingTransaction.id);\n      setDescription(existingTransaction.description || '');\n      setAmount(existingTransaction.amount ? Math.abs(existingTransaction.amount).toString() : '');\n      setCategory(existingTransaction.category || '');\n      setIsRecurring(Boolean(existingTransaction.isRecurring));\n      setTransactionType(existingTransaction.amount < 0 ? 'expense' : 'income');\n    }\n    loadSelectedCurrency();\n  }, [isEditing, existingTransaction]);\n\n  const loadSelectedCurrency = async () => {\n    try {\n      const currency = await AsyncStorage.getItem('selectedCurrency');\n      if (currency) {\n        setSelectedCurrency(currency);\n      }\n    } catch (error) {\n      console.warn('Error loading currency preference:', error);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n\n    if (!description.trim()) {\n      newErrors.description = t('descriptionRequired');\n    }\n\n    if (!amount) {\n      newErrors.amount = t('amountRequired');\n    } else if (isNaN(amount) || parseFloat(amount) <= 0) {\n      newErrors.amount = t('invalidAmount');\n    }\n\n    if (!category.trim()) {\n      newErrors.category = t('categoryRequired');\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async () => {\n    if (!validateForm()) return;\n\n    const parsedAmount = parseFloat(amount);\n    const finalAmount = transactionType === 'expense' ? -parsedAmount : parsedAmount;\n    const trimmedCategory = category.trim();\n\n    // If the category is new (not in the existing categories), add it\n    if (trimmedCategory && !categories.includes(trimmedCategory)) {\n      await addCategory(trimmedCategory);\n    }\n\n    const transactionData = {\n      description: description.trim(),\n      amount: finalAmount,\n      date: new Date().toISOString().split('T')[0],\n      category: trimmedCategory,\n      isRecurring,\n      type: transactionType,\n    };\n\n    if (isEditing) {\n      dispatch({\n        type: 'UPDATE_TRANSACTION',\n        payload: {\n          id: existingTransaction.id,\n          ...transactionData,\n        },\n      });\n    } else {\n      const newTransactionId = Date.now().toString();\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: {\n          id: newTransactionId,\n          ...transactionData,\n        },\n      });\n    }\n\n    setShowSnackbar(true);\n    setTimeout(() => {\n      setShowSnackbar(false);\n      navigation.goBack();\n    }, 1500);\n  };\n\n  return (\n    <>\n      <ScrollView style={[styles.container, { backgroundColor: colors.background }]}>\n        <View style={styles.content}>\n          <Text variant=\"headlineMedium\" style={[styles.title, { color: colors.primary }]}>\n            {isEditing ? t('editTransaction') : t('addTransaction')}\n          </Text>\n\n          <SegmentedButtons\n            value={transactionType}\n            onValueChange={setTransactionType}\n            buttons={[\n              { value: 'expense', label: t('expense') },\n              { value: 'income', label: t('income') },\n            ]}\n            style={styles.segmentedButtons}\n          />\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('description')}\n            value={description}\n            onChangeText={(text) => {\n              setDescription(text);\n              setErrors({ ...errors, description: '' });\n            }}\n            error={!!errors.description}\n            style={styles.input}\n            accessibilityLabel=\"Transaction description input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.description}>\n            {errors.description}\n          </HelperText>\n\n          <TextInput\n            mode=\"outlined\"\n            label={t('amount')}\n            value={amount}\n            onChangeText={(text) => {\n              setAmount(text);\n              setErrors({ ...errors, amount: '' });\n            }}\n            keyboardType=\"decimal-pad\"\n            error={!!errors.amount}\n            style={styles.input}\n            left={<TextInput.Affix text={getCurrencySymbol(selectedCurrency)} />}\n            accessibilityLabel=\"Transaction amount input\"\n          />\n          <HelperText type=\"error\" visible={!!errors.amount}>\n            {errors.amount}\n          </HelperText>\n\n          <View style={styles.categoryInputContainer}>\n            <Menu\n              visible={showCategoryMenu}\n              onDismiss={() => setShowCategoryMenu(false)}\n              anchor={\n                <TextInput\n                  mode=\"outlined\"\n                  label={t('category')}\n                  value={category}\n                  onChangeText={(text) => {\n                    setCategory(text);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  error={!!errors.category}\n                  style={[styles.input, { flex: 1 }]}\n                  right={\n                    <TextInput.Icon \n                      icon={() => (\n                        <MaterialCommunityIcons\n                          name=\"menu-down\"\n                          size={24}\n                          color={colors.primary}\n                        />\n                      )}\n                      onPress={() => setShowCategoryMenu(true)}\n                    />\n                  }\n                  onPressIn={() => setShowCategoryMenu(true)}\n                  accessibilityLabel=\"Transaction category input\"\n                />\n              }\n            >\n              {categories.map((cat) => (\n                <Menu.Item\n                  key={cat}\n                  onPress={() => {\n                    setCategory(cat);\n                    setShowCategoryMenu(false);\n                    setErrors({ ...errors, category: '' });\n                  }}\n                  title={cat}\n                />\n              ))}\n            </Menu>\n          </View>\n          <HelperText type=\"error\" visible={!!errors.category}>\n            {errors.category}\n          </HelperText>\n\n          <View style={styles.switchContainer}>\n            <Text variant=\"bodyLarge\">{t('recurringMonthly')}</Text>\n            <Switch\n              value={isRecurring}\n              onValueChange={setIsRecurring}\n              color={colors.primary}\n            />\n          </View>\n\n          <Button\n            mode=\"contained\"\n            onPress={handleSubmit}\n            style={styles.button}\n            labelStyle={styles.buttonLabel}\n            accessibilityLabel={isEditing ? \"Update transaction button\" : \"Add transaction button\"}\n          >\n            {isEditing ? t('update') : t('add')}\n          </Button>\n        </View>\n      </ScrollView>\n      <CustomSnackbar\n        visible={showSnackbar}\n        message={isEditing ? t('transactionUpdated') : t('transactionAdded')}\n        style={{ backgroundColor: colors.success }}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 16,\n  },\n  title: {\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  input: {\n    marginBottom: 8,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 16,\n  },\n  switchLabel: {\n    marginLeft: 8,\n  },\n  snackbar: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    backgroundColor: '#4CAF50',\n    borderRadius: 8,\n    padding: 16,\n    elevation: 4,\n  },\n  snackbarText: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n  },\n  button: {\n    marginTop: 16,\n    paddingVertical: 8,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  categoryInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});","import React, { useState } from 'react';\nimport { View, StyleSheet, Dimensions, ScrollView, Platform } from 'react-native';\nimport { VictoryPie, VictoryLabel, VictoryLegend, VictoryAnimation } from 'victory-native';\nimport { Text, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { formatCurrency } from '../services/format';\nimport { useLanguage } from '../context/LanguageContext';\n\nconst CHART_TYPES = [\n  { value: 'pie', label: 'pieChart' },\n  { value: 'donut', label: 'donutChart' },\n];\n\nexport default function ChartScreen() {\n  const { state, selectedCurrency } = useTransactions();\n  const theme = useTheme();\n  const { t } = useLanguage();\n  const [chartType, setChartType] = useState('donut');\n\n  // Calculate category totals and percentages for expenses only\n  const categorySums = state.transactions\n    .filter(tx => tx.amount < 0) // Only include expenses\n    .reduce((acc, tx) => {\n      const cat = tx.category || 'Uncategorized';\n      acc[cat] = (acc[cat] || 0) + Math.abs(tx.amount); // Use absolute value for display\n      return acc;\n    }, {});\n\n  const total = Object.values(categorySums).reduce((sum, amount) => sum + amount, 0);\n\n  const chartData = Object.entries(categorySums).map(([category, amount]) => ({\n    x: category,\n    y: amount,\n    percentage: ((amount / total) * 100).toFixed(1)\n  }));\n\n  const colorScale = [\n    theme.colors.primary,\n    theme.colors.secondary,\n    theme.colors.error,\n    theme.colors.success,\n    theme.colors.warning,\n    '#9333EA',\n    '#2563EB',\n    '#DC2626',\n  ];\n\n  if (chartData.length === 0) {\n    return (\n      <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n        <Text variant=\"headlineMedium\" style={styles.noDataText}>\n          {t('noExpenseData')}\n        </Text>\n        <Text variant=\"bodyMedium\" style={{ color: theme.colors.textSecondary }}>\n          {t('addExpensesToSee')}\n        </Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView \n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <Text variant=\"headlineMedium\" style={[styles.title, { color: theme.colors.primary }]}>\n        {t('expenseBreakdown')}\n      </Text>\n      \n      <Surface style={styles.chartContainer} elevation={2}>\n        <Text variant=\"titleLarge\" style={[styles.totalAmount, { color: theme.colors.error }]}>\n          {t('totalSpent')}: {formatCurrency(total, selectedCurrency)}\n        </Text>\n\n        <SegmentedButtons\n          value={chartType}\n          onValueChange={setChartType}\n          buttons={CHART_TYPES.map(type => ({\n            ...type,\n            label: t(type.label)\n          }))}\n          style={styles.segmentedButtons}\n        />\n        \n        <VictoryPie\n          data={chartData}\n          colorScale={colorScale}\n          innerRadius={chartType === 'donut' ? 80 : 0}\n          padAngle={2}\n          animate={{\n            duration: 1000,\n            onLoad: { duration: 500 }\n          }}\n          height={300}\n          width={Math.min(350, Dimensions.get('window').width - 40)}\n          labels={() => ''}\n          labelComponent={<VictoryLabel text={''} />}\n          style={{\n            data: {\n              stroke: theme.colors.background,\n              strokeWidth: 1,\n            },\n            labels: { display: 'none' }\n          }}\n        />\n\n        <View style={styles.legendContainer}>\n          <VictoryLegend\n            x={10}\n            y={0}\n            orientation=\"horizontal\"\n            gutter={20}\n            rowGutter={10}\n            itemsPerRow={2}\n            centerTitle\n            style={{\n              labels: { \n                fill: theme.colors.text,\n                fontSize: 12,\n              },\n              parent: {\n                width: '100%',\n              }\n            }}\n            data={chartData.map((d, i) => ({\n              name: `${d.x}: ${formatCurrency(d.y, selectedCurrency)} (${d.percentage}%)`,\n              symbol: { fill: colorScale[i % colorScale.length] }\n            }))}\n          />\n        </View>\n      </Surface>\n\n      <Surface style={styles.summaryContainer} elevation={2}>\n        <Text variant=\"titleMedium\" style={{ color: theme.colors.text }}>\n          {t('summary')}\n        </Text>\n        {chartData.map((item, index) => (\n          <View key={item.x} style={styles.summaryRow}>\n            <View style={styles.categoryInfo}>\n              <View \n                style={[\n                  styles.colorIndicator, \n                  { backgroundColor: colorScale[index % colorScale.length] }\n                ]} \n              />\n              <Text variant=\"bodyMedium\">{item.x}</Text>\n            </View>\n            <Text variant=\"bodyMedium\" style={{ color: theme.colors.text }}>\n              {formatCurrency(item.y, selectedCurrency)}\n            </Text>\n          </View>\n        ))}\n        <View style={[styles.summaryRow, styles.totalRow]}>\n          <Text variant=\"titleMedium\">{t('total')}</Text>\n          <Text variant=\"titleMedium\" style={{ color: theme.colors.primary }}>\n            {formatCurrency(total, selectedCurrency)}\n          </Text>\n        </View>\n      </Surface>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    padding: 16,\n    flexGrow: 1,\n  },\n  title: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  chartContainer: {\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n    alignItems: 'center',\n    width: '100%',\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  summaryContainer: {\n    padding: 16,\n    borderRadius: 8,\n    width: '100%',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    flexWrap: 'wrap',\n  },\n  categoryInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 150,\n    marginRight: 8,\n  },\n  colorIndicator: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 8,\n    flexShrink: 0,\n  },\n  totalRow: {\n    borderTopWidth: 1,\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  noDataText: {\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  totalAmount: {\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  legendContainer: {\n    marginTop: 20,\n    width: '100%',\n    paddingHorizontal: 10,\n    alignItems: 'flex-start',\n  },\n});\n","import * as Notifications from 'expo-notifications';\nimport { Platform } from 'react-native';\n\nexport async function scheduleDailyReminder() {\n  const { status: existingStatus } = await Notifications.getPermissionsAsync();\n  let finalStatus = existingStatus;\n  if (existingStatus !== 'granted') {\n    const { status } = await Notifications.requestPermissionsAsync();\n    finalStatus = status;\n  }\n  if (finalStatus !== 'granted') {\n    alert('Notification permissions not granted!');\n    return;\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('daily-reminders', {\n      name: 'Daily Reminders',\n      importance: Notifications.AndroidImportance.MAX,\n    });\n  }\n\n  await Notifications.cancelAllScheduledNotificationsAsync();\n\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: 'Budget Reminder',\n      body: 'Don’t forget to log your expenses today!',\n      sound: true,\n    },\n    trigger: {\n      hour: 9,\n      minute: 0,\n      repeats: true,\n      channelId: 'daily-reminders', \n    },\n  });\n\n  alert('Daily reminder scheduled for 9 AM.');\n}\n\n// Configure notification handler\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: false,\n  }),\n});\n","import React, { createContext, useContext, useState } from 'react';\nimport { MD3LightTheme, MD3DarkTheme, adaptNavigationTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { useColorScheme } from 'react-native';\n\nconst { LightTheme, DarkTheme } = adaptNavigationTheme({\n  reactNavigationLight: NavigationDefaultTheme,\n  reactNavigationDark: NavigationDarkTheme,\n});\n\nconst lightTheme = {\n  ...MD3LightTheme,\n  ...LightTheme,\n  colors: {\n    ...MD3LightTheme.colors,\n    ...LightTheme.colors,\n    primary: '#3B82F6',\n    secondary: '#F59E0B',\n    background: '#FFFFFF',\n    surface: '#F3F4F6',\n    text: '#1F2937',\n    textSecondary: '#6B7280',\n    error: '#EF4444',\n    success: '#10B981',\n    warning: '#F59E0B',\n    info: '#3B82F6',\n    border: '#E5E7EB',\n  },\n  spacing: {\n    xs: 4,\n    sm: 8,\n    md: 16,\n    lg: 24,\n    xl: 32,\n    xxl: 48,\n  },\n  typography: {\n    fontFamily: {\n      regular: 'System',\n      medium: 'System',\n      bold: 'System',\n    },\n    fontSize: {\n      xs: 12,\n      sm: 14,\n      md: 16,\n      lg: 18,\n      xl: 20,\n      xxl: 24,\n      xxxl: 32,\n    },\n    lineHeight: {\n      tight: 1.25,\n      normal: 1.5,\n      relaxed: 1.75,\n    },\n  },\n  roundness: 8,\n};\n\nconst darkTheme = {\n  ...MD3DarkTheme,\n  ...DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    ...DarkTheme.colors,\n    primary: '#60A5FA',\n    secondary: '#FBBF24',\n    background: '#111827',\n    surface: '#1F2937',\n    text: '#F9FAFB',\n    textSecondary: '#9CA3AF',\n    error: '#F87171',\n    success: '#34D399',\n    warning: '#FBBF24',\n    info: '#60A5FA',\n    border: '#374151',\n  },\n  spacing: lightTheme.spacing,\n  typography: lightTheme.typography,\n  roundness: lightTheme.roundness,\n};\n\nconst ThemeContext = createContext({\n  theme: lightTheme,\n  isDarkMode: false,\n  toggleTheme: () => {},\n});\n\nexport function ThemeProvider({ children }) {\n  const colorScheme = useColorScheme();\n  const [isDarkMode, setIsDarkMode] = useState(colorScheme === 'dark');\n  const currentTheme = isDarkMode ? darkTheme : lightTheme;\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme: currentTheme, isDarkMode, toggleTheme }}>\n      <PaperProvider theme={currentTheme}>{children}</PaperProvider>\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useAppTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useAppTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Modal as RNModal } from 'react-native';\nimport { List, Switch, Divider, Text, Surface, useTheme, Button, TextInput, IconButton } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { scheduleDailyReminder } from '../notifications/NotificationsService';\nimport { useAppTheme } from '../../theme';\nimport { getAvailableCurrencies } from '../services/format';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useTransactions } from '../context/TransactionsContext';\nimport { useCategories } from '../context/CategoriesContext';\nimport { useLanguage } from '../context/LanguageContext';\n\nexport default function SettingsScreen() {\n  const theme = useTheme();\n  const { colors } = theme;\n  const { isDarkMode, toggleTheme } = useAppTheme();\n  const { language, changeLanguage, t } = useLanguage();\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n  const [showCurrencySelector, setShowCurrencySelector] = useState(false);\n  const [showLanguageSelector, setShowLanguageSelector] = useState(false);\n  const currencies = getAvailableCurrencies();\n  const { selectedCurrency, handleCurrencyChange } = useTransactions();\n  const { categories, addCategory, removeCategory, updateCategory } = useCategories();\n  \n  // Category management state\n  const [showAddCategory, setShowAddCategory] = useState(false);\n  const [showEditCategory, setShowEditCategory] = useState(false);\n  const [newCategory, setNewCategory] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [editedCategory, setEditedCategory] = useState('');\n\n  const handleNotificationToggle = async () => {\n    if (!notificationsEnabled) {\n      await scheduleDailyReminder();\n    }\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n\n  const handleCurrencySelect = async (currencyCode) => {\n    await handleCurrencyChange(currencyCode);\n    setShowCurrencySelector(false);\n  };\n\n  const selectedCurrencyDetails = currencies.find(c => c.code === selectedCurrency);\n\n  const handleAddCategory = () => {\n    if (newCategory.trim()) {\n      addCategory(newCategory.trim());\n      setNewCategory('');\n      setShowAddCategory(false);\n    }\n  };\n\n  const handleEditCategory = () => {\n    if (editedCategory.trim() && selectedCategory) {\n      updateCategory(selectedCategory, editedCategory.trim());\n      setEditedCategory('');\n      setSelectedCategory(null);\n      setShowEditCategory(false);\n    }\n  };\n\n  const handleDeleteCategory = (category) => {\n    removeCategory(category);\n  };\n\n  const renderDialog = (visible, title, content, onDismiss) => {\n    return (\n      <RNModal\n        visible={visible}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={onDismiss}\n      >\n        <View style={styles.modalOverlay}>\n          <Surface style={[styles.dialogContainer, { backgroundColor: colors.surface }]} elevation={5}>\n            <Text variant=\"titleLarge\" style={[styles.dialogTitle, { color: colors.text }]}>\n              {title}\n            </Text>\n            {content}\n          </Surface>\n        </View>\n      </RNModal>\n    );\n  };\n\n  const renderAddCategoryDialog = () => {\n    return renderDialog(\n      showAddCategory,\n      t('addNewCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={newCategory}\n          onChangeText={setNewCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowAddCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleAddCategory}>{t('add')}</Button>\n        </View>\n      </View>,\n      () => setShowAddCategory(false)\n    );\n  };\n\n  const renderEditCategoryDialog = () => {\n    return renderDialog(\n      showEditCategory,\n      t('editCategory'),\n      <View>\n        <TextInput\n          label={t('categoryName')}\n          value={editedCategory}\n          onChangeText={setEditedCategory}\n          mode=\"outlined\"\n          style={styles.dialogInput}\n        />\n        <View style={styles.dialogActions}>\n          <Button onPress={() => setShowEditCategory(false)}>{t('cancel')}</Button>\n          <Button onPress={handleEditCategory}>{t('update')}</Button>\n        </View>\n      </View>,\n      () => setShowEditCategory(false)\n    );\n  };\n\n  const renderCurrencySelector = () => {\n    return renderDialog(\n      showCurrencySelector,\n      'Select Currency',\n      <View>\n        <ScrollView style={styles.currencyList}>\n          {currencies.map((currency) => (\n            <TouchableOpacity\n              key={currency.code}\n              style={[\n                styles.currencyItem,\n                selectedCurrency === currency.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => handleCurrencySelect(currency.code)}\n            >\n              <Text style={[styles.currencyLabel, { color: colors.text }]}>\n                {currency.label}\n              </Text>\n              {selectedCurrency === currency.code && (\n                <MaterialCommunityIcons\n                  name=\"check\"\n                  size={24}\n                  color={colors.primary}\n                />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowCurrencySelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          Close\n        </Button>\n      </View>,\n      () => setShowCurrencySelector(false)\n    );\n  };\n\n  const renderLanguageSelector = () => {\n    const languages = [\n      { code: 'tr', label: 'Türkçe' },\n      { code: 'en', label: 'English' }\n    ];\n\n    return renderDialog(\n      showLanguageSelector,\n      t('language'),\n      <View>\n        <ScrollView style={styles.languageList}>\n          {languages.map((lang) => (\n            <TouchableOpacity\n              key={lang.code}\n              style={[\n                styles.languageItem,\n                language === lang.code && { backgroundColor: colors.primaryContainer }\n              ]}\n              onPress={() => {\n                changeLanguage(lang.code);\n                setShowLanguageSelector(false);\n              }}\n            >\n              <Text style={[styles.languageLabel, { color: colors.text }]}>\n                {lang.label}\n              </Text>\n              {language === lang.code && (\n                <MaterialCommunityIcons\n                  name=\"check\"\n                  size={24}\n                  color={colors.primary}\n                />\n              )}\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        <Button \n          onPress={() => setShowLanguageSelector(false)}\n          style={styles.dialogCloseButton}\n        >\n          {t('close')}\n        </Button>\n      </View>,\n      () => setShowLanguageSelector(false)\n    );\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: colors.background }]}>\n      <ScrollView style={styles.container}>\n        <Surface style={[styles.surface, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('appSettings')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('darkMode')}\n              description={t('darkModeDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"theme-light-dark\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              right={() => (\n                <Switch\n                  value={isDarkMode}\n                  onValueChange={toggleTheme}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('dailyReminders')}\n              description={t('dailyRemindersDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"bell\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              right={() => (\n                <Switch\n                  value={notificationsEnabled}\n                  onValueChange={handleNotificationToggle}\n                  color={colors.primary}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('currencyFormat')}\n              description={`${t('currentCurrency')}${selectedCurrencyDetails?.label || 'USD ($)'}`}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"currency-usd\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => setShowCurrencySelector(true)}\n            />\n            <Divider />\n\n            <List.Item\n              title={t('language')}\n              description={t('languageDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"translate\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => setShowLanguageSelector(true)}\n            />\n          </List.Section>\n\n          <Divider style={styles.divider} />\n\n          <List.Section>\n            <Text variant=\"titleMedium\" style={[styles.sectionTitle, { color: colors.text }]}>\n              {t('categories')}\n            </Text>\n            \n            {categories.map((category) => (\n              <List.Item\n                key={category}\n                title={category}\n                right={props => (\n                  <View style={styles.categoryActions}>\n                    <MaterialCommunityIcons\n                      name=\"pencil\"\n                      size={24}\n                      color={colors.primary}\n                      onPress={() => {\n                        setSelectedCategory(category);\n                        setEditedCategory(category);\n                        setShowEditCategory(true);\n                      }}\n                      style={{ padding: 8 }}\n                    />\n                    <MaterialCommunityIcons\n                      name=\"delete\"\n                      size={24}\n                      color={colors.error}\n                      onPress={() => handleDeleteCategory(category)}\n                      style={{ padding: 8 }}\n                    />\n                  </View>\n                )}\n              />\n            ))}\n            \n            <Button\n              mode=\"outlined\"\n              onPress={() => setShowAddCategory(true)}\n              style={styles.addButton}\n            >\n              {t('addNewCategory')}\n            </Button>\n          </List.Section>\n        </Surface>\n\n        <Surface style={[styles.surface, styles.aboutSection, { backgroundColor: colors.surface }]} elevation={1}>\n          <Text variant=\"titleLarge\" style={[styles.sectionTitle, { color: colors.text }]}>\n            {t('about')}\n          </Text>\n          \n          <List.Section>\n            <List.Item\n              title={t('version')}\n              description=\"1.0.0\"\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"information\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('helpAndSupport')}\n              description={t('helpDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"help-circle\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => {/* TODO: Implement help section */}}\n            />\n            <Divider />\n            \n            <List.Item\n              title={t('privacyPolicy')}\n              description={t('privacyPolicyDesc')}\n              left={props => (\n                <MaterialCommunityIcons\n                  name=\"shield-account\"\n                  size={24}\n                  color={props.color}\n                  style={props.style}\n                />\n              )}\n              onPress={() => {/* TODO: Implement privacy policy */}}\n            />\n          </List.Section>\n        </Surface>\n      </ScrollView>\n\n      {renderCurrencySelector()}\n      {renderLanguageSelector()}\n      {renderAddCategoryDialog()}\n      {renderEditCategoryDialog()}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  surface: {\n    borderRadius: 8,\n    marginBottom: 16,\n    padding: 16,\n  },\n  sectionTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  aboutSection: {\n    marginTop: 8,\n  },\n  currencySelector: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: [{ translateX: -150 }, { translateY: -200 }],\n    width: 300,\n    maxHeight: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  currencySelectorHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  currencySelectorTitle: {\n    fontWeight: '600',\n  },\n  closeButton: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  currencyList: {\n    flexGrow: 0,\n  },\n  currencyItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 4,\n  },\n  currencyLabel: {\n    fontSize: 16,\n  },\n  divider: {\n    marginVertical: 16,\n  },\n  categoryActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  addButton: {\n    marginTop: 16,\n    marginHorizontal: 16,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dialogContainer: {\n    width: '90%',\n    maxWidth: 400,\n    borderRadius: 8,\n    padding: 16,\n  },\n  dialogTitle: {\n    marginBottom: 16,\n    fontWeight: '600',\n  },\n  dialogInput: {\n    marginBottom: 16,\n  },\n  dialogActions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 8,\n  },\n  dialogCloseButton: {\n    marginTop: 16,\n  },\n  languageList: {\n    maxHeight: 200,\n  },\n  languageItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(0,0,0,0.1)',\n  },\n  languageLabel: {\n    fontSize: 16,\n  },\n});\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView, Alert } from 'react-native';\r\nimport { Text, Button, Surface, useTheme, SegmentedButtons } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useTransactions } from '../context/TransactionsContext';\r\nimport { useAppTheme } from '../../theme';\r\nimport { CURRENCIES } from '../services/format';\r\nimport { CommonActions } from '@react-navigation/native';\r\n\r\nconst LANGUAGES = [\r\n  { value: 'tr', label: 'Türkçe' },\r\n  { value: 'en', label: 'English' },\r\n];\r\n\r\nexport default function OnboardingScreen({ navigation }) {\r\n  const theme = useTheme();\r\n  const { colors } = theme;\r\n  const { changeLanguage, t } = useLanguage();\r\n  const { handleCurrencyChange } = useTransactions();\r\n  const { isDarkMode, toggleTheme } = useAppTheme();\r\n\r\n  // Set initial language to Turkish since it's the first option\r\n  const [selectedLanguage, setSelectedLanguage] = useState('tr');\r\n  const [selectedCurrency, setSelectedCurrency] = useState('TRY');\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n\r\n  // Set initial language when component mounts\r\n  useEffect(() => {\r\n    handleLanguageSelect('tr');\r\n  }, []);\r\n\r\n  const handleLanguageSelect = (lang) => {\r\n    setSelectedLanguage(lang);\r\n    changeLanguage(lang);\r\n  };\r\n\r\n  const handleCurrencySelect = (currency) => {\r\n    setSelectedCurrency(currency);\r\n    handleCurrencyChange(currency);\r\n  };\r\n\r\n  const handleThemeSelect = (isDark) => {\r\n    if (isDark !== isDarkMode) {\r\n      toggleTheme();\r\n    }\r\n  };\r\n\r\n  const handleComplete = async () => {\r\n    try {\r\n      const preferences = {\r\n        language: selectedLanguage,\r\n        currency: selectedCurrency,\r\n        theme: isDarkMode ? 'dark' : 'light'\r\n      };\r\n      \r\n      console.log('Starting onboarding completion process...');\r\n      console.log('Preferences to save:', preferences);\r\n      \r\n      // First set the preferences\r\n      await AsyncStorage.setItem('userPreferences', JSON.stringify(preferences));\r\n      console.log('Preferences saved');\r\n      \r\n      // Then mark onboarding as complete\r\n      await AsyncStorage.setItem('hasCompletedOnboarding', 'true');\r\n      console.log('Onboarding marked as complete');\r\n\r\n      // Try multiple navigation methods\r\n      try {\r\n        // Method 1: Reset\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'MainApp' }],\r\n        });\r\n      } catch (navError) {\r\n        console.error('Reset navigation failed:', navError);\r\n        try {\r\n          // Method 2: Replace\r\n          navigation.replace('MainApp');\r\n        } catch (replaceError) {\r\n          console.error('Replace navigation failed:', replaceError);\r\n          try {\r\n            // Method 3: Dispatch\r\n            navigation.dispatch(\r\n              CommonActions.reset({\r\n                index: 0,\r\n                routes: [{ name: 'MainApp' }],\r\n              })\r\n            );\r\n          } catch (dispatchError) {\r\n            console.error('Dispatch navigation failed:', dispatchError);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in handleComplete:', error);\r\n      Alert.alert(\r\n        'Error',\r\n        'There was an error saving your preferences. Please try again.',\r\n        [{ text: 'OK' }]\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderLanguageStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('selectLanguage')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        {LANGUAGES.map((lang) => (\r\n          <Button\r\n            key={lang.value}\r\n            mode={selectedLanguage === lang.value ? 'contained' : 'outlined'}\r\n            onPress={() => handleLanguageSelect(lang.value)}\r\n            style={styles.optionButton}\r\n          >\r\n            {lang.label}\r\n          </Button>\r\n        ))}\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const renderCurrencyStep = () => {\r\n    const currencyEntries = Object.entries(CURRENCIES);\r\n    const sortedCurrencies = [\r\n      // Put TRY first\r\n      currencyEntries.find(([code]) => code === 'TRY'),\r\n      // Then add all other currencies\r\n      ...currencyEntries.filter(([code]) => code !== 'TRY'),\r\n    ].filter(Boolean); // Remove any undefined entries\r\n\r\n    return (\r\n      <View style={styles.stepContainer}>\r\n        <Text variant=\"headlineMedium\" style={styles.title}>\r\n          {t('selectCurrency')}\r\n        </Text>\r\n        <Surface style={styles.optionsContainer} elevation={2}>\r\n          <ScrollView style={styles.currencyList}>\r\n            {sortedCurrencies.map(([code, currency]) => (\r\n              <Button\r\n                key={code}\r\n                mode={selectedCurrency === code ? 'contained' : 'outlined'}\r\n                onPress={() => handleCurrencySelect(code)}\r\n                style={styles.optionButton}\r\n              >\r\n                {`${currency.symbol} ${code}`}\r\n              </Button>\r\n            ))}\r\n          </ScrollView>\r\n        </Surface>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderThemeStep = () => (\r\n    <View style={styles.stepContainer}>\r\n      <Text variant=\"headlineMedium\" style={styles.title}>\r\n        {t('chooseTheme')}\r\n      </Text>\r\n      <Surface style={styles.optionsContainer} elevation={2}>\r\n        <Button\r\n          mode={!isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(false)}\r\n          style={styles.optionButton}\r\n          left={(props) => (\r\n            <MaterialCommunityIcons\r\n              name=\"white-balance-sunny\"\r\n              size={24}\r\n              color={props.color}\r\n            />\r\n          )}\r\n        >\r\n          {t('lightTheme')}\r\n        </Button>\r\n        <Button\r\n          mode={isDarkMode ? 'contained' : 'outlined'}\r\n          onPress={() => handleThemeSelect(true)}\r\n          style={styles.optionButton}\r\n          left={(props) => (\r\n            <MaterialCommunityIcons\r\n              name=\"weather-night\"\r\n              size={24}\r\n              color={props.color}\r\n            />\r\n          )}\r\n        >\r\n          {t('darkTheme')}\r\n        </Button>\r\n      </Surface>\r\n    </View>\r\n  );\r\n\r\n  const steps = [\r\n    renderLanguageStep,\r\n    renderCurrencyStep,\r\n    renderThemeStep,\r\n  ];\r\n\r\n  return (\r\n    <View style={[styles.container, { backgroundColor: colors.background }]}>\r\n      <Text variant=\"displaySmall\" style={[styles.welcomeTitle, { color: colors.primary }]}>\r\n        {t('welcome')}\r\n      </Text>\r\n      \r\n      {steps[currentStep]()}\r\n      \r\n      <View style={styles.navigationButtons}>\r\n        {currentStep > 0 && (\r\n          <Button\r\n            mode=\"outlined\"\r\n            onPress={() => setCurrentStep(prev => prev - 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('previous')}\r\n          </Button>\r\n        )}\r\n        \r\n        {currentStep < steps.length - 1 ? (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={() => setCurrentStep(prev => prev + 1)}\r\n            style={styles.navButton}\r\n          >\r\n            {t('next')}\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            mode=\"contained\"\r\n            onPress={handleComplete}\r\n            style={styles.navButton}\r\n          >\r\n            {t('getStarted')}\r\n          </Button>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  stepContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    marginBottom: 32,\r\n    textAlign: 'center',\r\n  },\r\n  optionsContainer: {\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    width: '100%',\r\n    maxWidth: 400,\r\n  },\r\n  optionButton: {\r\n    marginVertical: 8,\r\n  },\r\n  currencyList: {\r\n    maxHeight: 300,\r\n  },\r\n  navigationButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: 16,\r\n  },\r\n  navButton: {\r\n    flex: 1,\r\n    marginHorizontal: 8,\r\n  },\r\n  welcomeTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 32,\r\n    marginBottom: 16,\r\n  },\r\n  buttonContent: {\r\n    flexDirection: 'row-reverse',\r\n    alignItems: 'center',\r\n  },\r\n}); ","import React, { useEffect, useState, useCallback } from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { useTheme } from 'react-native-paper';\nimport Icon from '@expo/vector-icons/MaterialCommunityIcons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { View, Text } from 'react-native';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\n\nimport HomeScreen from '../screens/HomeScreen';\nimport AddTransactionScreen from '../screens/AddTransactionScreen';\nimport ChartScreen from '../screens/ChartScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport OnboardingScreen from '../screens/OnboardingScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\nconst RootStack = createStackNavigator();\n\nfunction HomeStack() {\n  const { colors } = useTheme();\n  \n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: colors.background,\n          elevation: 0,\n          shadowOpacity: 0,\n        },\n        headerTintColor: colors.text,\n        headerTitleStyle: {\n          fontWeight: '600',\n        },\n      }}\n    >\n      <Stack.Screen \n        name=\"Home\" \n        component={HomeScreen}\n        options={{\n          title: 'My Budget',\n        }}\n      />\n      <Stack.Screen \n        name=\"AddTransaction\" \n        component={AddTransactionScreen}\n        options={({ route }) => ({\n          title: route.params?.isEditing ? 'Edit Transaction' : 'Add Transaction',\n          headerStyle: {\n            backgroundColor: colors.background,\n            elevation: 0,\n            shadowOpacity: 0,\n          },\n        })}\n      />\n    </Stack.Navigator>\n  );\n}\n\nfunction TabNavigator() {\n  const { colors } = useTheme();\n\n  const screenOptions = {\n    headerShown: true,\n    headerStyle: {\n      backgroundColor: colors.background,\n      elevation: 0,\n      shadowOpacity: 0,\n    },\n    headerTintColor: colors.text,\n    headerTitleStyle: {\n      fontWeight: '600',\n    },\n    tabBarStyle: {\n      backgroundColor: colors.surface,\n      borderTopColor: colors.border,\n      paddingVertical: 8,\n      height: 60,\n    },\n    tabBarActiveTintColor: colors.primary,\n    tabBarInactiveTintColor: colors.textSecondary,\n    tabBarLabelStyle: {\n      fontSize: 12,\n      fontWeight: '500',\n    },\n  };\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"HomeStack\"\n      screenOptions={screenOptions}\n    >\n      <Tab.Screen\n        name=\"HomeStack\"\n        component={HomeStack}\n        options={{\n          title: 'Home',\n          headerShown: false,\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Charts\"\n        component={ChartScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"chart-bar\" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => (\n            <Icon name=\"cog\" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default function RootNavigation() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasCompletedOnboarding, setHasCompletedOnboarding] = useState(false);\n  const [, forceUpdate] = useState({});\n\n  const checkOnboardingStatus = useCallback(async () => {\n    try {\n      console.log('Checking onboarding status...');\n      const status = await AsyncStorage.getItem('hasCompletedOnboarding');\n      console.log('Retrieved onboarding status:', status);\n      \n      const shouldShowMainApp = status === 'true';\n      console.log('Should show main app:', shouldShowMainApp);\n      \n      setHasCompletedOnboarding(shouldShowMainApp);\n      forceUpdate({});\n    } catch (error) {\n      console.error('Error in checkOnboardingStatus:', error);\n      setHasCompletedOnboarding(false);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Check on mount\n  useEffect(() => {\n    checkOnboardingStatus();\n  }, [checkOnboardingStatus]);\n\n  // Check on focus\n  useFocusEffect(\n    useCallback(() => {\n      console.log('Screen focused, checking onboarding status');\n      checkOnboardingStatus();\n    }, [checkOnboardingStatus])\n  );\n\n  // Add listener for storage changes\n  useEffect(() => {\n    const checkStorageChanges = async () => {\n      try {\n        const status = await AsyncStorage.getItem('hasCompletedOnboarding');\n        if (status === 'true' && !hasCompletedOnboarding) {\n          console.log('Storage changed, updating navigation state');\n          setHasCompletedOnboarding(true);\n          forceUpdate({});\n        }\n      } catch (error) {\n        console.error('Error checking storage changes:', error);\n      }\n    };\n\n    const interval = setInterval(checkStorageChanges, 500);\n    return () => clearInterval(interval);\n  }, [hasCompletedOnboarding]);\n\n  if (isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  console.log('Rendering RootNavigation with hasCompletedOnboarding:', hasCompletedOnboarding);\n\n  return (\n    <RootStack.Navigator screenOptions={{ headerShown: false }}>\n      {!hasCompletedOnboarding ? (\n        <RootStack.Screen \n          name=\"Onboarding\" \n          component={OnboardingScreen}\n          options={{\n            animationEnabled: false,\n            gestureEnabled: false\n          }}\n        />\n      ) : (\n        <RootStack.Screen \n          name=\"MainApp\" \n          component={TabNavigator}\n          options={{\n            animationEnabled: false\n          }}\n        />\n      )}\n    </RootStack.Navigator>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { TransactionsProvider } from './src/context/TransactionsContext';\nimport { CategoriesProvider } from './src/context/CategoriesContext';\nimport { LanguageProvider } from './src/context/LanguageContext';\nimport RootNavigation from './src/navigation/RootNavigation';\nimport { ThemeProvider } from './theme';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Platform, Text } from 'react-native';\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <ThemeProvider>\n          <LanguageProvider>\n            <CategoriesProvider>\n              <TransactionsProvider>\n                <NavigationContainer>\n                  <RootNavigation />\n                </NavigationContainer>\n              </TransactionsProvider>\n            </CategoriesProvider>\n          </LanguageProvider>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/MyBudgetApp/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [352], () => (__webpack_require__(67317)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["TRANSACTIONS_KEY","async","loadTransactions","jsonValue","AsyncStorage","getItem","JSON","parse","e","console","warn","initialState","transactions","transactionsReducer","state","action","log","type","payload","_objectSpread","map","tx","id","filter","TransactionsContext","createContext","TransactionsProvider","children","dispatch","useReducer","selectedCurrency","setSelectedCurrency","useState","useEffect","stored","storedCurrency","Promise","all","loadInitialData","stringify","setItem","saveTransactions","_jsx","Provider","value","handleCurrencyChange","newCurrency","error","useTransactions","useContext","CATEGORIES_STORAGE_KEY","DEFAULT_CATEGORIES","CategoriesContext","CategoriesProvider","categories","setCategories","loadCategories","storedCategories","saveCategories","newCategories","addCategory","category","includes","removeCategory","c","updateCategory","oldCategory","newCategory","useCategories","translations","en","settings","save","cancel","add","edit","delete","close","update","appSettings","darkMode","darkModeDesc","dailyReminders","dailyRemindersDesc","currencyFormat","currentCurrency","addNewCategory","editCategory","categoryName","language","languageDesc","about","version","helpAndSupport","helpDesc","privacyPolicy","privacyPolicyDesc","addTransaction","amount","date","note","income","expense","editTransaction","description","recurringMonthly","transactionUpdated","transactionAdded","recentTransactions","selectCategory","descriptionRequired","amountRequired","invalidAmount","categoryRequired","myBudget","totalBalance","noTransactions","addFirstTransaction","expenseBreakdown","totalSpent","pieChart","donutChart","summary","total","noExpenseData","addExpensesToSee","selectLanguage","selectCurrency","chooseTheme","lightTheme","darkTheme","next","previous","getStarted","welcome","tr","LanguageContext","LanguageProvider","setLanguage","savedLanguage","loadLanguage","changeLanguage","newLanguage","t","key","_translations$languag","useLanguage","context","Error","CURRENCIES","TRY","symbol","locale","position","rate","USD","EUR","GBP","JPY","CNY","INR","AUD","CAD","CHF","formatCurrency","currencyCode","currency","formattedNumber","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","format","toFixed","getCurrencySymbol","_CURRENCIES$currencyC","CATEGORY_ICONS","Food","Transport","Shopping","Bills","Entertainment","Other","TransactionItem","transaction","onPress","theme","useTheme","colors","menuVisible","setMenuVisible","React","navigation","useNavigation","isExpense","Math","abs","icon","formattedDate","Date","toLocaleDateString","undefined","year","month","day","dynamicStyles","menuContent","backgroundColor","surface","Surface","styles","elevation","_jsxs","View","container","TouchableRipple","touchable","flex","accessibilityRole","disabled","accessibilityLabel","List","title","left","props","MaterialCommunityIcons","name","size","color","primary","right","rightContainer","Text","variant","success","titleStyle","descriptionStyle","textSecondary","menuContainer","Menu","visible","onDismiss","anchor","TouchableOpacity","stopPropagation","menuButton","contentStyle","anchorPosition","statusBarHeight","overlayAccessibilityLabel","Item","navigate","isEditing","leadingIcon","StyleSheet","create","marginBottom","borderRadius","overflow","flexDirection","alignItems","fontWeight","marginTop","alignSelf","gap","paddingRight","padding","menu","zIndex","HomeScreen","reduce","acc","expenses","background","FlatList","data","keyExtractor","item","renderItem","ListHeaderComponent","renderHeader","_Fragment","summaryContainer","balanceRow","Divider","divider","statsContainer","statItem","sectionTitle","ListEmptyComponent","renderEmptyList","emptyContainer","contentContainerStyle","listContent","FAB","fab","label","paddingBottom","justifyContent","marginVertical","paddingVertical","margin","bottom","CustomSnackbar","message","fadeAnim","Animated","Value","timing","toValue","duration","useNativeDriver","start","snackbar","opacity","transform","translateY","interpolate","inputRange","outputRange","snackbarText","AddTransactionScreen","route","params","Boolean","existingTransaction","setDescription","setAmount","setCategory","isRecurring","setIsRecurring","transactionType","setTransactionType","errors","setErrors","showSnackbar","setShowSnackbar","showCategoryMenu","setShowCategoryMenu","toString","loadSelectedCurrency","ScrollView","content","SegmentedButtons","onValueChange","buttons","segmentedButtons","TextInput","mode","onChangeText","text","input","HelperText","keyboardType","Affix","categoryInputContainer","Icon","onPressIn","cat","switchContainer","Switch","Button","validateForm","newErrors","trim","isNaN","parseFloat","Object","keys","length","parsedAmount","finalAmount","trimmedCategory","transactionData","toISOString","split","newTransactionId","now","setTimeout","goBack","button","labelStyle","buttonLabel","textAlign","switchLabel","marginLeft","fontSize","CHART_TYPES","ChartScreen","chartType","setChartType","categorySums","values","sum","chartData","entries","x","y","percentage","colorScale","secondary","warning","noDataText","contentContainer","chartContainer","totalAmount","VictoryPie","innerRadius","padAngle","animate","onLoad","height","width","min","Dimensions","get","labels","labelComponent","VictoryLabel","stroke","strokeWidth","display","legendContainer","VictoryLegend","orientation","gutter","rowGutter","itemsPerRow","centerTitle","fill","parent","d","i","index","summaryRow","categoryInfo","colorIndicator","totalRow","flexGrow","flexWrap","minWidth","marginRight","flexShrink","borderTopWidth","paddingTop","paddingHorizontal","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","LightTheme","DarkTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","MD3LightTheme","info","border","spacing","xs","sm","md","lg","xl","xxl","typography","fontFamily","regular","medium","bold","xxxl","lineHeight","tight","normal","relaxed","roundness","MD3DarkTheme","ThemeContext","isDarkMode","toggleTheme","ThemeProvider","colorScheme","useColorScheme","setIsDarkMode","currentTheme","PaperProvider","useAppTheme","SettingsScreen","notificationsEnabled","setNotificationsEnabled","showCurrencySelector","setShowCurrencySelector","showLanguageSelector","setShowLanguageSelector","currencies","code","details","showAddCategory","setShowAddCategory","showEditCategory","setShowEditCategory","setNewCategory","selectedCategory","setSelectedCategory","editedCategory","setEditedCategory","handleNotificationToggle","status","existingStatus","finalStatus","body","sound","trigger","hour","minute","repeats","channelId","alert","scheduleDailyReminder","selectedCurrencyDetails","find","handleAddCategory","handleEditCategory","renderDialog","RNModal","transparent","animationType","onRequestClose","modalOverlay","dialogContainer","dialogTitle","mainContainer","categoryActions","handleDeleteCategory","addButton","aboutSection","currencyList","currencyItem","primaryContainer","handleCurrencySelect","currencyLabel","dialogCloseButton","languageList","lang","languageItem","languageLabel","dialogInput","dialogActions","currencySelector","top","translateX","maxHeight","currencySelectorHeader","currencySelectorTitle","closeButton","marginHorizontal","maxWidth","borderBottomWidth","borderBottomColor","LANGUAGES","OnboardingScreen","selectedLanguage","setSelectedLanguage","currentStep","setCurrentStep","handleLanguageSelect","handleThemeSelect","isDark","steps","renderLanguageStep","stepContainer","optionsContainer","optionButton","renderCurrencyStep","currencyEntries","sortedCurrencies","renderThemeStep","welcomeTitle","navigationButtons","prev","navButton","preferences","reset","routes","navError","replace","replaceError","CommonActions","dispatchError","Alert","buttonContent","Tab","createBottomTabNavigator","Stack","createStackNavigator","RootStack","HomeStack","Navigator","screenOptions","headerStyle","shadowOpacity","headerTintColor","headerTitleStyle","Screen","component","options","_route$params","TabNavigator","headerShown","tabBarStyle","borderTopColor","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarLabelStyle","initialRouteName","tabBarIcon","RootNavigation","isLoading","setIsLoading","hasCompletedOnboarding","setHasCompletedOnboarding","forceUpdate","checkOnboardingStatus","useCallback","shouldShowMainApp","useFocusEffect","interval","setInterval","clearInterval","animationEnabled","gestureEnabled","registerRootComponent","GestureHandlerRootView","SafeAreaProvider","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}